<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mercury.Messaging.Core</name>
    </assembly>
    <members>
        <member name="T:Mercury.Messaging.Routing.RuntimeUri">
            <summary>
            A static runtime URI utility.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeUri.Create(System.String)">
            <summary>
            Creates a runtime URI from the specified name.
            </summary>
            <param name="name">The name string from which to create a URI.</param>
            <returns>A runtime URI constructed from the specified name.</returns>
        </member>
        <member name="T:Mercury.Messaging.Messages.Request`1">
            <summary>
            Represents a message stereotype designating a message to which a response is expected.
            </summary>
            <typeparam name="T">The type of the message body.</typeparam>
        </member>
        <member name="T:Mercury.Messaging.Messages.IMessage`1">
            <summary>
            Represents a generic interface for messages.
            </summary>
            <typeparam name="T">The type of the message body.</typeparam>
        </member>
        <member name="T:Mercury.Messaging.Messages.IMessage">
            <summary>
            Represents a basic interface for all messages.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.IMessage`1.Body">
            <summary>
            Gets the message body.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Messages.IRequestHeader">
            <summary>
            Represents header information for a request.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Messages.IMessageHeader">
            <summary>
            Represents a set of header information for a message.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.IMessageHeader.SenderAddress">
            <summary>
            The sender address of the message.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.IMessageHeader.DestinationAddress">
            <summary>
            The address for the message destination.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.IMessageHeader.CorrelationId">
            <summary>
            The identifier correlating this message to a message exchange/conversation.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.IMessageHeader.MessageId">
            <summary>
            The identifier for this message.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.IMessageHeader.FaultAddress">
            <summary>
            The address where message delivery faults should be sent.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.IMessageHeader.Headers">
            <summary>
            Gets the headers collection.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.IRequestHeader.ConstructResponseChannel(Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Constructs a response channel using the specified environment.
            </summary>
            <param name="environment">The environment from which to send a response.</param>
        </member>
        <member name="P:Mercury.Messaging.Messages.IRequestHeader.RequestId">
            <summary>
            Gets the request identifier.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.IRequestHeader.ResponseAddress">
            <summary>
            Gets the address on which to route the response.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.IRequestHeader.ResponseEndPoint">
            <summary>
            Gets the end point at which to respond.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.Request`1.ResponseChannel">
            <summary>
            Gets the channel on which the response should be sent.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Instrumentation.MethodContextInfo">
            <summary>
            Provides context data on a method.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MethodContextInfo.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Mercury.Messaging.Instrumentation.MethodContextInfo"/> class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MethodContextInfo.GetSchema">
            <summary>
            Returns the XML schema.
            </summary>
            <returns>Default value is null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MethodContextInfo.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the context info from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MethodContextInfo.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the context info to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MethodContextInfo.ToString">
            <summary>
            Returns a System.String that represents the current <see cref="T:Mercury.Messaging.Instrumentation.MethodContextInfo"/>.
            </summary>
            <returns>A System.String that represents the current <see cref="T:Mercury.Messaging.Instrumentation.MethodContextInfo"/>.</returns>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MethodContextInfo.ObjectName">
            <summary>
            Gets the name of the object on which the method was declared.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MethodContextInfo.MethodName">
            <summary>
            Gets the name of the method.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Runtime.Scheduler.ScheduledOperationExecutor">
            <summary>
            Implementation of IScheduledOperationExecutor interface.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Runtime.Scheduler.IScheduledOperationExecutor">
            <summary>
            Represents an executable scheduled operation.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Runtime.Scheduler.IScheduledOperation">
            <summary>
            Represents a scheduled operation.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.IScheduledOperation.Cancel">
            <summary>
            Cancels the scheduled operation.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.Scheduler.IScheduledOperation.ScheduledAt">
            <summary>
            Gets the date and time at which the scheduled operation is set to execute.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.IScheduledOperationExecutor.Execute">
            <summary>
            Executes the operation.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.ScheduledOperationExecutor.#ctor(Mercury.Messaging.Runtime.RuntimeEnvironment,System.DateTime,Microsoft.Ccr.Core.Handler)">
            <summary>
            Initializes a default instance of the ScheduledOperationExecutor class with the specified values.
            </summary>
            <param name="environment">The runtime environment on which to execute.</param>
            <param name="scheduledAt">The date and time of the next scheduled run.</param>
            <param name="operation">A handler delegate to the operation to execute.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.ScheduledOperationExecutor.Cancel">
            <summary>
            Cancels the scheduled operation.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.ScheduledOperationExecutor.Execute">
            <summary>
            Executes the operation.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.Scheduler.ScheduledOperationExecutor.ScheduledAt">
            <summary>
            Gets the date and time at which the scheduled operation is set to execute.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Runtime.ResourceLimitException">
            <summary>
            Thrown when a resource pool attempts to allocate a resource beyonds its limit.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourceLimitException.#ctor">
            <summary>
            Initializes a default instance of the ResourceLimitException class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourceLimitException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ResourceLimitException 
            class with the specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourceLimitException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ResourceLimitException class 
            with the specified error message and inner exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the 
            current exception, or null if no exception is specified.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourceLimitException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the ResourceLimitException class with serialized data. 
            </summary>
            <param name="info">The Syste.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The Syste.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Mercury.Messaging.Messages.ResponseBase`1">
            <summary>
            The base class for all response stereotype implementations.
            </summary>
            <typeparam name="TResponse">The type of message body for this response.</typeparam>
        </member>
        <member name="T:Mercury.Messaging.Messages.MessageBase`1">
            <summary>
            Represents a base implementation of a generic IMessage.
            </summary>
            <typeparam name="T">The type of the message body.</typeparam>
        </member>
        <member name="M:Mercury.Messaging.Messages.MessageBase`1.#ctor">
            <summary>
            Initializes a default instance of the MessageBase(Of T) class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.MessageBase`1.#ctor(`0)">
            <summary>
            Initializes a default instance of the MessageBase(Of T) class with the specified message body.
            </summary>
            <param name="message">The message body.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.MessageBase`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a default instance of the MessageBase(Of T) class with the specified message body and headers.
            </summary>
            <param name="message">The message body.</param>
            <param name="headers">A dictionary of headers information.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.MessageBase`1.GetSchema">
            <summary>
            Returns the XML schema.
            </summary>
            <returns>Default value is null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Messages.MessageBase`1.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the message from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.MessageBase`1.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the message to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="P:Mercury.Messaging.Messages.MessageBase`1.SenderAddress">
            <summary>
            Gets or sets the sender address URI.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.MessageBase`1.DestinationAddress">
            <summary>
            Gets or sets the destination address URI.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.MessageBase`1.CorrelationId">
            <summary>
            Gets or sets the correlation ID.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.MessageBase`1.MessageId">
            <summary>
            Gets or sets the unique identifier for this message.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.MessageBase`1.FaultAddress">
            <summary>
            Gets or sets the fault address URI.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.MessageBase`1.Headers">
            <summary>
            Gets the message header dictionary.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.MessageBase`1.Body">
            <summary>
            Gets the message body.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Messages.Response`1">
            <summary>
            Represents a message stereotype designating a response to an accepted request.
            </summary>
            <typeparam name="T">The type of the message body.</typeparam>
        </member>
        <member name="T:Mercury.Messaging.Messages.IResponseHeader">
            <summary>
            Represents a set of message header information for a response.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.IResponseHeader.RequestId">
            <summary>
            Gets the request identifier.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseBase`1.#ctor">
            <summary>
            Initializes a default instance of the ResponseBase(Of TResponse) class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseBase`1.#ctor(`0,System.String)">
            <summary>
            Initializes a default instance of the ResponseBase(Of TResponse) class with the specified values.
            </summary>
            <param name="message">The message response.</param>
            <param name="requestId">The request ID.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseBase`1.#ctor(`0,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a default instance of the ResponseBase(Of TResponse) class with the specified values.
            </summary>
            <param name="message">The message response.</param>
            <param name="headers">A headers dictionary.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseBase`1.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the response from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseBase`1.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the response to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="P:Mercury.Messaging.Messages.ResponseBase`1.RequestId">
            <summary>
            Gets or sets the request ID.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Messages.ResponseBase`2">
            <summary>
            The base class for a response stereotype implementation.
            </summary>
            <typeparam name="TRequest">The type of the request triggering this response.</typeparam>
            <typeparam name="TResponse">The type of the message body of this response.</typeparam>
        </member>
        <member name="T:Mercury.Messaging.Messages.Response`2">
            <summary>
            Represents a message stereotype designating a response to an accepted request.
            </summary>
            <typeparam name="TRequest">The type of the request to which this response is given.</typeparam>
            <typeparam name="T">The type of the message body.</typeparam>
        </member>
        <member name="P:Mercury.Messaging.Messages.Response`2.Request">
            <summary>
            The request to which this response is given.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseBase`2.#ctor">
            <summary>
            Initializes a default instance of the ResponseBase(Of TRequest, TResponse) class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseBase`2.#ctor(Mercury.Messaging.Messages.Request{`0},`1)">
            <summary>
            Initializes a default instance of the ResponseBase(Of TRequest, TResponse) class with the specified values.
            </summary>
            <param name="request">The request to respond to.</param>
            <param name="message">The message response.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseBase`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the response from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseBase`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the response to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="P:Mercury.Messaging.Messages.ResponseBase`2.Request">
            <summary>
            Gets or sets the associated request.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.RemotingUtil">
            <summary>
            A set of utilities for basic remoting procedures.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.RemotingUtil.GetRemoteFormat(System.Net.IPEndPoint)">
            <summary>
            Gets the XML-compatible string format of the specified IP end point.
            </summary>
            <param name="endPoint">The IP end point to format.</param>
            <returns>The XML-compatible string format of the specified IP end point.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.RemotingUtil.ParseRemoteFormat(System.String)">
            <summary>
            Gets an IP end point from its XML-compatible string format.
            </summary>
            <param name="value">The XML-compatible string format of the IP end point.</param>
            <returns>An IP end point constructed from its XML-compatible string format.</returns>
        </member>
        <member name="T:Mercury.Messaging.Core.Catalog`1">
            <summary>
            Represents a cross-referenced list of elements which may be accessed by key or value.
            </summary>
            <typeparam name="T">The type of the value reference.</typeparam>
        </member>
        <member name="M:Mercury.Messaging.Core.Catalog`1.#ctor">
            <summary>
            Initializes a default instance of the Catalog(Of T) class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.Catalog`1.Add(System.String,`0)">
            <summary>
            Adds the specified key and reference to the catalog.
            </summary>
            <param name="key">The key of the element to add.</param>
            <param name="reference">The reference of the element to add.</param>
        </member>
        <member name="M:Mercury.Messaging.Core.Catalog`1.Clear">
            <summary>
            Removes all elements from the catalog.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.Catalog`1.Remove(System.String)">
            <summary>
            Removes the element associated with the specified key.
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Mercury.Messaging.Core.Catalog`1.GetReference(System.String)">
            <summary>
            Returns the element associated with the specified key.
            </summary>
            <param name="key">The key to locate in the catalog.</param>
            <returns>The element associated with the specified key or the default value of T.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.Catalog`1.GetKey(`0)">
            <summary>
            Returns the key of the specified element.
            </summary>
            <param name="reference">The element to locate in the catalog.</param>
            <returns>The key of the specified element or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.Catalog`1.GetByType(System.Type)">
            <summary>
            Gets an IEnumerable(Of T) containing references deriving from the specified type.
            </summary>
            <param name="type">The type to locate in the catalog.</param>
            <returns>An IEnumerable(Of T) containing references deriving from the specified type.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.Catalog`1.GetFirst(System.Type)">
            <summary>
            Gets the first reference located that derives from the specified type.
            </summary>
            <param name="type">The type to locate in the catalog.</param>
            <returns>The first reference located that derives from the specified type.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.Catalog`1.ContainsKey(System.String)">
            <summary>
            Returns a value indicating whether the catalog contains 
            an element associated with the specified key.
            </summary>
            <param name="key">The key to locate.</param>
            <returns>True if the catalog contains the specified key; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.Catalog`1.ContainsReference(`0)">
            <summary>
            Returns a value indicating whether the catalog contains the specified element. 
            </summary>
            <param name="reference">The element to locate.</param>
            <returns>True if the catalog contains the specified element; otherwise, false.</returns>
        </member>
        <member name="P:Mercury.Messaging.Core.Catalog`1.Count">
            <summary>
            Gets the number of elements in the catalog.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Core.Catalog`1.Keys">
            <summary>
            Gets a collection of keys contained in the catalog.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Core.Catalog`1.References">
            <summary>
            Gets a collection of references contained in the catalog.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Core.Catalog`1.InternalReferences">
            <summary>
            The internal reference dictionary.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Core.Catalog`1.InternalKeys">
            <summary>
            The internal key dictionary.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Channels.ChannelFactory">
            <summary>
            Represents a factory for creating channel instances.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelFactory.Persist(Mercury.Messaging.Runtime.RuntimeEnvironment,Mercury.Messaging.Channels.IChannel)">
            <summary>
            Persists the specified channel as a resource on the specified environment.
            </summary>
            <param name="environment">The environment on which to persist.</param>
            <param name="channel">The channel to persist.</param>
            <returns>The resource ID of the persisted channel.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelFactory.Expire(Mercury.Messaging.Runtime.RuntimeEnvironment,Mercury.Messaging.Channels.IChannel)">
            <summary>
            Removes the specified channel resource from the specified environment.
            </summary>
            <param name="environment">The environment from which to remove the resource.</param>
            <param name="channel">The resource channel to remove.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelFactory.Create``1(Mercury.Messaging.Runtime.RuntimeEnvironment,System.String)">
            <summary>
            Creates an untyped channel of the specified type with the specified constraints.
            </summary>
            <typeparam name="TChannel">The type of the channel to create.</typeparam>
            <param name="environment">The runtime environment on which the resource exists.</param>
            <param name="id">The ID of the resource being referenced.</param>
            <returns>An untyped channel of the specified type with the specified constraints.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelFactory.Create``1(Mercury.Messaging.Runtime.RuntimeEnvironment,System.Type)">
            <summary>
            Creates an untyped channel of the specified type with the specified constraints.
            </summary>
            <typeparam name="TChannel">The type of the channel to create.</typeparam>
            <param name="environment">The runtime environment on which the agent exists.</param>
            <param name="agentType">The type of the agent referenced.</param>
            <returns>An untyped channel of the specified type with the specified constraints.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelFactory.Create``1(System.Object[])">
            <summary>
            Creates a channel of the specified type with the specified constraints.
            </summary>
            <typeparam name="TChannel">The type of the channel to create.</typeparam>
            <param name="args">Constructor arguments for creating the channel.</param>
            <returns>A channel of the specified type with the specified constraints.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelFactory.Create``2(Mercury.Messaging.Runtime.RuntimeEnvironment,System.String)">
            <summary>
            Creates a channel of the specified type with the specified constraints.
            </summary>
            <typeparam name="TChannel">The type of the channel to create.</typeparam>
            <typeparam name="TMessage">The type of messages to send.</typeparam>
            <param name="environment">The runtime environment on which the resource exists.</param>
            <param name="id">The ID of the resource being referenced.</param>
            <returns>A channel of the specified type with the specified constraints.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelFactory.Create``3(Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Creates a channel of the specified type with the specified constraints.
            </summary>
            <typeparam name="TChannel">The type of the channel to create.</typeparam>
            <typeparam name="TAgent">The type of the agent referenced.</typeparam>
            <typeparam name="TMessage">The type of messages to send.</typeparam>
            <param name="environment">The runtime environment on which the agent exists.</param>
            <returns>A channel of the specified type with the specified constraints.</returns>
        </member>
        <member name="T:Mercury.Messaging.ServiceModel.RuntimeListener">
            <summary>
            A listener for the runtime environment.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeListener.#ctor(Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Initializes a default instance of the RuntimeListener class with the specified runtime environment.
            </summary>
            <param name="environment">The runtime environment on which to listen.</param>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.RuntimeListener.Environment">
            <summary>
            The environment on which to listen.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.RuntimeListener.Connected">
            <summary>
            A thread signal.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeListener.Start(System.Net.IPEndPoint)">
            <summary>
            Starts the listener and accepts connections.  This 
            method blocks until shutdown or critical error.
            </summary>
            <param name="localEP">The IP end point on which to listen.</param>
            <returns>An exception occurring on the listener.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeListener.Stop">
            <summary>
            Stops the listener.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeListener.HandleAcceptTcpSocket(System.IAsyncResult)">
            <summary>
            Accepts a socket connection asynchronously.
            </summary>
            <param name="ar">The IASyncResult containing information about the connected socket.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeListener.ProcessNetworkData(Mercury.Messaging.ServiceModel.PacketState,System.Int32)">
            <summary>
            Process the network data contained in the specified packet state object.
            </summary>
            <param name="state">An object providing data state information.</param>
            <param name="bytesRead">The number of bytes read from the last receive operation.</param>
            <returns>True if the data was completely received and handled; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeListener.DefaultMessageProcessor(Mercury.Messaging.Serialization.SerialMessage,Mercury.Messaging.ServiceModel.PacketState)">
            <summary>
            Processes XML message content according to the default runtime settings.
            </summary>
            <param name="message">The message to process.</param>
            <param name="state">The packet state associated with this message.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeListener.HandleInvalidEndPacket(Mercury.Messaging.ServiceModel.PacketState)">
            <summary>
            Creates and sends a fault on a packet that fails to contain the expected "end packet" record.
            </summary>
            <param name="state">The packet state information.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeListener.HandleInvalidPacket(Mercury.Messaging.ServiceModel.PacketState)">
            <summary>
            Creates and sends a fault on a packet that is formatted incorrectly.
            </summary>
            <param name="state">The packet state information.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeListener.HandleMessageSizeOverflow(Mercury.Messaging.ServiceModel.PacketState)">
            <summary>
            Creates and sends a fault on a packet that is larger than the supported size.
            </summary>
            <param name="state">The packet state information.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeListener.HandleProcessingError(Mercury.Messaging.ServiceModel.PacketState)">
            <summary>
            Creates and sends a fault on a packet.
            </summary>
            <param name="state">The packet state information.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeListener.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeListener.Dispose(System.Boolean)">
            <summary>
            Performs the actual dispose.
            </summary>
            <param name="disposing">A value indicating whether the object is currently being disposed.</param>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.RuntimeListener.CanListen">
            <summary>
            Gets a value indicating whether the listener can continue listening.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.RuntimeListener.Shutdown">
            <summary>
            Gets a value indicating whether the listener is in the process of shutting down.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.RuntimeListener.ExceptionHandler">
            <summary>
            Gets or sets the delegate to a method that can handle listener exceptions.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.RuntimeListener.LastKnownException">
            <summary>
            Gets the last registered exception.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Runtime.RuntimeExtensions">
            <summary>
            Core extensions for a Mercury.Messaging.Runtime.RuntimeEnvironment class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeExtensions.GetRef(Mercury.Messaging.Runtime.RuntimeEnvironment,System.String,System.String,System.Int32)">
            <summary>
            Returns a reference to a remote resource with the specified 
            ID at the specified remote IP address and port.
            </summary>
            <param name="environment">The runtime environment to use.</param>
            <param name="id">The ID of the remote resource.</param>
            <param name="address">The IP address of the machine hosting the remote environment.</param>
            <param name="port">The port number on which the remote environment is listening.</param>
            <returns>A reference to a remote resource with the specified 
            ID at the specified remote IP address and port.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeExtensions.NewAnonymous(Mercury.Messaging.Runtime.RuntimeEnvironment,System.Action{Mercury.Messaging.Core.AgentPort})">
            <summary>
            Creates and returns a reference to a new anonymous agent.
            </summary>
            <param name="environment">The runtime environment on which to create the agent.</param>
            <param name="port">The action entry point for the anonymous agent.</param>
            <returns>A reference to a new anonymous agent.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeExtensions.Spawn``1(Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Spawns and returns a reference to a new agent of the specified type.
            </summary>
            <typeparam name="TAgent">The type of the agent to spawn.</typeparam>
            <param name="environment">The runtime environment on which to spawn the agent.</param>
            <returns>A reference to a new agent of the specified type.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeExtensions.Spawn``1(Mercury.Messaging.Runtime.RuntimeEnvironment,System.Object[])">
            <summary>
            Spawns and returns a reference to a new agent of the specified type.
            </summary>
            <typeparam name="TAgent">The type of the agent to spawn.</typeparam>
            <param name="environment">The runtime environment on which to spawn the agent.</param>
            <param name="args">Constructor args for agent construction.</param>
            <returns>A reference to a new agent of the specified type.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeExtensions.SpawnLink``1(Mercury.Messaging.Runtime.RuntimeEnvironment,System.String,System.Object[])">
            <summary>
            Spawns and links a new agent of the specified type to the agent with the specified agent ID.
            </summary>
            <typeparam name="TAgent">The type of the agent to spawn.</typeparam>
            <param name="environment">The runtime environment on which to spawn the agent.</param>
            <param name="linkId">The agent ID of the agent with which to create a link.</param>
            <param name="args">Constructor args for agent construction.</param>
            <returns>A reference to a new agent of the specified type.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeExtensions.Kill(Mercury.Messaging.Runtime.RuntimeEnvironment,Mercury.Messaging.Core.LocalRef)">
            <summary>
            Kills a resource on a runtime environment.
            </summary>
            <param name="environment">The runtime environment on which the resource is running.</param>
            <param name="resource">A reference to the resource to kill.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeExtensions.GetScheduler(Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Gets a new timer scheduler.
            </summary>
            <param name="environment">The runtime environment on which to run the scheduler.</param>
            <returns>A new timer scheduler.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeExtensions.GetTimeoutChannel(Mercury.Messaging.Runtime.RuntimeEnvironment,Mercury.Messaging.Runtime.InternalResource)">
            <summary>
            Gets a timeout channel for the specified resource. The default timeout is 30 
            seconds. If the timeout value is changed, the countdown will be restarted.
            </summary>
            <param name="environment">The environment on which to create the channel.</param>
            <param name="resource">The resource to reference.</param>
            <returns>A timeout channel for the specified resource.</returns>
        </member>
        <member name="T:Mercury.Messaging.Runtime.ResourcePool">
            <summary>
            Represents a pool of resources that can be managed and collected over time.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourcePool.#ctor">
            <summary>
            Initializes a default instance of the ResourcePool class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourcePool.#ctor(System.String)">
            <summary>
            Initializes a default instance of the ResourcePool 
            class with the specified generated ID prefix.
            </summary>
            <param name="generatedIdPrefix">A string value prefixed to the generated resource ID.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourcePool.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourcePool.Dispose(System.Boolean)">
            <summary>
            Performs the actual dispose.
            </summary>
            <param name="disposing">A value indicating whether the object is currently being disposed.</param>
        </member>
        <member name="F:Mercury.Messaging.Runtime.ResourcePool._resourceLimit">
            <summary>
            The upper bound resource limit.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourcePool.Add(Mercury.Messaging.Runtime.IResource)">
            <summary>
            Adds the resource to the pool and returns 
            the added resource's identifier string.
            </summary>
            <param name="resource">The IResource to add.</param>
            <returns>The added resource's identifier string.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourcePool.Store(Mercury.Messaging.Runtime.IResource,System.String)">
            <summary>
            Stores a resource in the pool with the specified ID.
            </summary>
            <param name="resource">The resource to store.</param>
            <param name="id">The resource's identifier string.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourcePool.Delete(System.String)">
            <summary>
            Deletes the resource with the specified identifier from the pool.
            </summary>
            <param name="id">The identifier of the IResource to delete.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourcePool.Clear">
            <summary>
            Clears all resources from the pool.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourcePool.Get(System.String)">
            <summary>
            Returns the IResource associated with the specified ID string.
            </summary>
            <param name="id">The resource identifier string.</param>
            <returns>The IResource associated with the specified ID string.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.ResourcePool.Contains(System.String)">
            <summary>
            Gets a value indicating whether the specified ID 
            is currently contained within this resource pool.
            </summary>
            <param name="id">The ID of the resource to locate.</param>
            <returns>True if the resource is contained in this resource pool; otherwise, false.</returns>
        </member>
        <member name="P:Mercury.Messaging.Runtime.ResourcePool.ResourceLimit">
            <summary>
            Gets the maximum number of resources that this pool can manage.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.ResourcePool.Count">
            <summary>
            Gets the number of resources contained in this resource pool.
            </summary>
            <returns>The number of resources contained in this resource pool.</returns>
        </member>
        <member name="T:Mercury.Messaging.Messages.HeaderKey">
            <summary>
            Provides a set of header keys to be used when setting or retrieving headers on a message.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Messages.HeaderKey.BodyType">
            <summary>
            The body type field.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Messages.HeaderKey.CorrelationId">
            <summary>
            The correlation ID field.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Messages.HeaderKey.DestinationAddress">
            <summary>
            The destination address field.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Messages.HeaderKey.FaultAddress">
            <summary>
            The fault address field.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Messages.HeaderKey.MessageId">
            <summary>
            The message ID field.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Messages.HeaderKey.RequestId">
            <summary>
            The request ID field.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Messages.HeaderKey.ResponseAddress">
            <summary>
            The response address field.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Messages.HeaderKey.ResponseEndPoint">
            <summary>
            The response end point field.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Messages.HeaderKey.SenderAddress">
            <summary>
            The sender address field.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Messages.HeaderKey.Method">
            <summary>
            The method field.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.CommunicationMode">
            <summary>
            Describes the communication delivery pattern.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Core.CommunicationMode.Asynchronous">
            <summary>
            Defines an asynchronous communication.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Core.CommunicationMode.Synchronous">
            <summary>
            Defines a synchronous communication, in which the call 
            returns after the message has been processed.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Core.CommunicationMode.SynchronousReturn">
            <summary>
            Defines a synchronous communication that wraps a future.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.AgentFactory">
            <summary>
            A factory for agent creation.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentFactory.Create``1(Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Creates an agent port with the specified values.
            </summary>
            <typeparam name="TAgent">The type of the agent to create.</typeparam>
            <param name="environment">The runtime environment on which the agent is registered.</param>
            <returns>An agent port instance constructed from the specified values or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentFactory.Create``1(Mercury.Messaging.Runtime.RuntimeEnvironment,System.Object[])">
            <summary>
            Creates an agent port with the specified values.
            </summary>
            <typeparam name="TAgent">The type of the agent to create.</typeparam>
            <param name="environment">The runtime environment on which the agent is registered.</param>
            <param name="args">Constructor arguments for agent construction.</param>
            <returns>An agent port instance constructed from the specified values or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentFactory.Create(Mercury.Messaging.Runtime.RuntimeEnvironment,System.Type)">
            <summary>
            Creates an agent port with the specified values.
            </summary>
            <param name="environment">The runtime environment on which the agent is registered.</param>
            <param name="agentType">The type of the agent to create.</param>
            <returns>An agent port instance constructed from the specified values or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentFactory.Create(Mercury.Messaging.Runtime.RuntimeEnvironment,System.Type,System.Object[])">
            <summary>
            Creates an agent port with the specified values.
            </summary>
            <param name="environment">The runtime environment on which the agent is registered.</param>
            <param name="agentType">The type of the agent to create.</param>
            <param name="args">Constructor arguments for agent construction.</param>
            <returns>An agent port instance constructed from the specified values or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentFactory.Create(Mercury.Messaging.Runtime.RuntimeEnvironment,System.String,System.Type,System.Object[])">
            <summary>
            Creates an agent port with the specified resource ID.
            </summary>
            <param name="environment">The runtime environment on which the agent is registered.</param>
            <param name="id">The resource ID to use.</param>
            <param name="agentType">The type of the agent to create.</param>
            <param name="args">Constructor arguments for agent construction.</param>
            <returns>An agent port instance constructed from the specified values or null. 
            If the specified resource ID is taken, an argument exception will be thrown.</returns>
        </member>
        <member name="T:Mercury.Messaging.Channels.ChannelBase">
            <summary>
            Represents the base implementation of an untyped channel.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Runtime.InternalResource">
            <summary>
            Internal resource base class.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Runtime.IResource">
            <summary>
            Represents a resource managed by a resource pool.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.IResource.Id">
            <summary>
            Gets the instance ID of this resource.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.IResource.LastAccess">
            <summary>
            Gets the date and time of the last message accessing this resource.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.InternalResource.#ctor">
            <summary>
            Initializes a default instance of the InternalResource class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.InternalResource.SetEnvironmentIfNull(Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Sets the environment to the specified value if the current value is uninitialized (null).
            </summary>
            <param name="environment">The environment to set.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.InternalResource.Post(Mercury.Messaging.Routing.IRoutingContext)">
            <summary>
            Posts a routing context to the resource.
            </summary>
            <param name="context">The IRoutingContext to post.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.InternalResource.UpdateAccess">
            <summary>
            Updates the LastAccess date and time to the current date and time.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.InternalResource.Shutdown">
            <summary>
            Transitions this resource into a shutdown state.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.InternalResource.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current object.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>True if the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.InternalResource.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:Mercury.Messaging.Runtime.InternalResource.Id">
            <summary>
            Gets the routable address of this resource instance.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.InternalResource.LastAccess">
            <summary>
            Gets the date and time of the last message accessing this resource.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.InternalResource.Environment">
            <summary>
            Gets the runtime environment for this resource.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.InternalResource.IsShuttingDown">
            <summary>
            Gets a value indicating whether the port is currently shutting down.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Channels.IUntypedChannel">
            <summary>
            Represents a non-generic channel over which a message may be sent.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Channels.IChannel">
            <summary>
            Represents a channel over which a message may be sent.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.IChannel.IsPersisted">
            <summary>
            Gets a value indicating whether this channel has been persisted as a resource.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.IChannel.Id">
            <summary>
            Gets the resource ID of this channel if it has been persisted.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.IUntypedChannel.Send``1(``0)">
            <summary>
            Sends a message to the receiver on this channel.
            </summary>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelBase.#ctor(Mercury.Messaging.Runtime.InternalResource)">
            <summary>
            Initializes a default instance of the ChannelBase class with the specified resource.
            </summary>
            <param name="resource">The resource port to reference.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelBase.Send``1(``0)">
            <summary>
            Sends a message to the referenced resource.
            </summary>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelBase.Post(Mercury.Messaging.Routing.IRoutingContext)">
            <summary>
            Posts a routing context which is relayed to this channel's receiver.
            </summary>
            <param name="context">The routing context to post.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelBase.GetResourceId(Mercury.Messaging.Runtime.InternalResource)">
            <summary>
            Gets the resource identifier from the specified resource.
            </summary>
            <param name="resource">The resource from which to retrieve a resource identifier.</param>
            <returns>The resource identifier or an empty string.</returns>
        </member>
        <member name="P:Mercury.Messaging.Channels.ChannelBase.Resource">
            <summary>
            The resource to which messages will be sent.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.ChannelBase.IsPersisted">
            <summary>
            Gets a value indicating whether this channel has been persisted as a resource.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Channels.ChannelBase`1">
            <summary>
            Represents a generic base implementation of a typed channel.
            </summary>
            <typeparam name="T">The type of the messages that may be sent on this channel.</typeparam>
        </member>
        <member name="T:Mercury.Messaging.Channels.IChannel`1">
            <summary>
            Represents a channel over which a message may be sent.
            </summary>
            <typeparam name="T">The type of the message.</typeparam>
        </member>
        <member name="M:Mercury.Messaging.Channels.IChannel`1.Send(`0)">
            <summary>
            Sends a message to the receiver on this channel.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelBase`1.#ctor(Mercury.Messaging.Runtime.InternalResource)">
            <summary>
            Initializes a default instance of the ChannelBase(Of T) class with the specified resource.
            </summary>
            <param name="resource">The agent port to reference.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelBase`1.Send(`0)">
            <summary>
            Sends a message to the referenced resource.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.ChannelBase`1.Post(Mercury.Messaging.Routing.IRoutingContext)">
            <summary>
            Posts a routing context which is relayed to this channel's receiver.
            </summary>
            <param name="context">The routing context to post.</param>
        </member>
        <member name="T:Mercury.Messaging.Core.ReceiveHandler`1">
            <summary>
            Represents a handle for an agent receive action.
            </summary>
            <typeparam name="T">The type of the message to handle.</typeparam>
            <param name="message">The message to handle.</param>
        </member>
        <member name="T:Mercury.Messaging.Instrumentation.InstrumentationMode">
            <summary>
            Describes the state of the instrumentation.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.InstrumentationMode.None">
            <summary>
            Instrumentation is inactive.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.InstrumentationMode.ErrorOnly">
            <summary>
            Only errors are reported to the specified log source.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.InstrumentationMode.MonitorOnly">
            <summary>
            Information is monitored by an external application but not logged.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.InstrumentationMode.Debug">
            <summary>
            Full debug and error information is logged.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.InstrumentationMode.MonitorDebug">
            <summary>
            Monitoring is active and debug information is logged.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.Future`1">
            <summary>
            Represents a future on the results of a given agent.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.Future`1.WaitUntilCompleted(System.Int32)">
            <summary>
            Blocks the current thread until the future is resolved or the timeout expires.
            </summary>
            <param name="timeout">The number of milliseconds to wait, or -1 to wait indefinitely.</param>
            <returns>True if the future is resolved; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.Future`1.WaitUntilCompleted(System.TimeSpan)">
            <summary>
            Blocks the current thread until the future is resolved or the timeout expires.
            </summary>
            <param name="timeout">A time span that represents the number of milliseconds to wait.  
            Use a time span representing -1 milliseconds to wait indefinitely.</param>
            <returns>True if the future is resolved; otherwise, false.</returns>
        </member>
        <member name="P:Mercury.Messaging.Core.Future`1.Get">
            <summary>
            Gets the result of the future.  If the result 
            has not yet been sent, this call will block 
            until the future is resolved or the default 
            timeout expires.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Runtime.Scheduler.TimerScheduler">
            <summary>
            Represents a timer-based scheduler.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Runtime.Scheduler.IScheduler">
            <summary>
            Represents a scheduler that can schedule work at discrete time intervals.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.IScheduler.Schedule(System.TimeSpan,System.Action)">
            <summary>
            Schedules an operation to execute after the specified interval has elapsed.
            </summary>
            <param name="interval">The duration of the interval before execution.</param>
            <param name="operation">The operation to execute.</param>
            <returns>A scheduled operation.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.IScheduler.Schedule(System.TimeSpan,System.TimeSpan,System.Action)">
            <summary>
            Schedules an operation to execute after the specified interval has elapsed 
            and for every specified periodic interval after initial execution.
            </summary>
            <param name="interval">The duration of the interval before execution.</param>
            <param name="periodic">The periodic interval between subsequent executions.</param>
            <param name="operation">The operation to execute.</param>
            <returns>A scheduled operation.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.IScheduler.Stop(System.TimeSpan)">
            <summary>
            Stops the scheduler, preventing any further operations from being executed.
            </summary>
            <param name="timeout">The time period to wait for the scheduler to shutdown.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.IScheduler.Stop">
            <summary>
            Stops the scheduler, preventing any further operations from being executed.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.#ctor(Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Initializes a default instance of the TimerScheduler class with the specified runtime environment.
            </summary>
            <param name="environment">The runtime environment on which to schedule operations.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.Schedule(Mercury.Messaging.Runtime.Scheduler.IScheduledOperationExecutor)">
            <summary>
            Schedules the specified action.
            </summary>
            <param name="action"></param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.ScheduleTimer">
            <summary>
            Schedules the next timer operation.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.ExecuteExpiredActions">
            <summary>
            Executes actions whose scheduled wait period has elapsed.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.Schedule(System.TimeSpan,System.Action)">
            <summary>
            Schedules an operation to execute after the specified interval has elapsed.
            </summary>
            <param name="interval">The duration of the interval before execution.</param>
            <param name="operation">The operation to execute.</param>
            <returns>A scheduled operation.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.Schedule(System.TimeSpan,System.TimeSpan,System.Action)">
            <summary>
            Schedules an operation to execute after the specified interval has elapsed 
            and for every specified periodic interval after initial execution.
            </summary>
            <param name="interval">The duration of the interval before execution.</param>
            <param name="periodic">The periodic interval between subsequent executions.</param>
            <param name="operation">The operation to execute.</param>
            <returns>A scheduled operation.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.Stop">
            <summary>
            Stops the scheduler, preventing any further operations from being executed.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.Stop(System.TimeSpan)">
            <summary>
            Stops the scheduler, preventing any further operations from being executed.
            </summary>
            <param name="timeout">The time period to wait for the scheduler to shutdown.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.GetScheduledTime(System.TimeSpan)">
            <summary>
            Gets a scheduled time interval based on the current UTC date and time.
            </summary>
            <param name="interval">The time span interval to wait.</param>
            <returns>A scheduled time interval based on the current UTC date and time.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.Dispose(System.Boolean)">
            <summary>
            Performs the actual dispose.
            </summary>
            <param name="disposing">A value indicating whether the object is currently being disposed.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.OnManagedDispose">
            <summary>
            Disposes managed resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.OnUnmanagedDispose">
            <summary>
            Disposes unmanaged resources.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.Count">
            <summary>
            Gets the current operations count
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.Environment">
            <summary>
            Gets the runtime environment for this scheduler.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.NextActionTime">
            <summary>
            Gets the date and time of the next action as a string.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.Scheduler.TimerScheduler.Now">
            <summary>
            Gets the current UTC date and time.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Routing.IRoutingEngine">
            <summary>
            Describes a typical routing engine to handle message delivery.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRoutingEngine.GetMulticastChannel(System.Collections.Generic.IEnumerable{Mercury.Messaging.Core.LocalRef})">
            <summary>
            Gets a multicast channel for the specified reference channels.
            </summary>
            <param name="channels">An enumerable of reference channels to include.</param>
            <returns>A multicast channel for the specified reference channels.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRoutingEngine.GetUntypedChannel(System.String,System.Boolean)">
            <summary>
            Gets an untyped channel that references the specified resource.
            </summary>
            <param name="resourceId">The ID of the resource to reference.</param>
            <param name="isSynchronous">A value indicating whether a synchronous channel should be created.</param>
            <returns>An untyped channel that references the specified resource.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRoutingEngine.IsAgent(System.String)">
            <summary>
            Returns a value indicating whether the specified 
            resource ID corresponds to an agent.
            </summary>
            <param name="resourceId">The ID of the resource to check.</param>
            <returns>True if the specified resource ID corresponds to an agent; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRoutingEngine.Send``1(System.String,``0)">
            <summary>
            Sends a message of the specified type to the specified agent.
            </summary>
            <typeparam name="T">The type of the message to send over the channel.</typeparam>
            <param name="agentId">The ID of the agent on which to retrieve a channel.</param>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRoutingEngine.Send``1(``0,System.Boolean)">
            <summary>
            Sends a message of the specified type to all local agents.
            </summary>
            <typeparam name="T">The type of the message to send over the channel.</typeparam>
            <param name="message">The message to send.</param>
            <param name="includeNonAgents">A value indicating whether to include persisted, 
            non agent resources, such as channels, in the send operation.</param>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRoutingEngine.Send``2(``1)">
            <summary>
            Sends a message of the specified type to all agents of the specified type on this environment.  
            If needing to execute remotely, a remote runtime environment can be specified in the 
            appropriate overload.
            </summary>
            <typeparam name="TAgent">The type of the agent for which a channel will be retrieved.</typeparam>
            <typeparam name="T">The type of the message to send over the channel.</typeparam>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRoutingEngine.Send``2(System.Uri,``1)">
            <summary>
            Sends a message of the specified type to all agents of the specified type on the specified runtime environment.
            </summary>
            <typeparam name="TAgent">The type of the agent for which a channel will be retrieved.</typeparam>
            <typeparam name="T">The type of the message to send over the channel.</typeparam>
            <param name="runtimeAddress">The Uri address of the runtime environment on which this message should be handled.</param>
            <param name="message">The message to send.</param>
        </member>
        <member name="T:Mercury.Messaging.Instrumentation.MessagingCoreEventId">
            <summary>
            Describes the event identifiers used by the messaging core.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.MessagingCoreEventId.Error">
            <summary>
            A general error event
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.MessagingCoreEventId.CriticalError">
            <summary>
            A critical error event.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.MessagingCoreEventId.RuntimeError">
            <summary>
            An runtime error occurred.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.MessagingCoreEventId.AgentError">
            <summary>
            An error in agent processing occurred.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.MessagingCoreEventId.MessageDeliveryError">
            <summary>
            An error occurred during message delivery.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.AnonymousAgent">
            <summary>
            An agent, deriving from the AnonymousAgent class, which may be built and called at runtime.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.Agent">
            <summary>
            Represents a standard interface for an Agent.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.AnonymousAgent.#ctor(Mercury.Messaging.Core.AgentPort)">
            <summary>
            Initializes a default instance of the AnonymousAgent 
            class with the specified agent port.
            </summary>
            <param name="port">The agent port to assign.</param>
        </member>
        <member name="M:Mercury.Messaging.Core.AnonymousAgent.New(Mercury.Messaging.Runtime.RuntimeEnvironment,System.Action{Mercury.Messaging.Core.AgentPort})">
            <summary>
            Creates and returns a reference to a new anonymous agent.
            </summary>
            <param name="environment">The environment on which to run the agent.</param>
            <param name="port">An action that accepts an agent port.</param>
            <returns>A reference to a new anonymous agent.</returns>
        </member>
        <member name="T:Mercury.Messaging.Channels.FutureChannel`1">
            <summary>
            A channel to an agent that can return a value asynchronously.
            </summary>
            <typeparam name="TResult">The type of the result value.</typeparam>
        </member>
        <member name="T:Mercury.Messaging.Channels.LocalRefChannel">
            <summary>
            An untyped channel that references a local resource.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.LocalRef">
            <summary>
            Represents a reference to a resource.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Core.LocalRef.ResId">
            <summary>
            The ID of the referenced resource.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.LocalRefChannel.#ctor(Mercury.Messaging.Runtime.InternalResource)">
            <summary>
            Initializes a default instance of the LocalRefChannel with the specified resource.
            </summary>
            <param name="resource">The local resource to reference.</param>
        </member>
        <member name="F:Mercury.Messaging.Channels.LocalRefChannel._resId">
            <summary>
            The ID of the referenced resource.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.LocalRefChannel.ResId">
            <summary>
            Gets the ID of the local resource to which messages on this channel are sent.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureChannel`1.#ctor(Mercury.Messaging.Runtime.InternalResource)">
            <summary>
            Initializes a default instance of the FutureChannel class with the specified agent port.
            </summary>
            <param name="resource">The agent port to reference.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureChannel`1.Send``1(``0)">
            <summary>
            Sends a message to the referenced agent port.  After the first message, subsequent message 
            delivery will block and messages will be accumulated while this channel waits for a return 
            value from the agent port.  Upon return, all accumulated messages will be released to the 
            agent port and send behavior will revert to that of a simple, asynchronous channel.
            </summary>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureChannel`1.Post(Mercury.Messaging.Routing.IRoutingContext)">
            <summary>
            Posts the routing context to the internal result port.
            </summary>
            <param name="context">The routing context to post.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureChannel`1.ExpireChannelResource">
            <summary>
            Expires this channel's resource allocation.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureChannel`1.TryFirstResult">
            <summary>
            Attempts to get the first result message sent to this channel.  This method blocks 
            until a message is received on this channel or the default timeout elapses.
            </summary>
            <returns>The result value.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureChannel`1.WaitUntilCompleted(System.Int32)">
            <summary>
            Blocks the current thread until this channel receives a result or the timeout elapses.
            </summary>
            <param name="timeout">The number of milliseconds to wait.</param>
            <returns>True if the wait operation did not expire; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureChannel`1.WaitUntilCompleted(System.TimeSpan)">
            <summary>
            Blocks the current thread until this channel receives a result or the timeout elapses.
            </summary>
            <param name="timeout">The time span that represents the number of milliseconds to wait.</param>
            <returns>True if the wait operation did not expire; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureChannel`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureChannel`1.Dispose(System.Boolean)">
            <summary>
            Performs the actual dispose.
            </summary>
            <param name="disposing">A value indicating whether the object is currently being disposed.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureChannel`1.OnManagedDispose">
            <summary>
            Disposes managed resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureChannel`1.OnUnmanagedDispose">
            <summary>
            Disposes unmanaged resources.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.FutureChannel`1.Timeout">
            <summary>
            The internal timeout.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.FutureChannel`1.InternalPort">
            <summary>
            The internal message accumulator port.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.FutureChannel`1.WaitPort">
            <summary>
            The internal message wait port.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.FutureChannel`1.ResultPort">
            <summary>
            The internal result port.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.FutureChannel`1.Get">
            <summary>
            Gets the result of the future.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.ServiceModel.RuntimePacketProtocol">
            <summary>
            A message framing protocol for all runtime packets sent over the network.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.MaxPacketSize">
            <summary>
            Max message size of approximately 40 MB.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.DefaultEncoding">
            <summary>
            The default encoding for packet message data.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.FrameEncoding">
            <summary>
            The defaul encoding used to encode parts of the message header.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetPacket(System.String,System.Int32)">
            <summary>
            Returns a serialized packet that contains the specified XML data.
            </summary>
            <param name="xmlData">The XML data for which to generate a packet.</param>
            <param name="messageId">The message identifier.</param>
            <returns>A serialized packet that contains the specified XML data.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetPacket(System.Byte[],System.Int32)">
            <summary>
            Returns a serialized packet that contains the specified byte data.
            </summary>
            <param name="data">The byte data for which to generate a packet.</param>
            <param name="messageId">The message identifier.</param>
            <returns>A serialized packet that contains the specified byte data.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetPacketHeader(System.Int32,System.Int32)">
            <summary>
            Returns a packet header containing version info and envelope size.
            </summary>
            <param name="payloadSize">The size of the data in bytes.</param>
            <param name="messageId">The message identifier.</param>
            <returns>A packet header containing version info and envelope size.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetSizedEnvelope(System.Int32)">
            <summary>
            Returns a sized envelope record (5).
            </summary>
            <param name="payloadSize">The size of the data in bytes.</param>
            <returns>a sized envelope record (5).</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetPacketVersion">
            <summary>
            Returns a packet version record (0) containing version info.  
            The version should be 0.0, or 0x00.0x00.
            </summary>
            <returns>A packet version record (0).</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetPacketFault(System.UInt16,System.Int32)">
            <summary>
            Returns a packet fault record (11) with the specified fault code.
            </summary>
            <param name="faultCode">The number specifying the type of fault.</param>
            <param name="messageId">The message identifier.</param>
            <returns>A packet fault record (11).</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetPacketEnd">
            <summary>
            Returns a packet end record (12).
            </summary>
            <returns>A packet end record (12).</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetPacketAck(System.Int32)">
            <summary>
            Returns a packet ack record (13).
            </summary>
            <param name="messageId">The message identifier.</param>
            <returns>A packet ack record (13).</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetPacketWaitTime(System.Int32,Mercury.Messaging.ServiceModel.TimeInterval)">
            <summary>
            Gets a wait time packet record (10) for the specified wait and time interval.
            </summary>
            <param name="wait">The number of units to wait according to the specified time interval.</param>
            <param name="interval">The time interval to wait.</param>
            <returns>A wait time packet record (10) for the specified wait and time interval.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetRecord(System.Byte,System.Byte[])">
            <summary>
            Returns a record-formatted byte array with the specified record ID and contents.
            </summary>
            <param name="recordId">The ID of the record to create.</param>
            <param name="contents">The byte array contents of the record.</param>
            <returns>A record-formatted byte array.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetBytes(System.Int32)">
            <summary>
            Returns a byte array of the specified value.
            </summary>
            <param name="value">The value to convert to a byte array.</param>
            <returns>A byte array of the specified value.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetBytes(System.UInt32)">
            <summary>
            Returns a byte array of the specified value.
            </summary>
            <param name="value">The value to convert to a byte array.</param>
            <returns>A byte array of the specified value.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetBytes(System.UInt16)">
            <summary>
            Returns a byte array of the specified value.
            </summary>
            <param name="value">The value to convert to a byte array.</param>
            <returns>A byte array of the specified value.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetBytes(System.String)">
            <summary>
            Returns a byte array of the specified value.
            </summary>
            <param name="value">The value to convert to a byte array.</param>
            <returns>A byte array of the specified value.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimePacketProtocol.GetDataString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Returns the string representation of the specified byte data.
            </summary>
            <param name="value">A byte array containing the data to decode.</param>
            <param name="offset">The offset integer at which to start decoding.</param>
            <param name="length">The number of bytes to decode.</param>
            <returns>The string representation of the decoded byte data.</returns>
        </member>
        <member name="T:Mercury.Messaging.Routing.RuntimeRoutingEngine">
            <summary>
            Represents a routing engine for a RuntimeEnvironment.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Routing.IRemoteRouting">
            <summary>
            Describes an interface to a set of remote routing procedures.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRemoteRouting.ExpirePostedOperations">
            <summary>
            Attempts to expire any posted, remote operations that are waiting to receive message delivery failure notifications.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRemoteRouting.IsRegistered(System.String)">
            <summary>
            Returns a value indicating whether the specified node has been registered.
            </summary>
            <param name="nodeId">The address identifier of the node to check.</param>
            <returns>True if the specified node has been registered; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRemoteRouting.GetRemoteChannel(System.String,System.Net.IPEndPoint)">
            <summary>
            Returns a channel to the specified remote agent at the specified end point.
            </summary>
            <param name="agentId">The ID of the remote agent.</param>
            <param name="remoteEndPoint">The IP end point of the node on which the agent is located.</param>
            <returns>A channel to the specified remote agent at the specified end point.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRemoteRouting.GetRemoteChannel(System.String,System.Net.IPEndPoint,System.Type)">
            <summary>
            Returns a channel to the specified remote agent at the specified end point.
            </summary>
            <param name="agentId">The ID of the remote agent.</param>
            <param name="remoteEndPoint">The IP end point of the node on which the agent is located.</param>
            <param name="destinationType">The type of the destination agent.</param>
            <returns>A channel to the specified remote agent at the specified end point.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRemoteRouting.GetRemoteChannel(System.String,System.Net.IPEndPoint,System.Type,System.TimeSpan)">
            <summary>
            Returns a channel to the specified remote agent at the specified end point.
            </summary>
            <param name="agentId">The ID of the remote agent.</param>
            <param name="remoteEndPoint">The IP end point of the node on which the agent is located.</param>
            <param name="destinationType">The type of the destination agent.</param>
            <param name="timeout">The time span to wait for the remote channel to receive a message acknowledgement.</param>
            <returns>A channel to the specified remote agent at the specified end point.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRemoteRouting.ResolveNode(System.String)">
            <summary>
            Resolves the specified node name to an IP end point.
            </summary>
            <param name="nodeId">The node name to resolve.</param>
            <returns>An IP end point associated with the specified node name.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRemoteRouting.RegisterNode(System.String,System.Net.IPEndPoint)">
            <summary>
            Registers the specified node name with the specified IP end point.
            </summary>
            <param name="nodeId">The node name to register.</param>
            <param name="endPoint">The IP end point to associate.</param>
        </member>
        <member name="M:Mercury.Messaging.Routing.IRemoteRouting.UnregisterNode(System.String)">
            <summary>
            Unregisters the specified node name.
            </summary>
            <param name="nodeId">The node name to unregister.</param>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.#ctor(Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Initializes a default instance of the RuntimeRoutingEngine 
            class with the specified RuntimeEnvironment.
            </summary>
            <param name="environment">The RuntimeEnvironment to use.</param>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.GetMulticastChannel(System.Collections.Generic.IEnumerable{Mercury.Messaging.Core.LocalRef})">
            <summary>
            Gets a multicast channel for the specified reference channels.
            </summary>
            <param name="channels">An enumerable of reference channels to include.</param>
            <returns>A multicast channel for the specified reference channels.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.GetUntypedChannel(System.String,System.Boolean)">
            <summary>
            Gets an untyped channel that references the specified resource.
            </summary>
            <param name="resourceId">The ID of the resource to reference.</param>
            <param name="isSynchronous">A value indicating whether a synchronous channel should be created.</param>
            <returns>An untyped channel that references the specified resource.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.GetSynchronousChannel(System.String)">
            <summary>
            Returns a synchronous channel for the local resource.
            </summary>
            <param name="resourceId">The ID of the resource to reference.</param>
            <returns>A synchronous channel referencing the local resource.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.GetLocalAsyncChannel(System.String)">
            <summary>
            Returns an asynchronous channel for the local resource.
            </summary>
            <param name="resourceId">The ID of the resource to reference.</param>
            <returns>An asynchronous channel referencing the local resource.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.IsAgent(System.String)">
            <summary>
            Returns a value indicating whether the specified 
            resource ID corresponds to an agent.
            </summary>
            <param name="resourceId">The ID of the resource to check.</param>
            <returns>True if the specified resource ID corresponds to an agent; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.Send``1(System.String,``0)">
            <summary>
            Sends the message to the specified resource.
            </summary>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="resourceId">The ID of the resource to send to.</param>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.Send``1(``0,System.Boolean)">
            <summary>
            Sends a message of the specified type to all local agents.
            </summary>
            <typeparam name="T">The type of the message to send over the channel.</typeparam>
            <param name="message">The message to send.</param>
            <param name="includeNonAgents">A value indicating whether to include persisted, 
            non agent resources, such as channels, in the send operation.</param>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.Send``2(``1)">
            <summary>
            Sends the message to all agents of the specified type.
            </summary>
            <typeparam name="TAgent">The type of the agent to send to.</typeparam>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.Send``2(System.Uri,``1)">
            <summary>
            Sends the message to the specified agent.
            </summary>
            <typeparam name="TAgent">The type of the agent to send to.</typeparam>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="runtimeAddress">The URI address of the agent to send to.</param>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.ExpirePostedOperations">
            <summary>
            Attempts to expire any posted, remote operations that are waiting to receive message delivery failure notifications.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.IsRegistered(System.String)">
            <summary>
            Returns a value indicating whether the specified node has been registered.
            </summary>
            <param name="nodeId">The address identifier of the node to check.</param>
            <returns>True if the specified node has been registered; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.GetRemoteChannel(System.String,System.Net.IPEndPoint)">
            <summary>
            Returns a remote channel constructed from the specified values.
            </summary>
            <param name="resourceId">The ID of the resource to reference.</param>
            <param name="remoteEndPoint">The IP end point of the runtime environment on which the resource exists.</param>
            <returns>A remote channel constructed from the specified values.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.GetRemoteChannel(System.String,System.Net.IPEndPoint,System.Type)">
            <summary>
            Returns a remote channel constructed from the specified values.
            </summary>
            <param name="resourceId">The ID of the resource to reference.</param>
            <param name="remoteEndPoint">The IP end point of the runtime environment on which the resource exists.</param>
            <param name="destinationType">The type of the destination agent.</param>
            <returns>A remote channel constructed from the specified values.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.GetRemoteChannel(System.String,System.Net.IPEndPoint,System.Type,System.TimeSpan)">
            <summary>
            Returns a remote channel constructed from the specified values.
            </summary>
            <param name="resourceId">The ID of the resource to reference.</param>
            <param name="remoteEndPoint">The IP end point of the runtime environment on which the resource exists.</param>
            <param name="destinationType">The type of the destination agent.</param>
            <param name="timeout">A timeout value for a message received reply from the remote environment.</param>
            <returns>A remote channel constructed from the specified values.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.ResolveNode(System.String)">
            <summary>
            Resolves the IP end point registered with the specified node ID.
            </summary>
            <param name="nodeId">The identifier of the node to resolve.</param>
            <returns>The IP end point registered with the specified node ID.</returns>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.RegisterNode(System.String,System.Net.IPEndPoint)">
            <summary>
            Registers the specified node ID with the specified IP end point.
            </summary>
            <param name="nodeId">The identifier of the node to register.</param>
            <param name="endPoint">The IP end point to register.</param>
        </member>
        <member name="M:Mercury.Messaging.Routing.RuntimeRoutingEngine.UnregisterNode(System.String)">
            <summary>
            Unregisters the specified node ID.
            </summary>
            <param name="nodeId">The identifier of the node to unregister.</param>
        </member>
        <member name="P:Mercury.Messaging.Routing.RuntimeRoutingEngine.Environment">
            <summary>
            Gets the local runtime environment on which routing occurs.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Messages.OpContinue">
            <summary>
            A message used to signal a blocking operation to continue.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Messages.Interrupt">
            <summary>
            Represents an interrupt message.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.Interrupt.#ctor(Mercury.Messaging.Routing.IRoutingContext)">
            <summary>
            Initializes a default instance of the Interrupt class.
            </summary>
            <param name="context">The routing context for this interrupt.</param>
        </member>
        <member name="P:Mercury.Messaging.Messages.Interrupt.Context">
            <summary>
            Gets the routing context for this interrupt.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Instrumentation.EnvironmentInfo">
            <summary>
            Provides monitoring information about the current <see cref="T:Mercury.Messaging.Runtime.RuntimeEnvironment"/>.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.EnvironmentInfo.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Mercury.Messaging.Instrumentation.EnvironmentInfo"/> class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.EnvironmentInfo.ToString">
            <summary>
            Returns a System.String that represents the current <see cref="T:Mercury.Messaging.Instrumentation.MethodContextInfo"/>.
            </summary>
            <returns>A System.String that represents the current <see cref="T:Mercury.Messaging.Instrumentation.MethodContextInfo"/>.</returns>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.EnvironmentInfo.GetSchema">
            <summary>
            Returns the XML schema.
            </summary>
            <returns>Default value is null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.EnvironmentInfo.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the environment info from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.EnvironmentInfo.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the environment info to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.EnvironmentInfo.Address">
            <summary>
            Gets the address of the runtime environment.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.EnvironmentInfo.EndPoint">
            <summary>
            Gets the IP end point of this runtime environment.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.EnvironmentInfo.ResourceCount">
            <summary>
            Gets the number of currently active resources managed on this environment.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.EnvironmentInfo.CurrentResources">
            <summary>
            Gets a list of the managed resources for this environment.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.CoreInstanceProvider">
            <summary>
            Provides instance implementations from specified configurations.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.ServiceModel.RuntimeServiceBase">
            <summary>
            The base class for all service implementations.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeServiceBase.#ctor(System.Net.IPEndPoint)">
            <summary>
            Initializes a default instance of the RuntimeServiceBase 
            class with the specified IP end point.
            </summary>
            <param name="endPoint">The System.Net.IPEndPoint to use.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeServiceBase.Start">
            <summary>
            Starts the service.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.RuntimeServiceBase.Stop">
            <summary>
            Stops the service.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.RuntimeServiceBase.EndPoint">
            <summary>
            Gets the IP end point used by this service.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.RuntimeServiceBase.IsStarted">
            <summary>
            Gets a value indicating whether the service is started.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Instrumentation.TraceOutputSource">
            <summary>
            Describes the destination of trace output.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.TraceOutputSource.WindowsEventLog">
            <summary>
            Outputs trace information to the Windows Event Log.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.TraceOutputSource.File">
            <summary>
            Outputs trace information to a text file.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Instrumentation.TraceOutputSource.Sql">
            <summary>
            Outputs trace information to a SQL database.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Instrumentation.MessageInfo">
            <summary>
            Provides information on a message in transit.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MessageInfo.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Mercury.Messaging.Instrumentation.MessageInfo"/> class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MessageInfo.ToString">
            <summary>
            Returns a System.String that represents the current <see cref="T:Mercury.Messaging.Instrumentation.MessageInfo"/>.
            </summary>
            <returns>A System.String that represents the current <see cref="T:Mercury.Messaging.Instrumentation.MessageInfo"/>.</returns>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MessageInfo.GetSchema">
            <summary>
            Returns the XML schema.
            </summary>
            <returns>Default value is null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MessageInfo.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the message info from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MessageInfo.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the message info to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessageInfo.PostedType">
            <summary>
            Gets the type of the message posted to the receiver.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessageInfo.ActualType">
            <summary>
            Gets the actual type of the message.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessageInfo.ChannelType">
            <summary>
            Gets the type of the channel over which the message was sent.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessageInfo.RouteId">
            <summary>
            Gets the route identifier.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessageInfo.IsSynchronous">
            <summary>
            Gets a value indicating whether message delivery was synchronous.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessageInfo.Xml">
            <summary>
            Gets the XML generated by the posted message.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessageInfo.ReceiverEndPoint">
            <summary>
            Gets or sets the IP end point for a receiving node.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessageInfo.ReceiverId">
            <summary>
            Gets or sets a unique identifier for a receiver of this context.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Channels.ITimeoutChannel">
            <summary>
            A channel that can represent a timeout state.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.ITimeoutChannel.Timeout">
            <summary>
            Gets the time span to wait before a condition expires.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.ServiceModel.PacketState">
            <summary>
            Runtime packet object for asynchronous data reads.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.PacketState.BUFFER_SIZE">
            <summary>
            The size of the receive buffer.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.PacketState.END_RECORD">
            <summary>
            The end record byte.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.PacketState.#ctor">
            <summary>
            Initializes a default instance of the PacketState class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.PacketState.#ctor(System.Net.Sockets.Socket)">
            <summary>
            Initializes a default instance of the PacketState class with the specified socket.
            </summary>
            <param name="workSocket">The socket on which to receive data.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.PacketState.InitializeBuilder(System.Int32)">
            <summary>
            Initializes the builder array to the specified size.
            </summary>
            <param name="size">The size of the builder array.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.PacketState.Append(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Appends the specified bytes to the builder at the specified offset and length.
            </summary>
            <param name="bytes">The byte array to append.</param>
            <param name="offset">The starting offset on the byte array for the append.</param>
            <param name="length"></param>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.PacketState.ReceivedBytes">
            <summary>
            The number of bytes received.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.PacketState.ReceivedHeader">
            <summary>
            A value indicating whether the packet header has been fully received.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.PacketState.Storage">
            <summary>
            Gets or sets an object representing data that can be maintained across asynchronous calls to the work socket.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.PacketState.MessageId">
            <summary>
            Gets or sets the message identifier.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.PacketState.WorkSocket">
            <summary>
            Client socket.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.PacketState.Byte0">
            <summary>
            Gets the value of byte index 0 for this message.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.PacketState.Byte1">
            <summary>
            Gets the value of byte index 1 for this message.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.PacketState.Byte2">
            <summary>
            Gets the value of byte index 2 for this message.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.PacketState.Buffer">
            <summary>
            Gets the receive buffer.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.PacketState.Builder">
            <summary>
            Gets a byte builder for data collection.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.PacketState.StringBuilder">
            <summary>
            Gets the string builder for building received data strings.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.PacketState.RecordSize">
            <summary>
            Gets the expected size in bytes of the data collected by the builder.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.ServiceModel.MessagingService">
            <summary>
            A runtime messaging service.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.MessagingService.#ctor(System.Net.IPEndPoint,Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Initializes a default instance of the MessagingService class 
            with the specified IP end point and runtime environment.
            </summary>
            <param name="endPoint">The IP end point on which to listen.</param>
            <param name="environment">The runtime environment on which this service runs.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.MessagingService.Start">
            <summary>
            Starts the service.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.MessagingService.StartInternal">
            <summary>
            Starts the internal server on the dedicated thread.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.MessagingService.GetListener(Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Gets a new runtime listener.
            </summary>
            <param name="environment">The runtime environment on which to listen.</param>
            <returns>A runtime listener.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.MessagingService.Stop">
            <summary>
            Stops the service.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.MessagingService.StopListener">
            <summary>
            Stops the internal listener if one exists.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.MessagingService.Environment">
            <summary>
            Gets the runtime environment on which this service runs.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.MessagingService.Server">
            <summary>
            Gets the server dedicated thread ID.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.MessagingService.ServerThread">
            <summary>
            Gets the server thread.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.MessagingService.ListenerExceptionHandler">
            <summary>
            Gets or sets the exception handler to use on the runtime listener.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Serialization.RuntimeSerializer">
            <summary>
            A serializer for messaging runtime objects.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Serialization.RuntimeSerializer.NewLine">
            <summary>
            Gets a new line character.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.SetEncoding(System.Text.Encoding)">
            <summary>
            Sets the default encoding scheme to the specified encoding.
            </summary>
            <param name="encoding"></param>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.GetSerializableTypeName(System.Type)">
            <summary>
            Returns the assembly qualified name of the specified System.Type.
            </summary>
            <param name="type">The System.Type to use.</param>
            <returns>The assembly qualified name of the specified System.Type.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.Serialize(System.Object)">
            <summary>
            Serializes the specified object instance to an XML string using the Unicode (little endian) encoding.
            </summary>
            <param name="data">The object instance to serialize.</param>
            <returns>An object serialized XML string.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.Serialize(System.Object,System.Text.Encoding)">
            <summary>
            Serializes the specified object instance to an XML string with the specified encoding.
            </summary>
            <param name="data">The object instance to serialize.</param>
            <param name="encoding">The encoding to use.</param>
            <returns>An object serialized XML string with the specified encoding.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.Serialize(System.Object,System.Xml.XmlWriter)">
            <summary>
            Serializes the specified object instance using the specified System.Xml.XmlWriter.
            </summary>
            <param name="data">The object instance to serialize.</param>
            <param name="writer">The System.Xml.XmlWriter to use.</param>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.SerializeType(System.Type)">
            <summary>
            Serializes the specified System.Type to an XML string using the Unicode (little endian) encoding.
            </summary>
            <param name="type">The System.Type to serialize.</param>
            <returns>An XML string describing the specified System.Type.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.SerializeType(System.Type,System.Text.Encoding)">
            <summary>
            Serializes the specified System.Type to an XML string with the specified encoding.
            </summary>
            <param name="type">The System.Type to serialize.</param>
            <param name="encoding">The encoding to use.</param>
            <returns>An XML string describing the specified System.Type.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.SerializeType(System.Type,System.Xml.XmlWriter)">
            <summary>
            Serializes the specified System.Type using the specified System.Xml.XmlWriter.
            </summary>
            <param name="type">The System.Type to serialize.</param>
            <param name="writer">The System.Xml.XmlWriter to use.</param>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.Deserialize(System.String,System.Type)">
            <summary>
            Deserializes the specified XML to an instance of the specified type.
            </summary>
            <param name="xml">An XML serialized object.</param>
            <param name="expectedType">The type of the instance to return.</param>
            <returns>An instance of the specified type deserialized from the specified XML or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.Deserialize``1(System.String)">
            <summary>
            Deserializes the specified XML to an instance of the specified type.
            </summary>
            <typeparam name="T">The type of the instance to return.</typeparam>
            <param name="xml">An XML serialized object.</param>
            <returns>An instance of the specified type deserialized from the specified XML or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.DeserializeType(System.String)">
            <summary>
            Deserializes a System.Type from the specified XML string.
            </summary>
            <param name="xml">An XML serialized type.</param>
            <returns>A System.Type deserialized from the specified XML string or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.DeserializeType(System.Xml.XmlReader)">
            <summary>
            Deserializes a System.Type using the specified System.Xml.XmlReader.
            </summary>
            <param name="reader">The XML reader to use.</param>
            <returns>A System.Type deserialized from the specified System.Xml.XmlReader.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.RuntimeSerializer.GenerateHeader(System.Text.Encoding)">
            <summary>
            Generates an XML document header with the specified encoding.
            </summary>
            <param name="encoding">The encoding to use for the XML document header.</param>
            <returns>An XML document header generated with the specified encoding.</returns>
        </member>
        <member name="P:Mercury.Messaging.Serialization.RuntimeSerializer.CurrentEncoding">
            <summary>
            Gets the current default encoding.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.IHeaders">
            <summary>
            A general collection of headers.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.IHeaders.GetDictionary">
            <summary>
            Returns the internal header dictionary.
            </summary>
            <returns>The internal header dictionary.</returns>
        </member>
        <member name="P:Mercury.Messaging.Core.IHeaders.Item(System.String)">
            <summary>
            Gets the string value associated with the specified header key.
            </summary>
            <param name="key">The header key to locate.</param>
            <returns>The string value associated with the specified header key.</returns>
        </member>
        <member name="T:Mercury.Messaging.Messages.Exit">
            <summary>
            Represents a message notifying an agent that a linked agent has shutdown.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.Exit.#ctor">
            <summary>
            Initializes a default instance of the Exit class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.Exit.#ctor(System.String)">
            <summary>
            Initializes a default instance of the Exit class with the specified agent ID.
            </summary>
            <param name="id">The ID of the exited agent.</param>
        </member>
        <member name="P:Mercury.Messaging.Messages.Exit.InstanceId">
            <summary>
            Gets the ID of the exited agent instance.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation">
            <summary>
            A set of functions to access and modify the messaging core instrumentation.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation.Initialize(System.String,Microsoft.Ccr.Core.Dispatcher,System.Boolean)">
            <summary>
            Initializes the messaging core instrumentation.
            </summary>
            <param name="environmentName">The name of the environment on which to initialize instrumentation.</param>
            <param name="disp">The environment dispatcher to use for handling logging tasks.</param>
            <param name="forceInitialize">Optional. A value indicating whether to force initialization.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation.Flush">
            <summary>
            Flushes any waiting log messages.  Will attempt flush until complete.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation.Flush(System.TimeSpan)">
            <summary>
            Flushes any waiting log messages until the specified timeout period elapses.
            </summary>
            <param name="timeout">A TimeSpan representing the period to wait for the flush operation to finish.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation.Unset">
            <summary>
            Enables the instrumentation to be re-initialized by another runtime environment.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation.Log">
            <summary>
            Gets the messaging core logger.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation.CurrentTrace">
            <summary>
            Gets the current trace source for the default logger.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation.SwitchLevel">
            <summary>
            Gets or sets the source level for the default logger switch.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation.LogSource">
            <summary>
            Gets or sets the source information of the log.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation.Mode">
            <summary>
            Gets or sets the operating mode for the instrumentation.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation.SnapshotResources">
            <summary>
            Gets or sets a value indicating whether environment context information 
            will capture a snapshot of the current running resources.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation.MonitorEndPoint">
            <summary>
            Gets or sets the IP end point to which monitoring information will be sent.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.MessagingCoreInstrumentation.NewLineTab">
            <summary>
            Gets a string representing a single tab indented new line.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Messages.RequestExtensions">
            <summary>
            Core request extensions to the Mercury.Messaging.Channels.IUntypedChannel object.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.RequestExtensions.Request``1(Mercury.Messaging.Channels.IUntypedChannel,``0,Mercury.Messaging.Channels.IUntypedChannel)">
            <summary>
            Sends a request with the specified response channel.
            </summary>
            <typeparam name="TRequest">The type of the request to send.</typeparam>
            <param name="channel">The channel over which the request will be sent.</param>
            <param name="req">The message request to send, delivered as a Request(Of TRequest) to the receiver.</param>
            <param name="responseChannel">The channel on which to respond to a request.</param>
            <returns>The request message sent.</returns>
        </member>
        <member name="M:Mercury.Messaging.Messages.RequestExtensions.Request``1(Mercury.Messaging.Channels.IUntypedChannel,``0,Mercury.Messaging.Channels.IUntypedChannel,System.String)">
            <summary>
            Sends a request with the specified response channel.
            </summary>
            <typeparam name="TRequest">The type of the request to send.</typeparam>
            <param name="channel">The channel over which the request will be sent.</param>
            <param name="req">The message request to send, delivered as a Request(Of TRequest) to the receiver.</param>
            <param name="responseChannel">The channel on which to respond to a request.</param>
            <param name="requestId">The unique identifier for this message.</param>
            <returns>The request message sent.</returns>
        </member>
        <member name="M:Mercury.Messaging.Messages.RequestExtensions.Request``1(Mercury.Messaging.Channels.IUntypedChannel,``0,Mercury.Messaging.Channels.IUntypedChannel,System.String,System.Uri,System.Net.IPEndPoint)">
            <summary>
            Sends a request with the specified response channel.
            </summary>
            <typeparam name="TRequest">The type of the request to send.</typeparam>
            <param name="channel">The channel over which the request will be sent.</param>
            <param name="req">The message request to send, delivered as a Request(Of TRequest) to the receiver.</param>
            <param name="responseChannel">The channel on which to respond to a request.</param>
            <param name="requestId">The unique identifier for this message.</param>
            <param name="responseAddress">The address of the response.</param>
            <param name="responseEndPoint">The IP end point for the response.</param>
            <returns>The request message sent.</returns>
        </member>
        <member name="T:Mercury.Messaging.Messages.Fault">
            <summary>
            Represents a fault which occurs during an agent task.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.Fault.#ctor">
            <summary>
            Initializes a default instance of the Fault class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.Fault.#ctor(System.Exception)">
            <summary>
            Initializes a default instance of the Fault class with the specified values.
            </summary>
            <param name="exception">The exception which caused this fault.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.Fault.#ctor(System.Exception,Mercury.Messaging.Messages.Fault)">
            <summary>
            Initializes a default instance of the Fault class with the specified values.
            </summary>
            <param name="exception">The exception which caused this fault.</param>
            <param name="innerFault">A prior fault which caused this fault.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.Fault.#ctor(System.Exception,Mercury.Messaging.Messages.Fault,System.Type)">
            <summary>
            Initializes a default instance of the Fault class with the specified values.
            </summary>
            <param name="exception">The exception which caused this fault.</param>
            <param name="innerFault">A prior fault which caused this fault.</param>
            <param name="receivedMessageType">The type of the last message received before the fault.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.Fault.ToString">
            <summary>
            Returns a string representation of the current Fault.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mercury.Messaging.Messages.Fault.GetSchema">
            <summary>
            Returns the XML schema.
            </summary>
            <returns>Default value is null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Messages.Fault.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the response from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.Fault.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the response to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="P:Mercury.Messaging.Messages.Fault.Exception">
            <summary>
            Gets the exception that generated the fault.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.Fault.ReceivedMessageType">
            <summary>
            Gets the type of the message received that caused the fault.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.Fault.AgentType">
            <summary>
            Gets the type of the agent on which the fault occurred.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.Fault.AgentId">
            <summary>
            Gets the instance address of the agent on which the fault occurred.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.Fault.InnerFault">
            <summary>
            Gets the fault that caused this fault.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.Fault.CallTrace">
            <summary>
            Gets a trace of the calls through which this fault was 
            propagated along with any exception stack traces.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Instrumentation.CoreLogTextWriter">
            <summary>
            An object representing a text file writer formatted especially for the Mercury.Messaging.Core environment.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.CoreLogTextWriter.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Mercury.Messaging.Instrumentation.CoreLogTextWriter"/> class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.CoreLogTextWriter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Messaging.Instrumentation.CoreLogTextWriter"/> class with the specified file path.
            </summary>
            <param name="path">The file path of the file to write to.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.CoreLogTextWriter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Messaging.Instrumentation.CoreLogTextWriter"/> class with the specified path and name.
            </summary>
            <param name="path">The file path of the file to write to.</param>
            <param name="name">The name of the new instance.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.CoreLogTextWriter.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>
            Writes trace information, a data object and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="data">The trace data to emit.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.CoreLogTextWriter.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>
            Writes trace information, an array of data objects and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="data">An array of objects to emit as data.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.CoreLogTextWriter.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Writes trace information, a message, and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="message">A message to write.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.CoreLogTextWriter.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>
            Writes trace information, a formatted array of objects and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="format">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</param>
            <param name="args">An object array containing zero or more objects to format.</param>
        </member>
        <member name="T:Mercury.Messaging.Instrumentation.ContextInfo">
            <summary>
            Provides information on the context of a single concurrent work item.
            </summary>
            <remarks>Derived from a simple formula: a context requires/utilizes a resource on an environment.  Thus, the context refers specifically to the work being done</remarks>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ContextInfo.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Mercury.Messaging.Instrumentation.ContextInfo"/> class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ContextInfo.NewInfo(Mercury.Messaging.Routing.IRoutingContext,System.Reflection.MethodBase,System.String)">
            <summary>
            Creates a new context info object from the specified routing context, method context, and message.
            </summary>
            <param name="context">The context from which to derive a new context info.</param>
            <param name="methodContext">The method in which this context was monitored.</param>
            <param name="message">A message to accompany this context info.</param>
            <returns>A new context info object derived from the specified routing context, method context, and message.</returns>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ContextInfo.NewInfo(Mercury.Messaging.Routing.IRoutingContext,Mercury.Messaging.Runtime.IResource,Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Creates a new context info object from the specified values.
            </summary>
            <param name="context">The context from which to derive a new context info.</param>
            <param name="resource">The resource executing this context.</param>
            <param name="environment">The environment hosting the context execution task.</param>
            <returns>A new context info object derived from the specified values.</returns>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ContextInfo.NewInfo(Mercury.Messaging.Routing.IRoutingContext,Mercury.Messaging.Runtime.IResource,Mercury.Messaging.Runtime.RuntimeEnvironment,System.Reflection.MethodBase,System.Net.IPEndPoint,System.String,System.String)">
            <summary>
            Creates a new context info object from the specified values.
            </summary>
            <param name="context">The context from which to derive a new context info.</param>
            <param name="resource">The resource executing this context.</param>
            <param name="environment">The environment hosting the context execution task.</param>
            <param name="methodContext">The method in which this context was monitored.</param>
            <param name="receiverEP">The IP end point of a receiver, if the routing context is sending remotely.</param>
            <param name="receiverId">The unique identifier of the receiver, if the routing context is sending.</param>
            <param name="message">A message to accompany this context info.</param>
            <returns>A new context info object derived from the specified values.</returns>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ContextInfo.ToString">
            <summary>
            Returns a System.String that represents the current <see cref="T:Mercury.Messaging.Instrumentation.ContextInfo"/>.
            </summary>
            <returns>A System.String that represents the current <see cref="T:Mercury.Messaging.Instrumentation.ContextInfo"/>.</returns>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ContextInfo.GetSchema">
            <summary>
            Returns the XML schema.
            </summary>
            <returns>Default value is null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ContextInfo.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the context info from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ContextInfo.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the context info to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ContextInfo.Created">
            <summary>
            Gets the date and time this context was created, expressed as Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ContextInfo.ProcessId">
            <summary>
            Gets the unique identifier for the system process on which this context ran.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ContextInfo.ThreadId">
            <summary>
            Gets the unique identifier for the managed thread on which this context ran.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ContextInfo.EnvironmentInfo">
            <summary>
            Gets information on the environment hosting this context execution task.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ContextInfo.ResourceInfo">
            <summary>
            Gets information on the resource executing this context.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ContextInfo.MethodContext">
            <summary>
            Gets the method in which this context was monitored.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ContextInfo.MessageInfo">
            <summary>
            Gets the message information for this context.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ContextInfo.Fault">
            <summary>
            Gets or sets a fault pertaining to this context.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ContextInfo.Message">
            <summary>
            Gets or sets a message to accompany this context info.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.FutureExtensions">
            <summary>
            Core extensions to Mercury.Messaging.Core.Future object.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.FutureExtensions.SendFuture``2(Mercury.Messaging.Channels.LocalRefChannel,``1)">
            <summary>
            Creates a future by sending a message on a resource channel.
            </summary>
            <typeparam name="TResult">The type of the expected result.</typeparam>
            <typeparam name="TMessage">The type of the message to send.</typeparam>
            <param name="reference">The resource channel on which the message will be sent.</param>
            <param name="message">The message to be sent. This message 
            must be received as a Request(Of TMessage).</param>
            <returns>A future constructed from a message sent on a resource channel.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.FutureExtensions.GetFuture``1(Mercury.Messaging.Runtime.InternalResource)">
            <summary>
            Creates and returns a future for a result of the specified type.
            </summary>
            <typeparam name="TResult">The type of the expected result.</typeparam>
            <param name="resource">The resource on which to get a future.</param>
            <returns>A future for a result of the specified type.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.FutureExtensions.SendFuture``2(Mercury.Messaging.Core.LocalRef,``1)">
            <summary>
            Creates a future by sending a message on a resource channel.
            </summary>
            <typeparam name="TResult">The type of the expected result.</typeparam>
            <typeparam name="TMessage">The type of the message to send.</typeparam>
            <param name="reference">A reference to the resource to which the message will be sent.</param>
            <param name="message">The message to be sent. This message 
            must be received as a Request(Of TMessage).</param>
            <returns>A future constructed from a message sent on a resource channel.</returns>
        </member>
        <member name="T:Mercury.Messaging.Channels.FutureMulticastChannel`1">
            <summary>
            A channel that can wait on multiple future values.
            </summary>
            <typeparam name="TResult">The type of the result value.</typeparam>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureMulticastChannel`1.#ctor(Mercury.Messaging.Runtime.RuntimeEnvironment,System.TimeSpan,Mercury.Messaging.Core.Future{`0}[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Messaging.Channels.FutureMulticastChannel`1"/> 
            with the specified runtime environment, timeout value, and array of futures.
            </summary>
            <param name="environment">The environment on which to prepare this future channel.</param>
            <param name="timeout">A time span that represents the number of milliseconds to wait for each future channel to receive a response.</param>
            <param name="futures">An array of futures on which to wait.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureMulticastChannel`1.WaitUntilCompleted(System.Int32)">
            <summary>
            Blocks the current thread until the future is resolved or the timeout expires.
            </summary>
            <param name="timeout">The number of milliseconds to wait, or -1 to wait indefinitely.</param>
            <returns>True if the future is resolved; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureMulticastChannel`1.WaitUntilCompleted(System.TimeSpan)">
            <summary>
            Blocks the current thread until the future is resolved or the timeout expires.
            </summary>
            <param name="timeout">A time span that represents the number of milliseconds to wait.  
            Use a time span representing -1 milliseconds to wait indefinitely.</param>
            <returns>True if the future is resolved; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureMulticastChannel`1.Send``1(``0)">
            <summary>
            Sends a message to all futures on this channel.
            </summary>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureMulticastChannel`1.Post(Mercury.Messaging.Routing.IRoutingContext)">
            <summary>
            This method is not supported on this channel.
            </summary>
            <param name="context">The routing context to post.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureMulticastChannel`1.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.FutureMulticastChannel`1.Dispose(System.Boolean)">
            <summary>
            Performs the actual dispose.
            </summary>
            <param name="disposing">A value indicating whether the object is currently being disposed.</param>
        </member>
        <member name="P:Mercury.Messaging.Channels.FutureMulticastChannel`1.Get">
            <summary>
            Gets the result of the future.  If the result 
            has not yet been sent, this call will block 
            until the future is resolved or the default 
            timeout expires.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.FutureMulticastChannel`1.Completed">
            <summary>
            Gets a value indicating whether this future has completed.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.FutureMulticastChannel`1.Count">
            <summary>
            Gets the number of futures on this channel.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.FutureMulticastChannel`1.Item(System.Int32)">
            <summary>
            Gets the result of the future at the specified index.
            </summary>
            <param name="index">The index of the future on which to get a result.</param>
            <returns>The result of the future at the specified index.</returns>
        </member>
        <member name="T:Mercury.Messaging.Core.RemoteRef">
            <summary>
            A reference to a remove agent.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.RemoteRef.SendSync``1(``0)">
            <summary>
            Sends a message synchronously to the receiver on this channel.
            </summary>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="message">The message to send.</param>
            <returns>An identifier for the send operation.</returns>
        </member>
        <member name="P:Mercury.Messaging.Core.RemoteRef.EndPoint">
            <summary>
            Gets the IP end point of the remote resource.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Core.RemoteRef.LastOperationId">
            <summary>
            Gets the identifier of the last send operation.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.DictionaryHeaders">
            <summary>
            Represents a dictionary of message header items.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.DictionaryHeaders.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a default instance of the DictionaryHeaders class with the specified dictionary.
            </summary>
            <param name="headers">A dictionary of header information.</param>
        </member>
        <member name="M:Mercury.Messaging.Core.DictionaryHeaders.#ctor">
            <summary>
            Initializes a default instance of the DictionaryHeaders class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.DictionaryHeaders.GetDictionary">
            <summary>
            Returns the internal header dictionary.
            </summary>
            <returns>The internal header dictionary.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.DictionaryHeaders.GetEnumerator">
            <summary>
            Returns an enumerator to iterate over the elements of the dictionary.
            </summary>
            <returns>An enumerator to iterate over the elements of the dictionary.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.DictionaryHeaders.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator to iterate over the elements of the dictionary.
            </summary>
            <returns>An enumerator to iterate over the elements of the dictionary.</returns>
        </member>
        <member name="P:Mercury.Messaging.Core.DictionaryHeaders.Item(System.String)">
            <summary>
            Gets the string value associated with the specified header key.
            </summary>
            <param name="key">The header key to locate.</param>
            <returns>The string value associated with the specified header key.</returns>
        </member>
        <member name="T:Mercury.Messaging.ServiceModel.WaitTime">
            <summary>
            Specifies an interval of time to wait for a message.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.WaitTime.#ctor">
            <summary>
            Initializes a default instance of the WaitTime class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.WaitTime.#ctor(System.TimeSpan)">
            <summary>
            Initializes a default instance of the WaitTime class with the specified wait.
            </summary>
            <param name="wait">The number of milliseconds to wait.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.WaitTime.#ctor(System.Int32,Mercury.Messaging.ServiceModel.TimeInterval)">
            <summary>
            Initializes a default instance of the WaitTime class with the specified wait and interval.
            </summary>
            <param name="wait">The number of units to wait according to the specified time interval.</param>
            <param name="interval">The time interval to wait.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.WaitTime.GetWaitRecord">
            <summary>
            Returns a wait time record.
            </summary>
            <returns>A wait time record.</returns>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.WaitTime.Create(System.Byte[])">
            <summary>
            Creates a wait time instance from the specified wait time record.
            </summary>
            <param name="waitTime">The serialized wait time record to use.</param>
            <returns>A wait time instance constructed from the specified wait time record.</returns>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.WaitTime.Wait">
            <summary>
            Gets the interval to wait.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.WaitTime.Interval">
            <summary>
            Gets the interval type.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.WaitTime.Record">
            <summary>
            Gets the message framing record for a wait time message.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.WaitTime.TotalMilliseconds">
            <summary>
            Gets the total number of milliseconds described by this wait time.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.ServiceModel.StartServer">
            <summary>
            A message sent to notify the runtime listener to begin intercepting and routing remote requests.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.StartServer.#ctor(System.Int32)">
            <summary>
            Initializes a default instance of the StartServer class witht the specified port.
            </summary>
            <param name="port">The port number associated with the address, or 0 to specify any port.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.StartServer.#ctor(System.String,System.Int32,System.Net.Sockets.AddressFamily)">
            <summary>
            Initializes a default instance of the StartServer class with the specified values.
            </summary>
            <param name="host">A host name or IP address string to use.</param>
            <param name="port">The port number associated with the address, or 0 to specify any port.</param>
            <param name="addressFamily">The address family describing the address to use.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.StartServer.#ctor(System.Net.IPEndPoint)">
            <summary>
            Initializes a default instance of the StartServer class with the specified IP end point.
            </summary>
            <param name="endPoint">The IP end point to use.</param>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.StartServer.EndPoint">
            <summary>
            Gets the IP end point on which to start listening.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Serialization.SerialMessage">
            <summary>
            A message that can be serialized and passed across application boundaries.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Serialization.ITypeReceive">
            <summary>
            A type receiver interface.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.ITypeReceive.Type">
            <summary>
            Gets the type to receive.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.ITypeReceive.BaseType">
            <summary>
            Gets the base type to receive.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.ITypeReceive.Instance">
            <summary>
            Gets the instance to receive.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Routing.IRoutingContext">
            <summary>
            Describes a Message carried by a Channel.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.IRoutingContext.Message">
            <summary>
            Gets the message for this context.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.IRoutingContext.Channel">
            <summary>
            Gets the channel for this context.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.IRoutingContext.MessageType">
            <summary>
            Gets the expected message type.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.IRoutingContext.IsSynchronous">
            <summary>
            Gets a value indicating whether the message 
            should be processed synchronously.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.IRoutingContext.RouteId">
            <summary>
            Gets the route identifier.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialMessage.#ctor">
            <summary>
            Initializes a default instance of the SerialMessage class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialMessage.#ctor(System.Object,System.String)">
            <summary>
            Initializes a default instance of the SerialMessage class with the specified values.
            </summary>
            <param name="message">The message to receive.</param>
            <param name="destination">The destination agent ID.</param>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialMessage.#ctor(System.Object,System.String,System.Boolean)">
            <summary>
            Initializes a default instance of the SerialMessage class with the specified values.
            </summary>
            <param name="message">The message to receive.</param>
            <param name="destination">The destination agent ID.</param>
            <param name="isSynchronous">A value indicating whether the received 
            message should be processed synchronously.</param>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialMessage.#ctor(System.Object,System.String,System.Boolean,System.Type)">
            <summary>
            Initializes a default instance of the SerialMessage class with the specified values.
            </summary>
            <param name="message">The message to receive.</param>
            <param name="destination">The destination agent ID.</param>
            <param name="isSynchronous">A value indicating whether the received 
            message should be processed synchronously.</param>
            <param name="destinationType">The type of the destination agent.</param>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialMessage.#ctor(System.Type,System.Object,System.String,System.Boolean,System.Type)">
            <summary>
            Initializes a default instance of the SerialMessage class with the specified values.
            </summary>
            <param name="type">The type of the message to receive.</param>
            <param name="message">The message to receive.</param>
            <param name="destination">The destination agent ID.</param>
            <param name="isSynchronous">A value indicating whether the received 
            message should be processed synchronously.</param>
            <param name="destinationType">The type of the destination agent.</param>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialMessage.#ctor(System.Type,System.Object,System.String,System.Boolean,System.Type,System.String,System.Net.IPEndPoint)">
            <summary>
            Initializes a default instance of the SerialMessage class with the specified values.
            </summary>
            <param name="type">The type of the message to receive.</param>
            <param name="message">The message to receive.</param>
            <param name="destination">The destination agent ID.</param>
            <param name="isSynchronous">A value indicating whether the received 
            message should be processed synchronously.</param>
            <param name="destinationType">The type of the destination agent.</param>
            <param name="returnId">The ID of the resource on which a signal 
            ending a blocking request should be returned.</param>
            <param name="returnEndPoint">The IP end point at which a 
            signal ending a blocking request should be returned.</param>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialMessage.GetSchema">
            <summary>
            Returns the XML schema.
            </summary>
            <returns>Default value is null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialMessage.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the response from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialMessage.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the response to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialMessage.Channel">
            <summary>
            Gets the channel on which this message will be sent.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialMessage.MessageType">
            <summary>
            Gets the expected message type.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialMessage.RouteId">
            <summary>
            Gets the route identifier.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialMessage.Type">
            <summary>
            Gets the type to receive.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialMessage.BaseType">
            <summary>
            Gets the base type to receive.  Must be identical to or implement the specified Type.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialMessage.Instance">
            <summary>
            Gets the instance of the type to receive.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialMessage.Message">
            <summary>
            Gets the message.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialMessage.Destination">
            <summary>
            Gets the destination URI.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialMessage.DestinationType">
            <summary>
            Gets the type of the destination agent.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialMessage.IsSynchronous">
            <summary>
            Gets a value indicating whether this message should be processed synchronously.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialMessage.ReturnId">
            <summary>
            Gets the ID of the resource to which a signal 
            ending a blocking request should be returned.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialMessage.ReturnEndPoint">
            <summary>
            Gets the IP end point at which a signal ending 
            a blocking request should be returned.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Properties.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.Acknowledgement_Failed_Exception">
            <summary>
              Looks up a localized string similar to An expected acknowledgement was not received..
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.Interface_Type_Constraint">
            <summary>
              Looks up a localized string similar to The specified type parameter &apos;{0}&apos; must be an interface..
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.Invalid_Message_Exception">
            <summary>
              Looks up a localized string similar to Invalid or incomplete message was received..
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.Message_Delivery_Exception">
            <summary>
              Looks up a localized string similar to Message delivery was not verifiably successful..
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.Message_Size_Overflow">
            <summary>
              Looks up a localized string similar to A single, received message exceeded the allowable size limit..
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.Packet_Protocol_Size_Violation">
            <summary>
              Looks up a localized string similar to The data packet size exceeds permitted lengths.  Message data may not exceed {0} bytes in size..
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.Partial_Message_Exception">
            <summary>
              Looks up a localized string similar to A partial or non-terminating message was received on a remote runtime..
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.Remote_Process_Failure">
            <summary>
              Looks up a localized string similar to Message processing failed on the remote runtime..
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.RTConstraintException_CompileTime_Constructors">
            <summary>
              Looks up a localized string similar to The specified {0} type does not support a constructor with arguments: {1}..
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.RTConstraintException_General">
            <summary>
              Looks up a localized string similar to A constraint was violated on this runtime environment..
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Properties.Strings.RTConstraintException_Remote_Sync">
            <summary>
              Looks up a localized string similar to A remote channel cannot send while waiting for a synchronous reply..
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.TypeExtensions">
            <summary>
            Core extensions to the System.Type object.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.TypeExtensions.GetDirectInterfaces(System.Type)">
            <summary>
            Returns an array of interface types directly implemented by this type.
            </summary>
            <param name="type">The type on which to perform the operation.</param>
            <returns>An array of interface types directly implemented by this type.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.TypeExtensions.GetFirstInterfaceOrDefault(System.Type)">
            <summary>
            Returns the first interface directly implemented by this type.
            </summary>
            <param name="type">The type on which to perform the operation.</param>
            <returns>The first interface directly implemented by this type.  
            If not interfaces exist, returns the base type.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.TypeExtensions.HasDirectInterface(System.Type,System.String)">
            <summary>
            Returns a value indicating whether the specified type name 
            matches any directly implemented interface type names.
            </summary>
            <param name="type">The type on which to perform the operation.</param>
            <param name="partialTypeName">The partial, or full, type name to match.</param>
            <returns>True if the specified type name is directly implemented by this type; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.TypeExtensions.HasGenericInterface(System.Type,System.Type)">
            <summary>
            Returns a value indicating whether the specified type definition matches any implemented interfaces.
            </summary>
            <param name="type">The type on which to perform the operation.</param>
            <param name="typeDefinition">The type definition to find.</param>
            <returns>True if the specified type definition is an interface on this type; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.TypeExtensions.IsDerivedFrom(System.Type,System.Type)">
            <summary>
            Returns a value indicating whether this type is or is derived from the specified type definition.
            </summary>
            <param name="type">The type on which to perform the operation.</param>
            <param name="typeDefinition">The type definition for the inherited type.</param>
            <returns>True if this type is derived from the specified type definition; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.TypeExtensions.GetInterfaceFromPartial(System.Type,System.String,System.Boolean)">
            <summary>
            Returns the interface type that matches the specified partial type name.
            </summary>
            <param name="type">The type on which to perform the operation.</param>
            <param name="partialTypeName">The partial, or full, type name to match.</param>
            <param name="ignoreCase">A value indicating whether to ignore casing.</param>
            <returns>The interface type that matches the specified partial type name.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.TypeExtensions.GetGenericInterfaceFromTypeDefinition(System.Type,System.Type)">
            <summary>
            Returns the generic interface with the specified type definition on this type.
            </summary>
            <param name="type">The type on which to perform the operation.</param>
            <param name="typeDefinition">The type definition to find.</param>
            <returns>The generic interface with the specified type definition 
            on this type, or null if no matching definition is found.</returns>
        </member>
        <member name="T:Mercury.Messaging.Core.AgentPort">
            <summary>
            Represents a message queue for processing messages on an Agent.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentPort.#ctor(Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Initializes a default instance of the AgentPort 
            class with the specified runtime environment.
            </summary>
            <param name="environment">The RuntimeEnvironment on which this AgentPort is managed.</param>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentPort.UpdateAccessDateTime">
            <summary>
            Updates the last access date and time.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentPort.Post(Mercury.Messaging.Routing.IRoutingContext)">
            <summary>
            Posts the routing context to the internal port.
            </summary>
            <param name="context">The IRoutingContext to post.</param>
        </member>
        <member name="F:Mercury.Messaging.Core.AgentPort._synchronousExecute">
            <summary>
            Indicates whether current execution is synchronous.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentPort.PostHandler(Mercury.Messaging.Routing.IRoutingContext)">
            <summary>
            Handles a routing context received from the internal port.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentPort.HandleInterrupt">
            <summary>
            Determines whether an interrupt item is waiting to be handled and attempts to handle it.
            </summary>
            <returns>True if an interrupt was waiting to be handled 
            and has been dispatched to handle; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentPort.Receive``1(Mercury.Messaging.Core.ReceiveHandler{``0})">
            <summary>
            Registers a receiver for a message of the specified type.  
            Registering the same receiver multiple times overwrites 
            the previous instance.
            </summary>
            <typeparam name="T">The type of the message to receive.</typeparam>
            <param name="handler">The handler delegate for the received message.</param>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentPort.AddReceiver``1(System.Type,Mercury.Messaging.Core.ReceiveHandler{``0})">
            <summary>
            Registers a receiver with the specified derived type and generic handler.
            </summary>
            <typeparam name="T">The type handled by the receive handler.</typeparam>
            <param name="derivedType">The type to register.</param>
            <param name="handler">The receive handler delegate to associate.</param>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentPort.AddReceiver(System.Type,Mercury.Messaging.Core.ReceiveHandler{System.Object})">
            <summary>
            Registers a receiver type and handler.
            </summary>
            <param name="type">The type to register.</param>
            <param name="handler">The handler delegate to associate.</param>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentPort.Shutdown(Mercury.Messaging.Messages.Fault)">
            <summary>
            Forces this port to stop processing messages and shutdown.
            </summary>
            <param name="fault">The Fault message to send to any linked agents. 
            If fault is null, an Exit message will be sent to all linked 
            agents; otherwise, a Fault message will be sent specifying the 
            error information.</param>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentPort.SendToLinkedPorts``1(``0)">
            <summary>
            Sends the specified message to all linked ports.
            </summary>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentPort.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.AgentPort.Dispose(System.Boolean)">
            <summary>
            Performs the actual dispose.
            </summary>
            <param name="disposing">A value indicating whether the object is currently being disposed.</param>
        </member>
        <member name="P:Mercury.Messaging.Core.AgentPort.AgentHandle">
            <summary>
            Gets the associated agent.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Core.AgentPort.AgentType">
            <summary>
            Gets the type of the agent assigned to this port.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Core.AgentPort.IsSynchronous">
            <summary>
            Gets or sets a value indicating whether this port processes messages synchronously.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Core.AgentPort.AgentQueue">
            <summary>
            The default agent queue.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Core.AgentPort.SyncAgentQueue">
            <summary>
            The synchronous processing agent queue.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Core.AgentPort.InterruptQueue">
            <summary>
            The interruptible agent queue.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Core.AgentPort.Receivers">
            <summary>
            Gets a dictionary of registered receive handlers.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Channels.RemotingChannel">
            <summary>
            A channel used to send a message across application boundaries.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.#ctor">
            <summary>
            Initializes a default instance of the RemotingChannel class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.#ctor(System.Net.IPEndPoint,System.String,System.Type,System.TimeSpan,Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Initializes a default instance of the RemotingChannel class with the specified values.
            </summary>
            <param name="endPoint">The IP end point of the destination environment.</param>
            <param name="forwardingId">The ID of the destination resource.</param>
            <param name="destinationType">The System.Type of the destination agent.</param>
            <param name="timeout">The time span to wait for a reply from the remote 
            environment before this channel throws a message delivery exception.</param>
            <param name="environment">The runtime environment on which this channel exists.</param>
        </member>
        <member name="F:Mercury.Messaging.Channels.RemotingChannel.DestinationType">
            <summary>
            The System.Type of the destination agent.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.Send``1(``0)">
            <summary>
            Sends the specified message.
            </summary>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.Send(System.Type,System.Object)">
            <summary>
            Sends the message with the specified type.
            </summary>
            <param name="type">The type of the message to send.</param>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.SendSync``1(``0)">
            <summary>
            Sends a message synchronously to the receiver on this channel.
            </summary>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="message">The message to send.</param>
            <returns>An identifier for the send operation.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.SendSync(System.Type,System.Object)">
            <summary>
            Sends a message synchronously to the receiver on this channel.
            </summary>
            <param name="type">The type of the message to send.</param>
            <param name="message">The message to send.</param>
            <returns>An identifier for the send operation.</returns>
        </member>
        <member name="F:Mercury.Messaging.Channels.RemotingChannel._locked">
            <summary>
            A value indicating whether send access is locked by a synchronous operation.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Channels.RemotingChannel._signal">
            <summary>
            Signals the end of a synchronous send operation.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.SendSerialMessage(Mercury.Messaging.Serialization.SerialMessage,System.Boolean)">
            <summary>
            Sends a serial message on the channel and returns an identifier for the send operation.
            </summary>
            <param name="message">The serial message to send.</param>
            <param name="waitSynchronous">A value indicating whether the send should wait for a synchronous return.</param>
            <returns>An identifier for the send operation.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.Post(Mercury.Messaging.Routing.IRoutingContext)">
            <summary>
            Overrides the default post behavior.
            </summary>
            <param name="context">The routing context posted.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.GetSchema">
            <summary>
            Returns the XML schema.
            </summary>
            <returns>Default value is null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the response from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the response to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.Dispose(System.Boolean)">
            <summary>
            Performs the actual dispose.
            </summary>
            <param name="disposing">A value indicating whether the object is currently being disposed.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.OnManagedDispose">
            <summary>
            Disposes managed resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.RemotingChannel.OnUnmanagedDispose">
            <summary>
            Disposes unmanaged resources.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.RemotingChannel.EndPoint">
            <summary>
            Gets the IP end point of the runtime environment on which the destination agent resides.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.RemotingChannel.Timeout">
            <summary>
            Gets or sets the timeout value for this channel.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.RemotingChannel.LastOperationId">
            <summary>
            Gets the identifier of the last send operation.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.RemotingChannel.PostErrors">
            <summary>
            Gets or sets a value indicating whether to post message delivery errors to this channel's error handler.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.RemotingChannel.ErrorHandler">
            <summary>
            Gets or sets a delegate to a method that can handle message delivery errors that occur on send operations.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Routing.RoutingContext">
            <summary>
            Describes a message carried by a channel.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Routing.RoutingContext.#ctor(System.Object,Mercury.Messaging.Channels.IChannel,System.Boolean)">
            <summary>
            Initializes a default instance of the RoutingContext class with the specified values.
            </summary>
            <param name="message">The message being sent.</param>
            <param name="channel">The channel over which the message was sent.</param>
            <param name="isSynchronous">A value indicating whether the message should be processed synchronously.</param>
        </member>
        <member name="P:Mercury.Messaging.Routing.RoutingContext.Message">
            <summary>
            Gets the message for this context.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.RoutingContext.Channel">
            <summary>
            Gets the channel for this context.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.RoutingContext.MessageType">
            <summary>
            Gets the expected message type.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.RoutingContext.IsSynchronous">
            <summary>
            Gets a value indicating whether the message described 
            in this context should be processed synchronously.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.RoutingContext.RouteId">
            <summary>
            Gets the route identifier.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Routing.RoutingContext`2">
            <summary>
            Describes a message carried by a channel.
            </summary>
            <typeparam name="TMessage">The type of the message in this context.</typeparam>
            <typeparam name="TChannel">The type of the channel in this context.</typeparam>
        </member>
        <member name="M:Mercury.Messaging.Routing.RoutingContext`2.#ctor(`0,`1,System.Boolean)">
            <summary>
            Initializes a default instance of the RoutingContext(Of TMessage, TChannel) 
            class with the specified message and channel.
            </summary>
            <param name="message">The message to route.</param>
            <param name="channel">The channel on which the message will be sent.</param>
            <param name="isSynchronous">A value indicating whether the message should be processed synchronously.</param>
        </member>
        <member name="P:Mercury.Messaging.Routing.RoutingContext`2.Message">
            <summary>
            Gets the generically typed message.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.RoutingContext`2.Channel">
            <summary>
            Gets the generically typed channel.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.RoutingContext`2.Mercury#Messaging#Routing#IRoutingContext#Message">
            <summary>
            Gets the message in this context.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.RoutingContext`2.Mercury#Messaging#Routing#IRoutingContext#Channel">
            <summary>
            Gets the channel in this context.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.RoutingContext`2.MessageType">
            <summary>
            Gets the type of the message in this context.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.RoutingContext`2.IsSynchronous">
            <summary>
            Gets a value indicating whether the message described 
            in this context should be processed synchronously.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Routing.RoutingContext`2.RouteId">
            <summary>
            Gets the route identifier.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Messages.RequestBase`1">
            <summary>
            Represents a base implementation for all requests.
            </summary>
            <typeparam name="T">The type of the message body contained in this request.</typeparam>
        </member>
        <member name="M:Mercury.Messaging.Messages.RequestBase`1.#ctor">
            <summary>
            Initializes a default instance of the RequestBase(Of T) class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.RequestBase`1.#ctor(Mercury.Messaging.Channels.IUntypedChannel,`0)">
            <summary>
            Initializes a default instance of the RequestBase(Of T) class with the specified values.
            </summary>
            <param name="responseChannel">The channel on which to respond.</param>
            <param name="message">The message request to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.RequestBase`1.#ctor(Mercury.Messaging.Channels.IUntypedChannel,`0,System.String)">
            <summary>
            Initializes a default instance of the RequestBase(Of T) class with the specified values.
            </summary>
            <param name="responseChannel">The channel on which to respond.</param>
            <param name="message">The message request to send.</param>
            <param name="requestId">The unique identifier of the request.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.RequestBase`1.#ctor(Mercury.Messaging.Channels.IUntypedChannel,`0,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a default instance of the RequestBase(Of T) class with the specified values.
            </summary>
            <param name="responseChannel">The channel on which to respond.</param>
            <param name="message">The message request to send.</param>
            <param name="headers">A dictionary of message headers.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.RequestBase`1.#ctor(Mercury.Messaging.Channels.IUntypedChannel,`0,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a default instance of the RequestBase(Of T) class with the specified values.
            </summary>
            <param name="responseChannel">The channel on which to respond.</param>
            <param name="message">The message request to send.</param>
            <param name="requestId">The unique identifier of the request.</param>
            <param name="headers">A dictionary of message headers.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.RequestBase`1.#ctor(Mercury.Messaging.Channels.IUntypedChannel,`0,System.String,System.Uri,System.Net.IPEndPoint,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a default instance of the RequestBase(Of T) class with the specified values.
            </summary>
            <param name="responseChannel">The channel on which to respond.</param>
            <param name="message">The message request to send.</param>
            <param name="requestId">The unique identifier of the request.</param>
            <param name="responseAddress">The receive address for a response.</param>
            <param name="responseEndPoint">The IP end point for a remote response.</param>
            <param name="headers">A dictionary of message headers.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.RequestBase`1.ConstructResponseChannel(Mercury.Messaging.Runtime.RuntimeEnvironment)">
            <summary>
            Constructs a response channel on the specified runtime environment.
            </summary>
            <param name="environment">The runtime environment on which to constructo the channel.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.RequestBase`1.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the response from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.RequestBase`1.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the response to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="P:Mercury.Messaging.Messages.RequestBase`1.ResponseChannel">
            <summary>
            Gets or sets the response channel.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.RequestBase`1.RequestId">
            <summary>
            Gets or sets the unique identifier for the request.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.RequestBase`1.ResponseAddress">
            <summary>
            Gets or sets the address for a response.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Messages.RequestBase`1.ResponseEndPoint">
            <summary>
            Gets or sets the IP end point for a response.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Instrumentation.ResourceInfo">
            <summary>
            Provides information on a runtime managed resource that can execute tasks.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ResourceInfo.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Mercury.Messaging.Instrumentation.ResourceInfo"/> class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ResourceInfo.ToString">
            <summary>
            Returns a System.String that represents the current <see cref="T:Mercury.Messaging.Instrumentation.MethodContextInfo"/>.
            </summary>
            <returns>A System.String that represents the current <see cref="T:Mercury.Messaging.Instrumentation.MethodContextInfo"/>.</returns>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ResourceInfo.GetSchema">
            <summary>
            Returns the XML schema.
            </summary>
            <returns>Default value is null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ResourceInfo.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the context info from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.ResourceInfo.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the context info to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ResourceInfo.Id">
            <summary>
            Gets the unique identifier of the managed resource.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ResourceInfo.Type">
            <summary>
            Gets the type of the resource.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ResourceInfo.AgentType">
            <summary>
            Gets the type of the agent being hosted, if an agent port.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ResourceInfo.IsSynchronous">
            <summary>
            Gets a value indicating whether to synchronously execute a task on an agent.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ResourceInfo.IsShuttingDown">
            <summary>
            Gets a value indicating whether this resource is in the process of unloading.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ResourceInfo.LastPost">
            <summary>
            Gets the date and time of the last post operation to this resource.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.ResourceInfo.LinkedPorts">
            <summary>
            Gets an array of unique identifiers for linked agent ports on this resource.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Channels.ResourceTimeoutChannel">
            <summary>
            A resource channel that persists itself and shuts down when its timeout expires.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.ResourceTimeoutChannel.#ctor">
            <summary>
            Initializes a default instance of the ResourceTimeoutChannel class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.ResourceTimeoutChannel.#ctor(Mercury.Messaging.Runtime.RuntimeEnvironment,Mercury.Messaging.Runtime.InternalResource)">
            <summary>
            Initializes a new instance of the ResourceTimeoutChannel 
            with the specified environment and referenced resource.
            </summary>
            <param name="environment">The runtime environment for this channel.</param>
            <param name="resource">The resource referenced by this channel.</param>
        </member>
        <member name="F:Mercury.Messaging.Channels.ResourceTimeoutChannel._scheduler">
            <summary>
            The scheduler used to schedule timeout actions.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.ResourceTimeoutChannel.ScheduleNextTimeout(System.TimeSpan)">
            <summary>
            Schedules the next timeout for this channel using the specified timeout value.
            </summary>
            <param name="timeout">The timeout value to schedule.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.ResourceTimeoutChannel.DoExpireChannelResource">
            <summary>
            Expires the channel resource.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.ResourceTimeoutChannel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.ResourceTimeoutChannel.Dispose(System.Boolean)">
            <summary>
            Performs the actual dispose.
            </summary>
            <param name="disposing">A value indicating whether the object is currently being disposed.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.ResourceTimeoutChannel.OnManagedDispose">
            <summary>
            Disposes managed resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.ResourceTimeoutChannel.OnUnmanagedDispose">
            <summary>
            Disposes unmanaged resources.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Channels.ResourceTimeoutChannel.Timeout">
            <summary>
            Gets the time span to wait before the channel expires.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.ServiceModel.TimeInterval">
            <summary>
            Describes an interval of time.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.TimeInterval.Days">
            <summary>
            The interval is in days.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.TimeInterval.Hours">
            <summary>
            The interval is in hours.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.TimeInterval.Minutes">
            <summary>
            The interval is in minutes.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.TimeInterval.Seconds">
            <summary>
            The interval is in seconds.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.TimeInterval.Milliseconds">
            <summary>
            The interval is in milliseconds.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.ServiceModel.MessageDeliveryException">
            <summary>
            Thrown when a message cannot be verified to have had a successful delivery.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.MessageDeliveryException.#ctor">
            <summary>
            Initializes a default instance of the MessageDeliveryException class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.MessageDeliveryException.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the MessageDeliveryException class with the specified fault code.
            </summary>
            <param name="faultCode">The integer value of the packet fault code that occurred.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.MessageDeliveryException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MessageDeliveryException 
            class with the specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.MessageDeliveryException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MessageDeliveryException 
            class with the specified error message and inner exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the 
            current exception, or null if no exception is specified.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.MessageDeliveryException.#ctor(System.Int32,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MessageDeliveryException class with 
            the specified fault code, error message, and inner exception.
            </summary>
            <param name="faultCode">The integer value of the packet fault code that occurred.</param>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the 
            current exception, or null if no exception is specified.</param>
        </member>
        <member name="M:Mercury.Messaging.ServiceModel.MessageDeliveryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MessageDeliveryException class with serialized data. 
            </summary>
            <param name="info">The Syste.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The Syste.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.MessageDeliveryException.RawCode">
            <summary>
            Gets the raw integer code for this fault.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.ServiceModel.MessageDeliveryException.FaultCode">
            <summary>
            Gets the fault code encountered on this exception.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Runtime.RuntimeEnvironment">
            <summary>
            Represents a runtime environment for managing a distinct pool of agents as addressable resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RuntimeEnvironment class with the specified name.
            </summary>
            <param name="name">The name of the runtime environment.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the RuntimeEnvironment class with the specified name and number of threads per CPU.
            </summary>
            <param name="name">The name of the runtime environment.</param>
            <param name="threadsPerCpu">The number of threads to run on each CPU.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the RuntimeEnvironment class with the specified name and thread counts.
            </summary>
            <param name="name">The name of the runtime environment.</param>
            <param name="agentThreadCount">The number of threads on which to run agents or 0 to use defaults.</param>
            <param name="timerThreadCount">The number of threads on which to run time scheduled tasks or 0 to use defaults.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.GetRef(System.String)">
            <summary>
            Returns a reference to a resource with the specified ID.
            </summary>
            <param name="id">The ID of the resource to reference.</param>
            <returns>A reference to a resource with the specified ID or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.GetRef(System.String,System.Boolean)">
            <summary>
            Returns a reference to a resource with the specified ID.
            </summary>
            <param name="id">The ID of the resource to reference.</param>
            <param name="isSynchronous">A value indicating whether messages on this resource 
            should be handled synchronously.  Only applies to an agent reference.</param>
            <returns>A reference to a resource with the specified ID or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.GetRef(System.Type)">
            <summary>
            Returns a reference to the first agent resource with the specified type.
            </summary>
            <param name="type">The type of the resource to reference.</param>
            <returns>A reference to the first agent resource with the specified type or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.GetRef(System.Type,System.Boolean)">
            <summary>
            Returns a reference to the first agent resource with the specified type.
            </summary>
            <param name="type">The type of the resource to reference.</param>
            <param name="isSynchronous">A value indicating whether messages on this resource 
            should be handled synchronously.  Only applies to an agent reference.</param>
            <returns>A reference to the first agent resource with the specified type or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.GetRef(System.String,System.Net.IPEndPoint,System.TimeSpan)">
            <summary>
            Returns a reference to a remote resource with the specified ID and end point.
            </summary>
            <param name="id">The ID of the resource to reference.</param>
            <param name="endPoint">The IP end point of the remote runtime.</param>
            <param name="timeout">The time to wait for an acknowledgement from the remote runtime 
            or a reply before the channel shuts down communication.</param>
            <returns>A reference to a remote resource with the specified ID and end point.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.GetRef(System.Type,System.Net.IPEndPoint,System.TimeSpan)">
            <summary>
            Returns a reference to a remote resource with the specified ID and end point.
            </summary>
            <param name="agentType">The type of the agent to reference. This will send 
            a message to each agent with the specified type on the remote runtime.</param>
            <param name="endPoint">The IP end point of the remote runtime.</param>
            <param name="timeout">The time to wait for an acknowledgement from the remote runtime 
            or a reply before the channel shuts down communication.</param>
            <returns>A reference to a remote resource with the specified ID and end point.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.GetAgentRefsByType(System.Type)">
            <summary>
            Gets an enumerable collection of references to agents with the specified type.
            </summary>
            <param name="searchType">The type of agent to locate.</param>
            <returns>An enumerable collection of references to agents with the specified type.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.GetFuture``1(System.String)">
            <summary>
            Gets a future for the agent at the specified ID returning the specified type result.
            </summary>
            <typeparam name="TResult">The type of the result to return.</typeparam>
            <param name="id">The ID of the agent on which to obtain a future.</param>
            <returns>A future for the agent at the specified ID returning the specified type result.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.GetFuture``1(System.TimeSpan,Mercury.Messaging.Core.Future{``0}[])">
            <summary>
            Gets a future channel that waits on all of the specified futures to complete.
            </summary>
            <typeparam name="TResult">The type of the result to return.</typeparam>
            <param name="timeout">A timeout value for each future to wait.</param>
            <param name="futures">An array of futures on which to wait.</param>
            <returns>A future channel that waits on all of the specified futures to complete.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.Spawn(System.Type)">
            <summary>
            Spawns an agent and returns an identifier for the newly spawned agent's port.
            </summary>
            <param name="type">The type of the agent to spawn.</param>
            <returns>An identifier for the newly spawned agent's port.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.Spawn(System.Type,System.Object[])">
            <summary>
            Spawns an agent and returns an identifier for the newly spawned agent's port.
            </summary>
            <param name="type">The type of the agent to spawn.</param>
            <param name="args">Additional arguments to pass to the agent's constructor.</param>
            <returns>An identifier for the newly spawned agent's port.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.SpawnLink(System.Type,System.String,System.Object[])">
            <summary>
            Spawns an agent and links on the specified link ID, returning 
            an identifier for the newly spawned agent's port.
            </summary>
            <param name="type">The type of the agent to spawn.</param>
            <param name="linkId">The agent ID on which to link the newly spawned agent.</param>
            <param name="args">Additional arguments to pass to the agent's constructor.</param>
            <returns>An identifier for the newly spawned agent's port.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.Kill(System.String)">
            <summary>
            Terminates the agent at the specified ID.
            </summary>
            <param name="id">The identifier of the agent to terminate.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.FindResource(System.String)">
            <summary>
            Returns the resource with the specified ID.
            </summary>
            <param name="id">The ID of the resource to locate.</param>
            <returns>The resource associated with the specified ID.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.FindAgentPort(System.String)">
            <summary>
            Returns the AgentPort associated with the specified port ID.
            </summary>
            <param name="id">The instance identifier of the AgentPort to locate.</param>
            <returns>The AgentPort associated with the specified port ID.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.FindAgentPort(System.Type)">
            <summary>
            Returns the first AgentPort whose agent type matches the specified type.
            </summary>
            <param name="type">The type of the agent to locate.</param>
            <returns>The first AgentPort whose agent type matches the specified type or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.FindAgentPorts(System.Type)">
            <summary>
            Returns the first AgentPort whose agent type matches the specified type.
            </summary>
            <param name="type">The type of the agent to locate.</param>
            <returns>The first AgentPort whose agent type matches the specified type or null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.GetAllInternalResources">
            <summary>
            Gets an enumerable collection of all internal resources.
            </summary>
            <returns>An enumerable collection of all internal resources.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.NewPort">
            <summary>
            Returns a new agent port for this runtime environment.
            </summary>
            <returns>A new agent port for this runtime environment.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.Dispose(System.Boolean)">
            <summary>
            Performs the actual dispose.
            </summary>
            <param name="disposing">A value indicating whether the object is currently being disposed.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.Link(System.String,System.String)">
            <summary>
            Creates a link between the agents referenced with the specified agent IDs.
            </summary>
            <param name="pid1">The first agent ID to link.</param>
            <param name="pid2">The second agent ID to link.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.Unlink(System.String,System.String)">
            <summary>
            Removes a link between the agents referenced with the specified agent IDs.
            </summary>
            <param name="pid1">The first agent ID to unlink.</param>
            <param name="pid2">The second agent ID to unlink.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.HasLink(System.String,System.String)">
            <summary>
            Returns a value indicating whether a link exists between 
            the agents referenced with the specified agent IDs.
            </summary>
            <param name="pid1">The first agent ID to check.</param>
            <param name="pid2">The second agent ID to check.</param>
            <returns>True if a link exists; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.PostToPort``1(Mercury.Messaging.Core.AgentPort,``0)">
            <summary>
            Post the specified message to the specified port.
            </summary>
            <typeparam name="T">The type of the message to post.</typeparam>
            <param name="port">The agent port on which to post.</param>
            <param name="message">The message to post.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.PostToPort``1(Mercury.Messaging.Core.AgentPort,``0,System.Boolean)">
            <summary>
            Post the specified message to the specified port.
            </summary>
            <typeparam name="T">The type of the message to post.</typeparam>
            <param name="port">The agent port on which to post.</param>
            <param name="message">The message to post.</param>
            <param name="isSynchronous">A value indicating whether the message should be processed synchronously.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.PostToPort(Mercury.Messaging.Core.AgentPort,Mercury.Messaging.Routing.IRoutingContext)">
            <summary>
            Posts the specified routing context to the specified agent port.
            </summary>
            <param name="port">The agent port on which to post.</param>
            <param name="context">The routing context to post.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.Register(System.String,System.Net.IPEndPoint)">
            <summary>
            Registers the specified remote node with this runtime environment.
            </summary>
            <param name="nodeId">The identifier of the remote node to register.</param>
            <param name="endPoint">The remote IP end point to register.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.Register(System.String,System.String,System.Int32)">
            <summary>
            Registers the specified remote node with this runtime environment.
            </summary>
            <param name="nodeId">The identifier of the remote node to register.</param>
            <param name="ip">The remote IP address string to register.</param>
            <param name="port">The port number to register.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.Unregister(System.String)">
            <summary>
            Unregisters the specified node on this runtime environment.
            </summary>
            <param name="nodeId">The identifier of the remote node to unregister.</param>
        </member>
        <member name="F:Mercury.Messaging.Runtime.RuntimeEnvironment._lastKnownFault">
            <summary>
            The last known (registered) fault on the environment.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.RegisterFaultWithRuntime(Mercury.Messaging.Messages.Fault)">
            <summary>
            Registers a fault with the runtime environment.  By default, 
            this will only appear as the last known fault on the runtime.
            </summary>
            <param name="fault">The fault to register.</param>
        </member>
        <member name="M:Mercury.Messaging.Runtime.RuntimeEnvironment.Shutdown">
            <summary>
            Shuts down the runtime environment and disposes of all current resources.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.RuntimeEnvironment.Resources">
            <summary>
            The internal resource pool.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.RuntimeEnvironment.ResourceCount">
            <summary>
            Gets the number of resources running in this environment.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.RuntimeEnvironment.AgentTasks">
            <summary>
            Gets a dispatcher queue for asynchronous agent tasks.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.RuntimeEnvironment.SyncAgentTasks">
            <summary>
            Gets a dispatcher queue for synchronous agent tasks.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.RuntimeEnvironment.TimerScheduledTasks">
            <summary>
            Gets a dispatcher queue for scheduled tasks.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.RuntimeEnvironment.Tasks">
            <summary>
            Gets a dispatcher queue for general tasks that uses the CLR threadpool.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.RuntimeEnvironment.RuntimeAddress">
            <summary>
            Gets the Uri address of this runtime environment.
            </summary>
            <returns>The Uri address of this runtime environment.</returns>
        </member>
        <member name="P:Mercury.Messaging.Runtime.RuntimeEnvironment.EndPoint">
            <summary>
            Gets the IP end point for this runtime environment.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.RuntimeEnvironment.RoutingEngine">
            <summary>
            Gets the routing engine used by this runtime environment.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.RuntimeEnvironment.Encoding">
            <summary>
            Gets the default encoding used by the runtime environment.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Runtime.RuntimeEnvironment.LastKnownFault">
            <summary>
            Gets the last registered, known fault in this runtime.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Messages.ResponseExtensions">
            <summary>
            Core response extensions to the Mercury.Messaging.Messages.Request(Of T) interface.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseExtensions.Respond``2(Mercury.Messaging.Messages.Request{``0},``1)">
            <summary>
            Sends a response to a request.
            </summary>
            <typeparam name="TRequest">The type of the request.</typeparam>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="request">The request to respond to.</param>
            <param name="response">The message response to the request, 
            delivered as a Response(Of TRequest,TResponse).</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseExtensions.Respond``1(Mercury.Messaging.Messages.Request{``0},``0)">
            <summary>
            Sends a response to a request.
            </summary>
            <typeparam name="TResponse">The type of the response to send.</typeparam>
            <param name="request">The request to respond to.</param>
            <param name="response">The message response to the request.</param>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseExtensions.Create``1(Mercury.Messaging.Messages.Request{``0},``0)">
            <summary>
            Create a response message with the specified response.
            </summary>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="request">The request to respond to.</param>
            <param name="response">The response message.</param>
            <returns>A response message with the specified response.</returns>
        </member>
        <member name="M:Mercury.Messaging.Messages.ResponseExtensions.Create``2(Mercury.Messaging.Messages.Request{``0},``1)">
            <summary>
            Create a response message with the specified response.
            </summary>
            <typeparam name="TRequest">The type of the request for which to respond.</typeparam>
            <typeparam name="TResponse">The type of the response.</typeparam>
            <param name="request">The request to respond to.</param>
            <param name="response">The response message.</param>
            <returns>A response message with the specified response.</returns>
        </member>
        <member name="T:Mercury.Messaging.Instrumentation.LogSource">
            <summary>
            An object representing a log destination component.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Instrumentation.LogSource.#ctor(Mercury.Messaging.Instrumentation.TraceOutputSource,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Messaging.Instrumentation.LogSource"/> 
            class with the specified values.
            </summary>
            <param name="outputSource">The type of the destination source.</param>
            <param name="connection">The connection string for the log source.</param>
            <param name="args">An array of arguments to use with the connection string.</param>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.LogSource.OutputSource">
            <summary>
            Gets the type of the destination source.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.LogSource.Connection">
            <summary>
            Gets the connection string for the log source.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Instrumentation.LogSource.Args">
            <summary>
            Gets an array of arguments to use with the connection string.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.RTConstraintException">
            <summary>
            Thrown when a condition or constraint is violated on the runtime environment.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.RTConstraintException.#ctor">
            <summary>
            Initializes a default instance of the RTConstraintException class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.RTConstraintException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RTConstraintException 
            class with the specified message.
            </summary>
            <param name="message">The string to display when the exception is thrown.</param>
        </member>
        <member name="M:Mercury.Messaging.Core.RTConstraintException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the RTConstraintException 
            class with the specified message and inner exception.
            </summary>
            <param name="message">The string to display when the exception is thrown.</param>
            <param name="innerException">The exception instance that caused the current exception.</param>
        </member>
        <member name="M:Mercury.Messaging.Core.RTConstraintException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the RTConstraintException class with serialized data. 
            </summary>
            <param name="info">The Syste.Runtime.Serialization.SerializationInfo that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The Syste.Runtime.Serialization.StreamingContext that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Mercury.Messaging.ServiceModel.PacketFaultCode">
            <summary>
            Describes a fault on a packet.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.PacketFaultCode.InvalidMessageFormat">
            <summary>
            The received message was formatted incorrectly.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.PacketFaultCode.UnexpectedEndOfMessage">
            <summary>
            The received message did not contain the expected "end message" record.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.PacketFaultCode.ProcessError">
            <summary>
            An error occurred during processing of the received message.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.ServiceModel.PacketFaultCode.MessageSizeOverflow">
            <summary>
            Encountered a message that was too large to process.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Serialization.SerialException">
            <summary>
            An in-memory, serializable element representing an exception
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialException.#ctor">
            <summary>
            Initializes a default instance of the SerialException class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialException.#ctor(System.Type,System.String,System.String,Mercury.Messaging.Serialization.SerialException,System.String,System.String)">
            <summary>
            Initializes a default instance of the SerialException class with the specified values.
            </summary>
            <param name="originalType">The original exception type.</param>
            <param name="message">The error message explaining the cause of the exception.</param>
            <param name="stackTrace">The stack trace for the exception.</param>
            <param name="innerException">The [serialized] exception that caused this exception.</param>
            <param name="source">The source data string.</param>
            <param name="helpLink">Help link information.</param>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialException.Create(System.Exception)">
            <summary>
            Creates and returns a serial exception from the specified exception.
            </summary>
            <param name="exception">The exception from which to create a serial exception.</param>
            <returns>A serial exception created from the specified exception.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialException.Create(System.String)">
            <summary>
            Creates and returns a serial exception from the specified XML string.
            </summary>
            <param name="xml">The XML to parse into a serial exception.</param>
            <returns>A serial exception created from the specified XML string.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialException.Create(System.Xml.XmlReader)">
            <summary>
            Creates and returns a serial exception from the contents of the specified XML reader.
            </summary>
            <param name="reader">The XML reader containing the XML to parse into a serial exception.</param>
            <returns>A serial exception created from the contents of the specified XML reader.</returns>
        </member>
        <member name="F:Mercury.Messaging.Serialization.SerialException.SerialExceptionElement">
            <summary>
            SerialException static property name.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Serialization.SerialException.OriginalTypeElement">
            <summary>
            OriginalType static property name.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Serialization.SerialException.OriginalTypeNameElement">
            <summary>
            OriginalTypeName static property name.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Serialization.SerialException.MessageElement">
            <summary>
            Message static property name.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Serialization.SerialException.HelpLinkElement">
            <summary>
            HelpLink static property name.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Serialization.SerialException.SourceElement">
            <summary>
            Source static property name.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Serialization.SerialException.StackTraceElement">
            <summary>
            StackTrace static property name.
            </summary>
        </member>
        <member name="F:Mercury.Messaging.Serialization.SerialException.InnerExceptionElement">
            <summary>
            InnerException static property name.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialException.GetSchema">
            <summary>
            Returns the XML schema.
            </summary>
            <returns>Default value is null.</returns>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialException.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializes the response from the XML reader.
            </summary>
            <param name="reader">The XML reader from which to read.</param>
        </member>
        <member name="M:Mercury.Messaging.Serialization.SerialException.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Serializes the response to the XML writer.
            </summary>
            <param name="writer">The XML writer on which to write.</param>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialException.OriginalTypeName">
            <summary>
            Gets the full name of the original exception type.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialException.OriginalType">
            <summary>
            Gets the original exception type if it exists and can be loaded.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialException.Message">
            <summary>
            Gets a message for this exception.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialException.HelpLink">
            <summary>
            Gets a help link for this exception.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialException.Source">
            <summary>
            Gets the source of this exception.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialException.StackTrace">
            <summary>
            Gets the stack trace for this exception.
            </summary>
        </member>
        <member name="P:Mercury.Messaging.Serialization.SerialException.InnerException">
            <summary>
            Gets the inner exception element.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Runtime.Scheduler.ScheduledOperationList">
            <summary>
            A list of scheduled operations.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.ScheduledOperationList.#ctor">
            <summary>
            Initializes a default instance of the ScheduledOperationList class.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.ScheduledOperationList.GetExpiredOperations(System.DateTime)">
            <summary>
            Gets an array of operations that have elapsed according to the specified date and time.
            </summary>
            <param name="now">The date and time to compare.</param>
            <returns>An array of operations that have elapsed according to the specified date and time.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.ScheduledOperationList.GetNextScheduledTime(System.DateTime,System.DateTime@)">
            <summary>
            Gets the date and time of the next scheduled action.
            </summary>
            <param name="now">The current date and time.</param>
            <param name="scheduledAt">Out. The next scheduled date and time.</param>
            <returns>True if the next scheduled date and time was retrieved; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Messaging.Runtime.Scheduler.ScheduledOperationList.Add(Mercury.Messaging.Runtime.Scheduler.IScheduledOperationExecutor)">
            <summary>
            Adds an operation executor to the list.
            </summary>
            <param name="executor">The operation executor to add.</param>
        </member>
        <member name="P:Mercury.Messaging.Runtime.Scheduler.ScheduledOperationList.Count">
            <summary>
            Gets the number of operations in this list.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Messages.Stop">
            <summary>
            Message specifying an agent to stop processing the message queue and shutdown.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Core.HeadersExtensions">
            <summary>
            Core extensions to Mercury.Messaging.Core.IHeaders object.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Core.HeadersExtensions.GetUri(Mercury.Messaging.Core.IHeaders,System.String)">
            <summary>
            Gets the URI from the header item at the specified key.
            </summary>
            <param name="headers">The headers dictionary to use.</param>
            <param name="key">The key of the item to get.</param>
            <returns>The URI converted from the string format header item at the specified key.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.HeadersExtensions.SetUri(Mercury.Messaging.Core.IHeaders,System.String,System.Uri)">
            <summary>
            Sets the header item at the specified key to the string format of the specified URI.
            </summary>
            <param name="headers">The headers dictionary to use.</param>
            <param name="key">The key of the item to set.</param>
            <param name="value">The URI value.</param>
        </member>
        <member name="M:Mercury.Messaging.Core.HeadersExtensions.GetEndPoint(Mercury.Messaging.Core.IHeaders,System.String)">
            <summary>
            Gets the end point from the header item at the specified key.
            </summary>
            <param name="headers">The headers dictionary to use.</param>
            <param name="key">The key of the item to get.</param>
            <returns>The end point converted from the string format header item at the specified key.</returns>
        </member>
        <member name="M:Mercury.Messaging.Core.HeadersExtensions.SetEndPoint(Mercury.Messaging.Core.IHeaders,System.String,System.Net.IPEndPoint)">
            <summary>
            Sets the header item at the specified key to 
            the string format of the specified end point.
            </summary>
            <param name="headers">The headers dictionary to use.</param>
            <param name="key">The key of the item to set.</param>
            <param name="value">The end point value.</param>
        </member>
        <member name="T:Mercury.Messaging.Core.CoreMethodUtil">
            <summary>
            Represents a set of methods for dynamic method execution.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Channels.SynchronousChannel">
            <summary>
            Represents a channel over which messages may be sent synchronously.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.SynchronousChannel.#ctor(Mercury.Messaging.Runtime.InternalResource)">
            <summary>
            Initializes a default instance of the SynchronousChannel class with the specified resource.
            </summary>
            <param name="resource">The resource to reference.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.SynchronousChannel.Send``1(``0)">
            <summary>
            Sends a message to the referenced resource.
            </summary>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="message">The message to send.</param>
        </member>
        <member name="T:Mercury.Messaging.Channels.SynchronousChannel`1">
            <summary>
            Represents a channel over which messages may be sent synchronously.
            </summary>
            <typeparam name="T">The type of the message to send.</typeparam>
        </member>
        <member name="M:Mercury.Messaging.Channels.SynchronousChannel`1.#ctor(Mercury.Messaging.Runtime.InternalResource)">
            <summary>
            Initializes a default instance of the SynchronousChannel class with the specified resource.
            </summary>
            <param name="resource">The resource to reference.</param>
        </member>
        <member name="F:Mercury.Messaging.Channels.SynchronousChannel`1._resourceId">
            <summary>
            The ID of the referenced resource.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.SynchronousChannel`1.Send(`0)">
            <summary>
            Sends a message to the referenced resource.
            </summary>
            <param name="message">The message to send.</param>
        </member>
        <member name="P:Mercury.Messaging.Channels.SynchronousChannel`1.ResourceId">
            <summary>
            Gets the ID of the local resource to which messages on this channel are sent.
            </summary>
        </member>
        <member name="T:Mercury.Messaging.Channels.MultiCastChannel">
            <summary>
            A channel that can send a message to multiple resources.
            </summary>
        </member>
        <member name="M:Mercury.Messaging.Channels.MultiCastChannel.#ctor(System.Collections.Generic.IEnumerable{Mercury.Messaging.Core.LocalRef})">
            <summary>
            Initializes a new instance of the MultiCastChannel class with the specified resources.
            </summary>
            <param name="resources">The resource channels to reference.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.MultiCastChannel.Send``1(``0)">
            <summary>
            Sends a message to the resources on this channel.
            </summary>
            <typeparam name="T">The type of the message to send.</typeparam>
            <param name="message">The message to send.</param>
        </member>
        <member name="M:Mercury.Messaging.Channels.MultiCastChannel.Post(Mercury.Messaging.Routing.IRoutingContext)">
            <summary>
            Posts a routing context which is relayed to the designated receivers.
            </summary>
            <param name="context">The routing context to post.</param>
        </member>
    </members>
</doc>
