<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mercury.Logging</name>
    </assembly>
    <members>
        <member name="T:Mercury.Logging.LogFormatter">
            <summary>
            Enables formatting of log entry messages before output.
            </summary>
        </member>
        <member name="M:Mercury.Logging.LogFormatter.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.LogFormatter"/> class.
            </summary>
        </member>
        <member name="M:Mercury.Logging.LogFormatter.Format(Mercury.Logging.LogEntry)">
            <summary>
            Returns a formatted string that represents the specified log entry.
            </summary>
            <param name="entry">The log entry to format.</param>
            <returns>A formatted string that represents the specified log entry.</returns>
        </member>
        <member name="M:Mercury.Logging.LogFormatter.GetFormattedDateTime(System.DateTime)">
            <summary>
            Gets a formatted string representation of the specified date and time.
            </summary>
            <param name="dt">The date and time value to format.</param>
            <returns></returns>
        </member>
        <member name="M:Mercury.Logging.LogFormatter.GetFormattedOptions(Mercury.Logging.LogEntry,System.Text.StringBuilder)">
            <summary>
            Builds a formatted string representing additional log options for the specified entry.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogFormatter.Options">
            <summary>
            Gets or sets the log output options.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogFormatter.DateTimeFormat">
            <summary>
            Gets or sets the format according to a vaild DateTime format character or pattern.
            </summary>
        </member>
        <member name="T:Mercury.Logging.LogOptions">
            <summary>
            Specifies various data options that can be written to log output.
            </summary>
        </member>
        <member name="F:Mercury.Logging.LogOptions.None">
            <summary>
            Do not write any elements.
            </summary>
        </member>
        <member name="F:Mercury.Logging.LogOptions.DateTime">
            <summary>
            Write the date and time at which the log occurred as Coordinated Universal Time (UTC).
            </summary>
        </member>
        <member name="F:Mercury.Logging.LogOptions.Timestamp">
            <summary>
            Writes the timestamp, which is the return value of the Stopwatch.GetTimestamp method.
            </summary>
        </member>
        <member name="F:Mercury.Logging.LogOptions.ProcessId">
            <summary>
            Write the process identity, which is the return value of the ProcessId property.
            </summary>
        </member>
        <member name="F:Mercury.Logging.LogOptions.ThreadId">
            <summary>
            Write the thread identity, which is the return value of the Thread.ManagedThreadId property of the logging thread.
            </summary>
        </member>
        <member name="F:Mercury.Logging.LogOptions.Callstack">
            <summary>
            Write the call stack, which is represented by the return value of the Environment.StackTrace property.
            </summary>
        </member>
        <member name="T:Mercury.Logging.Loggers.ConsoleLogger">
            <summary>
            A logger that writes to the console.
            </summary>
        </member>
        <member name="T:Mercury.Logging.Logger">
            <summary>
            Represents an object through which messages may be logged.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Logger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Logger"/> class.
            </summary>
            <param name="name">The name of the logger.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.WithFilter(System.Object)">
            <summary>
            Returns a logger in a filter context for the specified data.
            </summary>
            <param name="filterData">The filter data to provide.</param>
            <returns>A logger in a filter context for the specified data.</returns>
        </member>
        <member name="M:Mercury.Logging.Logger.Debug(System.Func{System.String})">
            <summary>
            Writes the specified debug message.
            </summary>
            <param name="message">A function generating the message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Debug(System.Int32,System.Func{System.String})">
            <summary>
            Writes the specified debug message with the specified event identifier.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="message">A function generating the message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Debug(System.String)">
            <summary>
            Writes the specified debug message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Debug(System.Int32,System.String)">
            <summary>
            Writes the specified debug message with the specified event identifier.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Debug(System.String,System.Object[])">
            <summary>
            Writes the debug message using the specified argument array and format.
            </summary>
            <param name="format">The composite format string to write.</param>
            <param name="args">The argument array to format.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Debug(System.Int32,System.String,System.Object[])">
            <summary>
            Writes the debug message using the specified event identifier, argument array, and format.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="format">The composite format string to write.</param>
            <param name="args">The argument array to format.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Info(System.Func{System.String})">
            <summary>
            Writes the specified information message.
            </summary>
            <param name="message">A function generating the message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Info(System.Int32,System.Func{System.String})">
            <summary>
            Writes the specified information message with the specified event identifier.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="message">A function generating the message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Info(System.String)">
            <summary>
            Writes the specified information message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Info(System.Int32,System.String)">
            <summary>
            Writes the specified information message with the specified event identifier.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Info(System.String,System.Object[])">
            <summary>
            Writes the information message using the specified argument array and format.
            </summary>
            <param name="format">The composite format string to write.</param>
            <param name="args">The argument array to format.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Info(System.Int32,System.String,System.Object[])">
            <summary>
            Writes the information message using the specified event identifier, argument array, and format.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="format">The composite format string to write.</param>
            <param name="args">The argument array to format.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Warn(System.Func{System.String})">
            <summary>
            Writes the specified warning message.
            </summary>
            <param name="message">A function generating the message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Warn(System.Int32,System.Func{System.String})">
            <summary>
            Writes the specified warning message with the specified event identifier.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="message">A function generating the message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Warn(System.String)">
            <summary>
            Writes the specified warning message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Warn(System.Int32,System.String)">
            <summary>
            Writes the specified warning message with the specified event identifier.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Warn(System.String,System.Object[])">
            <summary>
            Writes the warning message using the specified argument array and format.
            </summary>
            <param name="format">The composite format string to write.</param>
            <param name="args">The argument array to format.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Warn(System.Int32,System.String,System.Object[])">
            <summary>
            Writes the warning message using the specified event identifier, argument array, and format.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="format">The composite format string to write.</param>
            <param name="args">The argument array to format.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Error(System.Func{System.String})">
            <summary>
            Writes the specified error message.
            </summary>
            <param name="message">A function generating the message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Error(System.Int32,System.Func{System.String})">
            <summary>
            Writes the specified error message with the specified event identifier.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="message">A function generating the message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Error(System.String)">
            <summary>
            Writes the specified error message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Error(System.Int32,System.String)">
            <summary>
            Writes the specified error message with the specified event identifier.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Error(System.String,System.Object[])">
            <summary>
            Writes the error message using the specified argument array and format.
            </summary>
            <param name="format">The composite format string to write.</param>
            <param name="args">The argument array to format.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Error(System.Int32,System.String,System.Object[])">
            <summary>
            Writes the error message using the specified event identifier, argument array, and format.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="format">The composite format string to write.</param>
            <param name="args">The argument array to format.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Critical(System.Func{System.String})">
            <summary>
            Writes the specified critical error message.
            </summary>
            <param name="message">A function generating the message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Critical(System.Int32,System.Func{System.String})">
            <summary>
            Writes the specified critical error message with the specified event identifier.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="message">A function generating the message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Critical(System.String)">
            <summary>
            Writes the specified critical error message.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Critical(System.Int32,System.String)">
            <summary>
            Writes the specified critical error message with the specified event identifier.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Critical(System.String,System.Object[])">
            <summary>
            Writes the critical error message using the specified argument array and format.
            </summary>
            <param name="format">The composite format string to write.</param>
            <param name="args">The argument array to format.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Critical(System.Int32,System.String,System.Object[])">
            <summary>
            Writes the critical error message using the specified event identifier, argument array, and format.
            </summary>
            <param name="eventId">The event identifier for this message.</param>
            <param name="format">The composite format string to write.</param>
            <param name="args">The argument array to format.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Log(Mercury.Logging.LogSeverity,System.String)">
            <summary>
            Logs the message with the specified severity level.
            </summary>
            <param name="severity">The severity level of the message to log.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Log(Mercury.Logging.LogSeverity,System.String,System.Object[])">
            <summary>
            Logs a message with the specified severity level, argument array, and format.
            </summary>
            <param name="severity">The severity level of the message to log.</param>
            <param name="format">The composite format string to write.</param>
            <param name="args">The argument array to format.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Log(Mercury.Logging.LogSeverity,System.Int32,System.String,System.Object[])">
            <summary>
            Logs a message with the specified severity level, event identifier, argument array, and format.
            </summary>
            <param name="severity">The severity level of the message to log.</param>
            <param name="eventId">The event identifier for this message.</param>
            <param name="format">The composite format string to write.</param>
            <param name="args">The argument array to format.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Log(Mercury.Logging.LogSeverity,System.Func{System.String})">
            <summary>
            Logs a message with the specified severity level.
            </summary>
            <param name="severity">The severity level of the message to log.</param>
            <param name="message">A function generating the message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Log(Mercury.Logging.LogSeverity,System.Int32,System.Func{System.String})">
            <summary>
            Logs a message with the specified severity level and event identifier.
            </summary>
            <param name="severity">The severity level of the message to log.</param>
            <param name="eventId">The event identifier for this message.</param>
            <param name="message">A function generating the message to write.</param>
        </member>
        <member name="M:Mercury.Logging.Logger.Flush">
            <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Logger.Write(System.String)">
            <summary>
            Writes the specified output directly to the log source.
            </summary>
            <param name="output">The output text to write.</param>
            <returns>True if the write operation succeeded; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Logger.WriteLine(System.String)">
            <summary>
            Writes the specified output and appends a newline character to the end of it.
            </summary>
            <param name="output">The output text to write.</param>
            <returns>True if the write operation succeeded; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Logger.DoLogEntry(Mercury.Logging.LogEntry)">
            <summary>
            Logs the specified log entry.
            </summary>
            <param name="entry">The log entry to log.</param>
            <returns>True if logging was successful; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Logger.WriteLog(System.String)">
            <summary>
            Logs the specified message string.
            </summary>
            <param name="message">The message string to log.</param>
            <returns>True if logging was successful; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Logger.AllowEntry(Mercury.Logging.LogEntry)">
            <summary>
            Determines whether the specified log entry can pass filtering.
            </summary>
            <param name="entry">The log entry to test.</param>
            <returns>True if the log entry passes filtering; otherwise, false.</returns>
        </member>
        <member name="P:Mercury.Logging.Logger.Name">
            <summary>
            Gets the name of this logger.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Logger.DefaultFilterType">
            <summary>
            Gets or sets the type of the default filter.  If null, no filters will be set.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Logger.Formatter">
            <summary>
            Gets or sets the formatter to use for this logger.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Logger.Filter">
            <summary>
            Gets or sets the filter for this logger.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Logger.SeverityThreshold">
            <summary>
            Gets or sets the lowest log severity that will be handled by this logger.  By 
            default this is set to Debug, which includes messages of all severity levels.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.ConsoleLogger.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.Loggers.ConsoleLogger"/> class.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.ConsoleLogger.Flush">
            <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.ConsoleLogger.WriteLog(System.String)">
            <summary>
            Logs the specified message string.
            </summary>
            <param name="message">The message string to log.</param>
            <returns>True if logging was successful; otherwise, false.</returns>
        </member>
        <member name="T:Mercury.Logging.DefaultLogFormatter">
            <summary>
            A basic formatter for log data.
            </summary>
        </member>
        <member name="M:Mercury.Logging.DefaultLogFormatter.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.DefaultLogFormatter"/> class.
            </summary>
        </member>
        <member name="M:Mercury.Logging.DefaultLogFormatter.Format(Mercury.Logging.LogEntry)">
            <summary>
            Returns a formatted string that represents the specified log entry.
            </summary>
            <param name="entry">The log entry to format.</param>
            <returns>A formatted string that represents the specified log entry.</returns>
        </member>
        <member name="M:Mercury.Logging.DefaultLogFormatter.GetFormattedText(Mercury.Logging.LogEntry)">
            <summary>
            Returns a string representing the specified log entry.  This string representation 
            does not include any additional options that may be enabled.
            </summary>
            <param name="entry">The log entry to format.</param>
            <returns>A string representing the specified log entry and not including additional logging options.</returns>
        </member>
        <member name="T:Mercury.Logging.PassFilter">
            <summary>
            A filter that allows everything through.
            </summary>
        </member>
        <member name="T:Mercury.Logging.LogFilter">
            <summary>
            Represents a filter on log entries.
            </summary>
        </member>
        <member name="M:Mercury.Logging.LogFilter.Allow(Mercury.Logging.LogEntry)">
            <summary>
            Returns a value indicating whether the specified log entry can pass the filter.
            </summary>
            <param name="entry">The log entry to test.</param>
            <returns>True if the specified log entry can pass the filter; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.PassFilter.Allow(Mercury.Logging.LogEntry)">
            <summary>
            Returns a value indicating whether the specified log entry can pass the filter.
            </summary>
            <param name="entry">The log entry to test.</param>
            <returns>True if the specified log entry can pass the filter; otherwise, false.</returns>
        </member>
        <member name="T:Mercury.Logging.CategoryFilter">
            <summary>
            Provides filtering support by specified categories.
            </summary>
        </member>
        <member name="M:Mercury.Logging.CategoryFilter.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.CategoryFilter"/> class.
            </summary>
            <param name="isInclude">A value indicating whether the categories 
            on this filter comprise an inclusive list.</param>
        </member>
        <member name="M:Mercury.Logging.CategoryFilter.AddCategory(System.String)">
            <summary>
            Adds the specified category to this filter.
            </summary>
            <param name="category">The category to add.</param>
        </member>
        <member name="M:Mercury.Logging.CategoryFilter.Clear">
            <summary>
            Removes all categories from this filter.
            </summary>
        </member>
        <member name="M:Mercury.Logging.CategoryFilter.RemoveCategory(System.String)">
            <summary>
            Removes the specified category from this filter.
            </summary>
            <param name="category">The category to remove.</param>
        </member>
        <member name="M:Mercury.Logging.CategoryFilter.Allow(Mercury.Logging.LogEntry)">
            <summary>
            Returns a value indicating whether the specified log entry can pass the filter.
            </summary>
            <param name="entry">The log entry to test.</param>
            <returns>True if the specified log entry can pass the filter; otherwise, false.</returns>
        </member>
        <member name="P:Mercury.Logging.CategoryFilter.IsInclude">
            <summary>
            Gets a value indicating whether the categories on this filter comprise an inclusive list.
            </summary>
            <returns>True if the categories on this filter comprise an inclusive list; otherwise, false.</returns>
        </member>
        <member name="T:Mercury.Logging.Loggers.PersistentLogger">
            <summary>
            Provides a redundancy mechanism for another logger, ensuring that logs 
            will be kept in-memory until they can be written to the log source.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.PersistentLogger.#ctor(Mercury.Logging.Logger,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.PersistentLogger"/> class with the specified values.
            </summary>
            <param name="logger">The logger on which to write.</param>
            <param name="bufferSize">The maximum number of log entries to maintain.</param>
            <param name="retryInterval">The number of seconds to wait before retrying an unsuccessful log.</param>
        </member>
        <member name="M:Mercury.Logging.Loggers.PersistentLogger.Flush">
            <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.PersistentLogger.WriteLog(System.String)">
            <summary>
            Logs the specified message string.
            </summary>
            <param name="message">The message string to log.</param>
            <returns>True if logging was successful; otherwise, false.</returns>
        </member>
        <member name="P:Mercury.Logging.Loggers.PersistentLogger.Logger">
            <summary>
            Gets the logger on which to write.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.PersistentLogger.RetryInterval">
            <summary>
            Gets the number of seconds to wait before retrying an unsuccessful log.
            </summary>
        </member>
        <member name="T:Mercury.Logging.Loggers.MemoryLogger">
            <summary>
            Represents an in-memory logger that overwrites its oldest values when the buffer size is exceeded.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.MemoryLogger.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.MemoryLogger"/> class with the specified buffer size.
            </summary>
            <param name="bufferSize">The maximum number of elements to log in-memory.</param>
        </member>
        <member name="M:Mercury.Logging.Loggers.MemoryLogger.CopyLog">
            <summary>
            Copies and returns all elements in the buffer as a new array.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.MemoryLogger.GetLogAsEnumerable">
            <summary>
            Returns the log as an enumerable sequence.
            </summary>
            <returns>The log as an enumerable sequence.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.MemoryLogger.GetConsumingEnumerable">
            <summary>
            Returns the log as an enumerable sequence while sequentially removing its values.
            </summary>
            <returns>The log as an enumerable sequence.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.MemoryLogger.Clear">
            <summary>
            Removes all elements from the log.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.MemoryLogger.Compact">
            <summary>
            Compacts any null spaces in the buffer and resets the write head.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.MemoryLogger.Remove(System.Int32,System.String@)">
            <summary>
            Attempts to remove the value at the specified index.
            </summary>
            <param name="atIndex">The index of the value to be removed.</param>
            <param name="value">Out. The value that was removed.</param>
            <returns>True if the value at the specified index was removed; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.MemoryLogger.Write(System.Int32,System.String)">
            <summary>
            Writes the specified output directly to the memory buffer at the specified index.
            </summary>
            <param name="index">The index at which to write in the memory buffer.</param>
            <param name="output">The output text to write.</param>
            <returns>True if the write operation was successful; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.MemoryLogger.Flush">
            <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.MemoryLogger.WriteLog(System.String)">
            <summary>
            Logs the specified message string.
            </summary>
            <param name="message">The message string to log.</param>
            <returns>True if logging was successful; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.MemoryLogger.WriteToBuffer(System.String)">
            <summary>
            Writes to the in-memory buffer.
            </summary>
            <param name="entry">The entry string to write.</param>
        </member>
        <member name="M:Mercury.Logging.Loggers.MemoryLogger.RemoveFromBuffer(System.Int32,System.String@)">
            <summary>
            Removes the value at the specified index from the buffer.
            </summary>
            <param name="atIndex">The index of the value to remove.</param>
            <param name="value">Out. The value that was removed.</param>
            <returns>True if the value at the specified index was removed; otherwise, false.</returns>
        </member>
        <member name="P:Mercury.Logging.Loggers.MemoryLogger.BufferSize">
            <summary>
            Gets the maximum number of elements that can be logged in-memory.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.MemoryLogger.Filled">
            <summary>
            Gets a value indicating whether the buffer has been filled.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.MemoryLogger.Head">
            <summary>
            Gets the index position of the write head.
            </summary>
        </member>
        <member name="T:Mercury.Logging.Loggers.FileLogger">
            <summary>
            Represents a logger that writes to a text file.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.FileLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.FileLogger"/> 
            class with the specified file path.
            </summary>
            <param name="filePath">The full system path to the log file.</param>
        </member>
        <member name="M:Mercury.Logging.Loggers.FileLogger.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.FileLogger"/> 
            class with the specified file path, encoding, and writer attributes.
            </summary>
            <param name="filePath">The full system path to the log file.</param>
            <param name="encoding">The text encoding used for this file.</param>
        </member>
        <member name="M:Mercury.Logging.Loggers.FileLogger.#ctor(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.FileLogger"/> 
            class with the specified file path, encoding, and writer attributes.
            </summary>
            <param name="filePath">The full system path to the log file.</param>
            <param name="encoding">The text encoding used for this file.</param>
            <param name="writeOnly">A value indicating whether this file logger is only enabled for writing.</param>
        </member>
        <member name="M:Mercury.Logging.Loggers.FileLogger.GetReader">
            <summary>
            Gets a <see cref="T:System.IO.StreamReader"/> that can read from the log file.  Attempting 
            to call this method in WriteOnly mode will throw an InvalidOperationException.
            </summary>
            <returns>A <see cref="T:System.IO.StreamReader"/> that can read from the log file.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.FileLogger.Flush">
            <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.FileLogger.EnsurePosition">
            <summary>
            Ensures that the position of the write head in the file stream matches the write position.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.FileLogger.WriteLog(System.String)">
            <summary>
            Logs the specified message string.
            </summary>
            <param name="message">The message string to log.</param>
            <returns>True if logging was successful; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.FileLogger.Dispose">
            <summary>
            Dispsoses of the resources associated with this logger.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.FileLogger.FilePath">
            <summary>
            Gets the full system path to the log file.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.FileLogger.Encoding">
            <summary>
            Gets the text encoding used for this file.  The default value is UTF16 (little-endian).
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.FileLogger.Threshold">
            <summary>
            Gets or sets the minimum number of append operations that can trigger a flush on the file stream.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.FileLogger.IsDisposed">
            <summary>
            Determines whether this file logger has been disposed.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.FileLogger.WriteOnly">
            <summary>
            Gets a value indicating whether this file logger is only enabled for writing.
            </summary>
            <returns>True if this file logger is only enabled for writing; otherwise, false.</returns>
        </member>
        <member name="P:Mercury.Logging.Loggers.FileLogger.WritePosition">
            <summary>
            Gets the current position of the write head in the log file stream.
            </summary>
        </member>
        <member name="T:Mercury.Logging.LogEntry">
            <summary>
            Represents a message entry to a log.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogEntry.LoggerName">
            <summary>
            Gets the name of the logger that created this entry.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogEntry.Severity">
            <summary>
            Gets the severity of this entry.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogEntry.EventId">
            <summary>
            Gets the event identifier of this entry.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogEntry.ThreadId">
            <summary>
            Gets the identifier of the thread on which this entry was logged.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogEntry.ProcessId">
            <summary>
            Gets the identifier of the process on which this entry was logged.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogEntry.LoggedDateTime">
            <summary>
            Gets the date and time at which this entry was logged.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogEntry.Timestamp">
            <summary>
            Gets the timestamp at which this entry was logged.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogEntry.Callstack">
            <summary>
            Gets the call stack at which this entry was logged.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogEntry.Message">
            <summary>
            Gets the message to log.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogEntry.FilterData">
            <summary>
            Gets the filter data to apply to this entry.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogEntry.RawMessage">
            <summary>
            Gets the unformatted, raw message string.
            </summary>
        </member>
        <member name="P:Mercury.Logging.LogEntry.Args">
            <summary>
            Gets any arguments that should be 
            </summary>
        </member>
        <member name="T:Mercury.Logging.Loggers.DurableLogger">
            <summary>
            Provides durable log entries by writing to an alternate logger that writes to the disk.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.DurableLogger.#ctor(Mercury.Logging.Logger,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.DurableLogger"/> 
            class with the specified primary logger and file path to use for the durable logger.
            </summary>
            <param name="primary">The primary logger.</param>
            <param name="durableLogPath">The full path to the file to use for the durable log.</param>
        </member>
        <member name="M:Mercury.Logging.Loggers.DurableLogger.#ctor(Mercury.Logging.Logger,System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.DurableLogger"/> 
            class with the specified primary logger and the durable log file path and encoding.
            </summary>
            <param name="primary">The primary logger.</param>
            <param name="durableLogPath">The full path to the file to use for the durable log.</param>
            <param name="encoding">The text encoding to use for the durable log file.</param>
        </member>
        <member name="M:Mercury.Logging.Loggers.DurableLogger.#ctor(Mercury.Logging.Logger,System.String,System.Text.Encoding,Mercury.Logging.Loggers.DurableLogger.DurabilityMode,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.DurableLogger"/> class with 
            the specified primary logger, alternate logger, durability mode, and batch threshold.
            </summary>
            <param name="primary">The primary logger.</param>
            <param name="durableLogPath">The full path to the file to use for the durable log.</param>
            <param name="encoding">The text encoding to use for the durable log file.</param>
            <param name="mode">The durability mode for this logger.</param>
            <param name="threshold">The minimum number of write operations that can trigger a flush to the primary logger.  
            This is only used when the durability mode is set to DurabilityMode.BatchThrough.</param>
        </member>
        <member name="M:Mercury.Logging.Loggers.DurableLogger.Flush">
            <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.DurableLogger.WriteLog(System.String)">
            <summary>
            Logs the specified message string.
            </summary>
            <param name="message">The message string to log.</param>
            <returns>True if logging was successful; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.DurableLogger.Dispose">
            <summary>
            Dispsoses of the resources associated with this logger.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.DurableLogger.Dispose(System.Boolean)">
            <summary>
            Dispsoses of the resources associated with this logger.
            </summary>
            <param name="disposing">True if called through the IDisposable.Dispose method; otherwise, false.</param>
        </member>
        <member name="P:Mercury.Logging.Loggers.DurableLogger.Primary">
            <summary>
            Gets the primary logger.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.DurableLogger.DurableLogPath">
            <summary>
            Gets the full path to the file used to provide a durable log.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.DurableLogger.DurableLogEncoding">
            <summary>
            Gets the text encoding used by the durable log file.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.DurableLogger.Mode">
            <summary>
            Gets the durability mode for this logger.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.DurableLogger.Threshold">
            <summary>
            Gets or sets the minimum number of write operations that can trigger a flush to the primary logger.  
            This is only used when the durability mode is set to DurabilityMode.BatchThrough.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.DurableLogger.Delimiter">
            <summary>
            Gets or sets the delimiter string used to separate log entries in the durable log file.
            </summary>
        </member>
        <member name="T:Mercury.Logging.Loggers.DurableLogger.DurabilityMode">
            <summary>
            Describes the durability setting used by a <see cref="T:Mercury.Logging.Loggers.DurableLogger"/>.
            </summary>
        </member>
        <member name="F:Mercury.Logging.Loggers.DurableLogger.DurabilityMode.WriteThrough">
            <summary>
            Writes to the durable disk log and then to the primary log.
            </summary>
        </member>
        <member name="F:Mercury.Logging.Loggers.DurableLogger.DurabilityMode.WriteDisk">
            <summary>
            Writes to durable disk storage.  Data can be flushed manually to the primary log.
            </summary>
        </member>
        <member name="F:Mercury.Logging.Loggers.DurableLogger.DurabilityMode.BatchThrough">
            <summary>
            Writes to the durable disk log up to a specified threshold, then flushes to the primary log.
            </summary>
        </member>
        <member name="T:Mercury.Logging.LogSeverity">
            <summary>
            Describes the severity of a logged message.
            </summary>
        </member>
        <member name="F:Mercury.Logging.LogSeverity.Debug">
            <summary>
            Debugging information.
            </summary>
        </member>
        <member name="F:Mercury.Logging.LogSeverity.Info">
            <summary>
            Informational messages, possibly unrelated to debug information.
            </summary>
        </member>
        <member name="F:Mercury.Logging.LogSeverity.Warning">
            <summary>
            An alert message that does not constitute an error.
            </summary>
        </member>
        <member name="F:Mercury.Logging.LogSeverity.Error">
            <summary>
            An error message.
            </summary>
        </member>
        <member name="F:Mercury.Logging.LogSeverity.Critical">
            <summary>
            Critical application error.
            </summary>
        </member>
        <member name="T:Mercury.Logging.FilterContext">
            <summary>
            Represents a context for filter data to be applied to a message.
            </summary>
        </member>
        <member name="M:Mercury.Logging.FilterContext.Flush">
            <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
        </member>
        <member name="M:Mercury.Logging.FilterContext.AllowEntry(Mercury.Logging.LogEntry)">
            <summary>
            Determines whether the specified log entry can pass filtering.
            </summary>
            <param name="entry">The log entry to test.</param>
            <returns>True if the log entry passes filtering; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.FilterContext.DoLogEntry(Mercury.Logging.LogEntry)">
            <summary>
            Logs the specified log entry.
            </summary>
            <param name="entry">The log entry to log.</param>
            <returns>True if logging was successful; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.FilterContext.WriteLog(System.String)">
            <summary>
            Logs the specified message string.
            </summary>
            <param name="message">The message string to log.</param>
            <returns>True if logging was successful; otherwise, false.</returns>
        </member>
        <member name="P:Mercury.Logging.FilterContext.FilterData">
            <summary>
            Gets the filter data for this context.
            </summary>
        </member>
        <member name="T:Mercury.Logging.Loggers.CompositeLogger">
            <summary>
            A logger that can log to a number of hosted loggers.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.#ctor">
            <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.Loggers.CompositeLogger"/> class.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.#ctor(Mercury.Logging.Loggers.CompositeLogger.NamedLog[])">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.CompositeLogger"/> 
            class with the specified loggers.
            </summary>
            <param name="loggers">An array of named log objects, associating a logger with a name.</param>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.Add(System.String,Mercury.Logging.Logger)">
            <summary>
            Adds the specified log name and logger to the composite collection.
            </summary>
            <param name="logName">The name associated with the specified logger.</param>
            <param name="logger">The logger to add.</param>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.Add(Mercury.Logging.Loggers.CompositeLogger.NamedLog)">
            <summary>
            Adds the specified named log to the composite collection.
            </summary>
            <param name="logger">A named log object to add.</param>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.Find(System.String)">
            <summary>
            Returns the first instance of a logger associated with the specified name.
            </summary>
            <param name="logName">The name of the logger to find.</param>
            <returns>The first instance of a logger associated with the specified name or null.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.FindAll(System.String)">
            <summary>
            Returns all loggers that are associated with the specified name.
            </summary>
            <param name="logName">The name of the loggers to find.</param>
            <returns>A list of all loggers that are associated with the specified name.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.Remove(System.String)">
            <summary>
            Removes the first instance of a logger associated with the specified name.
            </summary>
            <param name="logName">The name of the logger to remove.</param>
            <returns>True if the logger was found and removed; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.RemoveAll(System.String)">
            <summary>
            Removes all loggers associated with the specified name.
            </summary>
            <param name="logName">The name of the logger to remove.</param>
            <returns>True if any loggers were found and removed; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.Close">
            <summary>
            Releases any resources on hosted loggers by verifying if the logger implements IDisposable and calling Dispose.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.Flush">
            <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.DoLogEntry(Mercury.Logging.LogEntry)">
            <summary>
            Logs the specified log entry.
            </summary>
            <param name="entry">The log entry to log.</param>
            <returns>True if logging was successful; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.AllowEntry(Mercury.Logging.LogEntry)">
            <summary>
            Determines whether the specified log entry can pass filtering.
            </summary>
            <param name="entry">The log entry to test.</param>
            <returns>True if the log entry passes filtering; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.WriteLog(System.String)">
            <summary>
            Logs the specified message string.
            </summary>
            <param name="message">The message string to log.</param>
            <returns>True if logging was successful; otherwise, false.</returns>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.Dispose">
            <summary>
            Dispsoses of the resources associated with this logger.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.Dispose(System.Boolean)">
            <summary>
            Dispsoses of the resources associated with this logger.
            </summary>
            <param name="disposing">True if called through the IDisposable.Dispose method; otherwise, false.</param>
        </member>
        <member name="T:Mercury.Logging.Loggers.CompositeLogger.NamedLog">
            <summary>
            Represents a logger and its associated name.
            </summary>
        </member>
        <member name="M:Mercury.Logging.Loggers.CompositeLogger.NamedLog.#ctor(System.String,Mercury.Logging.Logger)">
            <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.CompositeLogger.NamedLog"/> class.
            </summary>
            <param name="logName">The name associated with the logger.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="P:Mercury.Logging.Loggers.CompositeLogger.NamedLog.LogName">
            <summary>
            Gets the associated log name.
            </summary>
        </member>
        <member name="P:Mercury.Logging.Loggers.CompositeLogger.NamedLog.Logger">
            <summary>
            Gets the logger.
            </summary>
        </member>
    </members>
</doc>
