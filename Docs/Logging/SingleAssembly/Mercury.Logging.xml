<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Mercury.Logging</name>
  </assembly>
  <members>
    <member name="T:Mercury.Logging.LogFormatter">
      <summary>
            Enables formatting of log entry messages before output.
            </summary>
    </member>
    <member name="M:Mercury.Logging.LogFormatter.#ctor">
      <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.LogFormatter" /> class.
            </summary>
    </member>
    <member name="M:Mercury.Logging.LogFormatter.Format(Mercury.Logging.LogEntry)">
      <summary>
            Returns a formatted string that represents the specified log entry.
            </summary>
      <param name="entry">The log entry to format.</param>
      <returns>A formatted string that represents the specified log entry.</returns>
    </member>
    <member name="M:Mercury.Logging.LogFormatter.GetFormattedDateTime(System.DateTime)">
      <summary>
            Gets a formatted string representation of the specified date and time.
            </summary>
      <param name="dt">The date and time value to format.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Mercury.Logging.LogFormatter.GetFormattedOptions(Mercury.Logging.LogEntry,System.Text.StringBuilder)">
      <summary>
            Builds a formatted string representing additional log options for the specified entry.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogFormatter.Options">
      <summary>
            Gets or sets the log output options.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogFormatter.DateTimeFormat">
      <summary>
            Gets or sets the format according to a vaild DateTime format character or pattern.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Logger">
      <summary>
            Represents an object through which messages may be logged.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Logger.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Logger" /> class.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Logger.WithFilter(System.Object)">
      <summary>
            Returns a logger in a filter context for the specified data.
            </summary>
      <param name="filterData">The filter data to provide.</param>
      <returns>A logger in a filter context for the specified data.</returns>
    </member>
    <member name="M:Mercury.Logging.Logger.Debug(System.Func{System.String})">
      <summary>
            Writes the specified debug message.
            </summary>
      <param name="message">A function generating the message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Debug(System.Int32,System.Func{System.String})">
      <summary>
            Writes the specified debug message with the specified event identifier.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="message">A function generating the message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Debug(System.String)">
      <summary>
            Writes the specified debug message.
            </summary>
      <param name="message">The message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Debug(System.Int32,System.String)">
      <summary>
            Writes the specified debug message with the specified event identifier.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="message">The message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Debug(System.String,System.Object[])">
      <summary>
            Writes the debug message using the specified argument array and format.
            </summary>
      <param name="format">The composite format string to write.</param>
      <param name="args">The argument array to format.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Debug(System.Int32,System.String,System.Object[])">
      <summary>
            Writes the debug message using the specified event identifier, argument array, and format.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="format">The composite format string to write.</param>
      <param name="args">The argument array to format.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Info(System.Func{System.String})">
      <summary>
            Writes the specified information message.
            </summary>
      <param name="message">A function generating the message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Info(System.Int32,System.Func{System.String})">
      <summary>
            Writes the specified information message with the specified event identifier.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="message">A function generating the message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Info(System.String)">
      <summary>
            Writes the specified information message.
            </summary>
      <param name="message">The message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Info(System.Int32,System.String)">
      <summary>
            Writes the specified information message with the specified event identifier.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="message">The message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Info(System.String,System.Object[])">
      <summary>
            Writes the information message using the specified argument array and format.
            </summary>
      <param name="format">The composite format string to write.</param>
      <param name="args">The argument array to format.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Info(System.Int32,System.String,System.Object[])">
      <summary>
            Writes the information message using the specified event identifier, argument array, and format.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="format">The composite format string to write.</param>
      <param name="args">The argument array to format.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Warn(System.Func{System.String})">
      <summary>
            Writes the specified warning message.
            </summary>
      <param name="message">A function generating the message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Warn(System.Int32,System.Func{System.String})">
      <summary>
            Writes the specified warning message with the specified event identifier.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="message">A function generating the message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Warn(System.String)">
      <summary>
            Writes the specified warning message.
            </summary>
      <param name="message">The message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Warn(System.Int32,System.String)">
      <summary>
            Writes the specified warning message with the specified event identifier.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="message">The message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Warn(System.String,System.Object[])">
      <summary>
            Writes the warning message using the specified argument array and format.
            </summary>
      <param name="format">The composite format string to write.</param>
      <param name="args">The argument array to format.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Warn(System.Int32,System.String,System.Object[])">
      <summary>
            Writes the warning message using the specified event identifier, argument array, and format.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="format">The composite format string to write.</param>
      <param name="args">The argument array to format.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Error(System.Func{System.String})">
      <summary>
            Writes the specified error message.
            </summary>
      <param name="message">A function generating the message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Error(System.Int32,System.Func{System.String})">
      <summary>
            Writes the specified error message with the specified event identifier.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="message">A function generating the message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Error(System.String)">
      <summary>
            Writes the specified error message.
            </summary>
      <param name="message">The message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Error(System.Int32,System.String)">
      <summary>
            Writes the specified error message with the specified event identifier.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="message">The message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Error(System.String,System.Object[])">
      <summary>
            Writes the error message using the specified argument array and format.
            </summary>
      <param name="format">The composite format string to write.</param>
      <param name="args">The argument array to format.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Error(System.Int32,System.String,System.Object[])">
      <summary>
            Writes the error message using the specified event identifier, argument array, and format.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="format">The composite format string to write.</param>
      <param name="args">The argument array to format.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Critical(System.Func{System.String})">
      <summary>
            Writes the specified critical error message.
            </summary>
      <param name="message">A function generating the message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Critical(System.Int32,System.Func{System.String})">
      <summary>
            Writes the specified critical error message with the specified event identifier.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="message">A function generating the message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Critical(System.String)">
      <summary>
            Writes the specified critical error message.
            </summary>
      <param name="message">The message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Critical(System.Int32,System.String)">
      <summary>
            Writes the specified critical error message with the specified event identifier.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="message">The message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Critical(System.String,System.Object[])">
      <summary>
            Writes the critical error message using the specified argument array and format.
            </summary>
      <param name="format">The composite format string to write.</param>
      <param name="args">The argument array to format.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Critical(System.Int32,System.String,System.Object[])">
      <summary>
            Writes the critical error message using the specified event identifier, argument array, and format.
            </summary>
      <param name="eventId">The event identifier for this message.</param>
      <param name="format">The composite format string to write.</param>
      <param name="args">The argument array to format.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Log(Mercury.Logging.LogSeverity,System.String)">
      <summary>
            Logs the message with the specified severity level.
            </summary>
      <param name="severity">The severity level of the message to log.</param>
      <param name="message">The message to log.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Log(Mercury.Logging.LogSeverity,System.String,System.Object[])">
      <summary>
            Logs a message with the specified severity level, argument array, and format.
            </summary>
      <param name="severity">The severity level of the message to log.</param>
      <param name="format">The composite format string to write.</param>
      <param name="args">The argument array to format.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Log(Mercury.Logging.LogSeverity,System.Int32,System.String,System.Object[])">
      <summary>
            Logs a message with the specified severity level, event identifier, argument array, and format.
            </summary>
      <param name="severity">The severity level of the message to log.</param>
      <param name="eventId">The event identifier for this message.</param>
      <param name="format">The composite format string to write.</param>
      <param name="args">The argument array to format.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Log(Mercury.Logging.LogSeverity,System.Func{System.String})">
      <summary>
            Logs a message with the specified severity level.
            </summary>
      <param name="severity">The severity level of the message to log.</param>
      <param name="message">A function generating the message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Log(Mercury.Logging.LogSeverity,System.Int32,System.Func{System.String})">
      <summary>
            Logs a message with the specified severity level and event identifier.
            </summary>
      <param name="severity">The severity level of the message to log.</param>
      <param name="eventId">The event identifier for this message.</param>
      <param name="message">A function generating the message to write.</param>
    </member>
    <member name="M:Mercury.Logging.Logger.Log(Mercury.Logging.LogEntry)">
      <summary>
            Logs the specified <see cref="T:Mercury.Logging.LogEntry" />.
            </summary>
      <param name="entry">The entry to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Logger.Flush">
      <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Logger.Write(System.String)">
      <summary>
            Writes the specified output directly to the log source.
            </summary>
      <param name="output">The output text to write.</param>
      <returns>True if the write operation succeeded; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Logger.WriteLine(System.String)">
      <summary>
            Writes the specified output and appends a newline character to the end of it.
            </summary>
      <param name="output">The output text to write.</param>
      <returns>True if the write operation succeeded; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Logger.DoLogEntry(Mercury.Logging.LogEntry)">
      <summary>
            Logs the specified log entry.
            </summary>
      <param name="entry">The log entry to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Logger.WriteLog(System.String)">
      <summary>
            Logs the specified message string.
            </summary>
      <param name="message">The message string to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Logger.AllowEntry(Mercury.Logging.LogEntry)">
      <summary>
            Determines whether the specified log entry can pass filtering.
            </summary>
      <param name="entry">The log entry to test.</param>
      <returns>True if the log entry passes filtering; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Logger.GetEntry(System.String,Mercury.Logging.LogOptions,Mercury.Logging.LogSeverity,System.Int32,System.Func{System.String},System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>
            Gets a log entry containing the specified values.
            </summary>
      <param name="loggerName">The name of the logger that created this entry.</param>
      <param name="options">The log output options.</param>
      <param name="severity">The severity of this entry.</param>
      <param name="eventId">The event identifier of this entry.</param>
      <param name="messageFunction">A function generating the message to write.</param>
      <param name="rawMessage">The unformatted, raw message string.</param>
      <param name="args">The argument array used to format the raw message.</param>
      <param name="formatMessageArguments">A value indicating whether to format the message string with any provided arguments.</param>
      <param name="writeDirect">A value indicating whether this entry should bypass log formatting and write directly to the output.</param>
      <returns>A log entry containing the specified values.</returns>
    </member>
    <member name="M:Mercury.Logging.Logger.ConstructEntry(System.String,Mercury.Logging.LogSeverity,System.Int32,System.DateTime,System.Int64,System.String,System.Func{System.String},System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>
            Gets a <see cref="T:Mercury.Logging.LogEntry" /> constructed from the specified values.
            </summary>
      <param name="loggerName">The name of the logger that created this entry.</param>
      <param name="severity">The severity of this entry.</param>
      <param name="eventId">The event identifier of this entry.</param>
      <param name="loggedDateTime">The date and time at which this entry was logged.</param>
      <param name="timestamp">The timestamp at which this entry was logged.</param>
      <param name="callStack">A snapshot of the call stack at the point in which this entry was logged.</param>
      <param name="messageFunction">A function generating the message to write.</param>
      <param name="rawMessage">The unformatted, raw message string.</param>
      <param name="args">The argument array used to format the raw message.</param>
      <param name="formatMessageArguments">A value indicating whether to format the message string with any provided arguments.</param>
      <param name="writeDirect">A value indicating whether this entry should bypass log formatting and write directly to the output.</param>
      <returns>A <see cref="T:Mercury.Logging.LogEntry" /> constructed from the specified values.</returns>
    </member>
    <member name="P:Mercury.Logging.Logger.Name">
      <summary>
            Gets or sets the name of this logger.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Logger.FormatMessageArguments">
      <summary>
            Gets a value indicating whether to message strings will be formatted when arguments are provided.  The default value is true.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Logger.DefaultFilterType">
      <summary>
            Gets or sets the type of the default filter.  If null, no filters will be set.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Logger.Formatter">
      <summary>
            Gets or sets the formatter to use for this logger.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Logger.Filter">
      <summary>
            Gets or sets the filter for this logger.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Logger.SeverityThreshold">
      <summary>
            Gets or sets the lowest log severity that will be handled by this logger.  By 
            default this is set to Debug, which includes messages of all severity levels.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.IInitializable">
      <summary>
            Provides a method that can be used to initialize the framework object.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.IInitializable.Initialize">
      <summary>
            Initializes the framework object.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Loggers.PersistentLogger">
      <summary>
            Provides a redundancy mechanism for another logger, ensuring that logs 
            will be kept in-memory until they can be written to the log source.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.PersistentLogger.#ctor">
      <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.Loggers.PersistentLogger" /> class.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.PersistentLogger.#ctor(Mercury.Logging.Logger,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.PersistentLogger" /> class with the specified values.
            </summary>
      <param name="logger">The logger on which to write.</param>
      <param name="bufferSize">The maximum number of log entries to maintain.</param>
      <param name="retryInterval">The number of seconds to wait before retrying an unsuccessful log.</param>
    </member>
    <member name="M:Mercury.Logging.Loggers.PersistentLogger.Flush">
      <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.PersistentLogger.WriteLog(System.String)">
      <summary>
            Logs the specified message string.
            </summary>
      <param name="message">The message string to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="P:Mercury.Logging.Loggers.PersistentLogger.Logger">
      <summary>
            Gets the logger on which to write.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Loggers.PersistentLogger.BufferSize">
      <summary>
            Gets or sets maximum number of log entries to maintain.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Loggers.PersistentLogger.RetryInterval">
      <summary>
            Gets the number of seconds to wait before retrying an unsuccessful log.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.IAddChild">
      <summary>
            Provides a common interface to add a child object to a logging framework object.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.IAddChild.AddChild(System.Object)">
      <summary>
            Adds the specified child object to the framework object.
            </summary>
      <param name="child">The child object to add.</param>
    </member>
    <member name="T:Mercury.Logging.Loggers.CompositeLogger">
      <summary>
            A logger that can log to a number of hosted loggers.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.#ctor">
      <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.Loggers.CompositeLogger" /> class.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.#ctor(Mercury.Logging.Logger[])">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.CompositeLogger" /> 
            class with the specified loggers.
            </summary>
      <param name="loggers">An array of named log objects.</param>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.Add(System.String,Mercury.Logging.Logger)">
      <summary>
            Adds the specified log name and logger to the composite collection.
            </summary>
      <param name="logName">The name associated with the specified logger.</param>
      <param name="logger">The logger to add.</param>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.Add(Mercury.Logging.Logger)">
      <summary>
            Adds the specified named log to the composite collection.
            </summary>
      <param name="logger">A named log object to add.</param>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.Find(System.String)">
      <summary>
            Returns the first instance of a logger associated with the specified name.
            </summary>
      <param name="logName">The name of the logger to find.</param>
      <returns>The first instance of a logger associated with the specified name or null.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.FindAll(System.String)">
      <summary>
            Returns all loggers that are associated with the specified name.
            </summary>
      <param name="logName">The name of the loggers to find.</param>
      <returns>A list of all loggers that are associated with the specified name.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.GetAll">
      <summary>
            Gets a list of all <see cref="T:Mercury.Logging.Logger" /> objects attached to this instance.
            </summary>
      <returns>A list of all <see cref="T:Mercury.Logging.Logger" /> objects attached to this instance.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.Remove(System.String)">
      <summary>
            Removes the first instance of a logger associated with the specified name.
            </summary>
      <param name="logName">The name of the logger to remove.</param>
      <returns>True if the logger was found and removed; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.RemoveAll(System.String)">
      <summary>
            Removes all loggers associated with the specified name.
            </summary>
      <param name="logName">The name of the logger to remove.</param>
      <returns>True if any loggers were found and removed; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.Close">
      <summary>
            Releases any resources on hosted loggers by verifying if the logger implements IDisposable and calling Dispose.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.Flush">
      <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.DoLogEntry(Mercury.Logging.LogEntry)">
      <summary>
            Logs the specified log entry.
            </summary>
      <param name="entry">The log entry to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.AllowEntry(Mercury.Logging.LogEntry)">
      <summary>
            Determines whether the specified log entry can pass filtering.
            </summary>
      <param name="entry">The log entry to test.</param>
      <returns>True if the log entry passes filtering; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.WriteLog(System.String)">
      <summary>
            Logs the specified message string.
            </summary>
      <param name="message">The message string to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.Dispose">
      <summary>
            Dispsoses of the resources associated with this logger.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.CompositeLogger.Dispose(System.Boolean)">
      <summary>
            Dispsoses of the resources associated with this logger.
            </summary>
      <param name="disposing">True if called through the IDisposable.Dispose method; otherwise, false.</param>
    </member>
    <member name="T:Mercury.Logging.Loggers.DurableLogger">
      <summary>
            Provides durable log entries by writing to an alternate logger that writes to the disk.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Loggers.DurableLogger.DurabilityMode">
      <summary>
            Describes the durability setting used by a <see cref="T:Mercury.Logging.Loggers.DurableLogger" />.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.DurableLogger.#ctor">
      <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.Loggers.DurableLogger" /> class.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.DurableLogger.#ctor(Mercury.Logging.Logger,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.DurableLogger" /> 
            class with the specified primary logger and file path to use for the durable logger.
            </summary>
      <param name="primary">The primary logger.</param>
      <param name="durableLogPath">The full path to the file to use for the durable log.</param>
    </member>
    <member name="M:Mercury.Logging.Loggers.DurableLogger.#ctor(Mercury.Logging.Logger,System.String,Mercury.Logging.Loggers.DurableLogger.DurabilityMode)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.DurableLogger" /> 
            class with the specified primary logger, alternate logger and durability mode.
            </summary>
      <param name="primary">The primary logger.</param>
      <param name="durableLogPath">The full path to the file to use for the durable log.</param>
      <param name="mode">The durability mode for this logger.</param>
    </member>
    <member name="M:Mercury.Logging.Loggers.DurableLogger.#ctor(Mercury.Logging.Logger,System.String,Mercury.Logging.Loggers.DurableLogger.DurabilityMode,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.DurableLogger" /> class with 
            the specified primary logger, alternate logger, durability mode, and batch threshold.
            </summary>
      <param name="primary">The primary logger.</param>
      <param name="durableLogPath">The full path to the file to use for the durable log.</param>
      <param name="mode">The durability mode for this logger.</param>
      <param name="threshold">The minimum number of write operations that can trigger a flush to the primary logger.  
            This is only used when the durability mode is set to DurabilityMode.BatchThrough.</param>
    </member>
    <member name="M:Mercury.Logging.Loggers.DurableLogger.Flush">
      <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.DurableLogger.DoLogEntry(Mercury.Logging.LogEntry)">
      <summary>
            Logs the specified <see cref="T:Mercury.Logging.LogEntry" />.
            </summary>
      <param name="entry">The entry to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.DurableLogger.WriteLog(System.String)">
      <summary>
            Logs the specified message string.
            </summary>
      <param name="message">The message string to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.DurableLogger.WriteLogEntry(Mercury.Logging.LogEntry)">
      <summary>
            Writes the log entry to the primary and durable loggers as configured.
            </summary>
      <param name="entry">The <see cref="T:Mercury.Logging.LogEntry" /> to write.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.DurableLogger.Dispose">
      <summary>
            Dispsoses of the resources associated with this logger.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.DurableLogger.Dispose(System.Boolean)">
      <summary>
            Dispsoses of the resources associated with this logger.
            </summary>
      <param name="disposing">True if called through the IDisposable.Dispose method; otherwise, false.</param>
    </member>
    <member name="P:Mercury.Logging.Loggers.DurableLogger.Primary">
      <summary>
            Gets the primary logger.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Loggers.DurableLogger.DurableLogPath">
      <summary>
            Gets the full path to the file used to provide a durable log.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Loggers.DurableLogger.Mode">
      <summary>
            Gets the durability mode for this logger.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Loggers.DurableLogger.Threshold">
      <summary>
            Gets or sets the minimum number of write operations that can trigger a flush to the primary logger.  
            This is only used when the durability mode is set to DurabilityMode.BatchThrough.
            </summary>
    </member>
    <member name="T:Mercury.Logging.FilterContext">
      <summary>
            Represents a context for filter data to be applied to a message.
            </summary>
    </member>
    <member name="M:Mercury.Logging.FilterContext.Flush">
      <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
    </member>
    <member name="M:Mercury.Logging.FilterContext.AllowEntry(Mercury.Logging.LogEntry)">
      <summary>
            Determines whether the specified log entry can pass filtering.
            </summary>
      <param name="entry">The log entry to test.</param>
      <returns>True if the log entry passes filtering; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.FilterContext.DoLogEntry(Mercury.Logging.LogEntry)">
      <summary>
            Logs the specified log entry.
            </summary>
      <param name="entry">The log entry to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.FilterContext.WriteLog(System.String)">
      <summary>
            Logs the specified message string.
            </summary>
      <param name="message">The message string to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="P:Mercury.Logging.FilterContext.FilterData">
      <summary>
            Gets the filter data for this context.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Loggers.FileLogger">
      <summary>
            Represents a logger that writes to a text file.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.FileLogger.#ctor">
      <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.Loggers.FileLogger" /> class.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.FileLogger.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.FileLogger" /> 
            class with the specified file path.
            </summary>
      <param name="filePath">The full system path to the log file.</param>
    </member>
    <member name="M:Mercury.Logging.Loggers.FileLogger.#ctor(System.String,System.Text.Encoding)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.FileLogger" /> 
            class with the specified file path, encoding, and writer attributes.
            </summary>
      <param name="filePath">The full system path to the log file.</param>
      <param name="encoding">The text encoding used for this file.</param>
    </member>
    <member name="M:Mercury.Logging.Loggers.FileLogger.#ctor(System.String,System.Text.Encoding,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.FileLogger" /> 
            class with the specified file path, encoding, and writer attributes.
            </summary>
      <param name="filePath">The full system path to the log file.</param>
      <param name="encoding">The text encoding used for this file.</param>
      <param name="writeOnly">A value indicating whether this file logger is only enabled for writing.</param>
    </member>
    <member name="M:Mercury.Logging.Loggers.FileLogger.CloseStream">
      <summary>
            Closes the underlying file stream.  Subsequent logging calls will attempt to get 
            a new stream by calling the GetFileStream method.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.FileLogger.GetReader">
      <summary>
            Gets a <see cref="T:System.IO.StreamReader" /> that can read from the log file.  Attempting 
            to call this method in WriteOnly mode will throw an InvalidOperationException.
            </summary>
      <returns>A <see cref="T:System.IO.StreamReader" /> that can read from the log file.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.FileLogger.Flush">
      <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.FileLogger.EnsurePosition">
      <summary>
            Ensures that the position of the write head in the file stream matches the write position.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.FileLogger.GetFileStream(System.String,System.Boolean,System.Int32)">
      <summary>
            Gets the file stream used to write to the log file.
            </summary>
      <param name="logFilePath">The full system path to the log file.</param>
      <param name="isWriteOnly">A value indicating whether this file logger is only enabled for writing.</param>
      <param name="defaultBufferSize">The default buffer size used by the logger.</param>
      <returns>The file stream used to write to the log file.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.FileLogger.WriteLog(System.String)">
      <summary>
            Logs the specified message string.
            </summary>
      <param name="message">The message string to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.FileLogger.Dispose">
      <summary>
            Dispsoses of the resources associated with this logger.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Loggers.FileLogger.FilePath">
      <summary>
            Gets or sets the full system path to the log file.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Loggers.FileLogger.Encoding">
      <summary>
            Gets or sets the text encoding used for this file.  The default value is UTF16 (little-endian).
            </summary>
    </member>
    <member name="P:Mercury.Logging.Loggers.FileLogger.Threshold">
      <summary>
            Gets or sets the minimum number of append operations that can trigger a flush on the file stream.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Loggers.FileLogger.IsDisposed">
      <summary>
            Determines whether this file logger has been disposed.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Loggers.FileLogger.WriteOnly">
      <summary>
            Gets or sets a value indicating whether this file logger is only enabled for writing.
            </summary>
      <returns>True if this file logger is only enabled for writing; otherwise, false.</returns>
    </member>
    <member name="P:Mercury.Logging.Loggers.FileLogger.WritePosition">
      <summary>
            Gets the current position of the write head in the log file stream.
            </summary>
    </member>
    <member name="T:Mercury.Logging.LogSeverity">
      <summary>
            Describes the severity of a logged message.
            </summary>
    </member>
    <member name="F:Mercury.Logging.LogSeverity.Debug">
      <summary>
            Debugging information.
            </summary>
    </member>
    <member name="F:Mercury.Logging.LogSeverity.Info">
      <summary>
            Informational messages, possibly unrelated to debug information.
            </summary>
    </member>
    <member name="F:Mercury.Logging.LogSeverity.Warning">
      <summary>
            An alert message that does not constitute an error.
            </summary>
    </member>
    <member name="F:Mercury.Logging.LogSeverity.Error">
      <summary>
            An error message.
            </summary>
    </member>
    <member name="F:Mercury.Logging.LogSeverity.Critical">
      <summary>
            Critical application error.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Loggers.ConsoleLogger">
      <summary>
            A logger that writes to the console.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.ConsoleLogger.#ctor">
      <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.Loggers.ConsoleLogger" /> class.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.ConsoleLogger.Flush">
      <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.ConsoleLogger.WriteLog(System.String)">
      <summary>
            Logs the specified message string.
            </summary>
      <param name="message">The message string to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="T:Mercury.Logging.LogOptions">
      <summary>
            Specifies various data options that can be written to log output.
            </summary>
    </member>
    <member name="F:Mercury.Logging.LogOptions.None">
      <summary>
            Do not write any elements.
            </summary>
    </member>
    <member name="F:Mercury.Logging.LogOptions.DateTime">
      <summary>
            Write the date and time at which the log occurred as Coordinated Universal Time (UTC).
            </summary>
    </member>
    <member name="F:Mercury.Logging.LogOptions.Timestamp">
      <summary>
            Writes the timestamp, which is the return value of the Stopwatch.GetTimestamp method.
            </summary>
    </member>
    <member name="F:Mercury.Logging.LogOptions.ProcessId">
      <summary>
            Write the process identity, which is the return value of the ProcessId property.
            </summary>
    </member>
    <member name="F:Mercury.Logging.LogOptions.ThreadId">
      <summary>
            Write the thread identity, which is the return value of the Thread.ManagedThreadId property of the logging thread.
            </summary>
    </member>
    <member name="F:Mercury.Logging.LogOptions.Callstack">
      <summary>
            Write the call stack, which is represented by the return value of the Environment.StackTrace property.
            </summary>
    </member>
    <member name="T:Mercury.Logging.LogFilter">
      <summary>
            Represents a filter on log entries.
            </summary>
    </member>
    <member name="M:Mercury.Logging.LogFilter.Allow(Mercury.Logging.LogEntry)">
      <summary>
            Returns a value indicating whether the specified log entry can pass the filter.
            </summary>
      <param name="entry">The log entry to test.</param>
      <returns>True if the specified log entry can pass the filter; otherwise, false.</returns>
    </member>
    <member name="T:Mercury.Logging.CategoryFilter">
      <summary>
            Provides filtering support by specified categories.
            </summary>
    </member>
    <member name="M:Mercury.Logging.CategoryFilter.#ctor">
      <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.CategoryFilter" /> class.
            </summary>
    </member>
    <member name="M:Mercury.Logging.CategoryFilter.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.CategoryFilter" /> class.
            </summary>
      <param name="isInclude">A value indicating whether the categories 
            on this filter comprise an inclusive list.</param>
    </member>
    <member name="M:Mercury.Logging.CategoryFilter.AddCategory(System.String)">
      <summary>
            Adds the specified category to this filter.
            </summary>
      <param name="category">The category to add.</param>
    </member>
    <member name="M:Mercury.Logging.CategoryFilter.Clear">
      <summary>
            Removes all categories from this filter.
            </summary>
    </member>
    <member name="M:Mercury.Logging.CategoryFilter.RemoveCategory(System.String)">
      <summary>
            Removes the specified category from this filter.
            </summary>
      <param name="category">The category to remove.</param>
    </member>
    <member name="M:Mercury.Logging.CategoryFilter.Allow(Mercury.Logging.LogEntry)">
      <summary>
            Returns a value indicating whether the specified log entry can pass the filter.
            </summary>
      <param name="entry">The log entry to test.</param>
      <returns>True if the specified log entry can pass the filter; otherwise, false.</returns>
    </member>
    <member name="P:Mercury.Logging.CategoryFilter.IsInclusive">
      <summary>
            Gets a value indicating whether the categories on this filter comprise an inclusive list.
            </summary>
      <returns>True if the categories on this filter comprise an inclusive list; otherwise, false.</returns>
    </member>
    <member name="T:Mercury.Logging.DefaultLogFormatter">
      <summary>
            A basic formatter for log data.
            </summary>
    </member>
    <member name="M:Mercury.Logging.DefaultLogFormatter.#ctor">
      <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.DefaultLogFormatter" /> class.
            </summary>
    </member>
    <member name="M:Mercury.Logging.DefaultLogFormatter.Format(Mercury.Logging.LogEntry)">
      <summary>
            Returns a formatted string that represents the specified log entry.
            </summary>
      <param name="entry">The log entry to format.</param>
      <returns>A formatted string that represents the specified log entry.</returns>
    </member>
    <member name="M:Mercury.Logging.DefaultLogFormatter.GetFormattedText(Mercury.Logging.LogEntry)">
      <summary>
            Returns a string representing the specified log entry.  This string representation 
            does not include any additional options that may be enabled.
            </summary>
      <param name="entry">The log entry to format.</param>
      <returns>A string representing the specified log entry and not including additional logging options.</returns>
    </member>
    <member name="T:Mercury.Logging.PassFilter">
      <summary>
            A filter that allows or rejects everything.
            </summary>
    </member>
    <member name="M:Mercury.Logging.PassFilter.#ctor">
      <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.PassFilter" />.
            </summary>
    </member>
    <member name="M:Mercury.Logging.PassFilter.#ctor(System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.PassFilter" /> with the specified fail value.
            </summary>
      <param name="fail">Determines whether to pass or fail requests.</param>
    </member>
    <member name="M:Mercury.Logging.PassFilter.Allow(Mercury.Logging.LogEntry)">
      <summary>
            Returns a value indicating whether the specified log entry can pass the filter.
            </summary>
      <param name="entry">The log entry to test.</param>
      <returns>True if the specified log entry can pass the filter; otherwise, false.</returns>
    </member>
    <member name="P:Mercury.Logging.PassFilter.Fail">
      <summary>
            Determines whether to pass or fail requests.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Loggers.MemoryLogger">
      <summary>
            Represents an in-memory logger that overwrites its oldest values when the buffer size is exceeded.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.#ctor">
      <summary>
            Initializes a default instance of the <see cref="T:Mercury.Logging.Loggers.MemoryLogger" /> class.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Loggers.MemoryLogger" /> class with the specified buffer size.
            </summary>
      <param name="bufferSize">The maximum number of elements to log in-memory.</param>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.CopyLog">
      <summary>
            Copies and returns all elements in the buffer as a new array.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.GetLogAsEnumerable">
      <summary>
            Returns the log as an enumerable sequence.
            </summary>
      <returns>An enumerable sequence of log entries.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.GetConsumingEnumerable">
      <summary>
            Returns the log as an enumerable sequence while sequentially removing its values.
            </summary>
      <returns>The log as an enumerable sequence.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.Clear">
      <summary>
            Removes all elements from the log.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.Compact">
      <summary>
            Compacts any null spaces in the buffer and resets the write head.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.Remove(System.Int32,System.String@)">
      <summary>
            Attempts to remove the value at the specified index.
            </summary>
      <param name="atIndex">The index of the value to be removed.</param>
      <param name="value">Out. The value that was removed.</param>
      <returns>True if the value at the specified index was removed; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.Remove(System.Int32,Mercury.Logging.LogEntry@)">
      <summary>
            Attempts to remove the log entry at the specified index.
            </summary>
      <param name="atIndex">The index of the value to be removed.</param>
      <param name="value">Out. The log entry that was removed.</param>
      <returns>True if the log entry at the specified index was removed; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.Write(System.Int32,System.String)">
      <summary>
            Writes the specified output directly to the memory buffer at the specified index.
            </summary>
      <param name="index">The index at which to write in the memory buffer.</param>
      <param name="output">The output text to write.</param>
      <returns>True if the write operation was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.Write(System.Int32,Mercury.Logging.LogEntry)">
      <summary>
            Writes the specified output directly to the memory buffer at the specified index.
            </summary>
      <param name="index">The index at which to write in the memory buffer.</param>
      <param name="output">The log entry to write.</param>
      <returns>True if the write operation was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.Flush">
      <summary>
            Flushes any output buffers, forcing data to be written to the log.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.DoLogEntry(Mercury.Logging.LogEntry)">
      <summary>
            Logs the specified log entry.
            </summary>
      <param name="entry">The log entry to log.</param>
      <returns>True if the log was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.WriteLog(System.String)">
      <summary>
            Logs the specified message string.
            </summary>
      <param name="message">The message string to log.</param>
      <returns>True if logging was successful; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.WriteToBuffer(Mercury.Logging.LogEntry)">
      <summary>
            Writes to the in-memory buffer.
            </summary>
      <param name="entry">The entry string to write.</param>
    </member>
    <member name="M:Mercury.Logging.Loggers.MemoryLogger.RemoveFromBuffer(System.Int32,Mercury.Logging.LogEntry@)">
      <summary>
            Removes the value at the specified index from the buffer.
            </summary>
      <param name="atIndex">The index of the value to remove.</param>
      <param name="value">Out. The value that was removed.</param>
      <returns>True if the value at the specified index was removed; otherwise, false.</returns>
    </member>
    <member name="P:Mercury.Logging.Loggers.MemoryLogger.BufferSize">
      <summary>
            Gets the maximum number of elements that can be logged in-memory.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Loggers.MemoryLogger.Filled">
      <summary>
            Gets a value indicating whether the buffer has been filled.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Loggers.MemoryLogger.Head">
      <summary>
            Gets the index position of the write head.
            </summary>
    </member>
    <member name="T:Mercury.Logging.LogEntry">
      <summary>
            Represents a message entry to a log.
            </summary>
    </member>
    <member name="M:Mercury.Logging.LogEntry.#ctor(System.String,Mercury.Logging.LogSeverity,System.Int32,System.DateTime,System.Int64,System.String,System.Func{System.String},System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.LogEntry" /> class with the specified values.
            </summary>
      <param name="loggerName">The name of the logger that created this entry.</param>
      <param name="severity">The severity of this entry.</param>
      <param name="eventId">The event identifier of this entry.</param>
      <param name="loggedDateTime">The date and time at which this entry was logged.</param>
      <param name="timestamp">The timestamp at which this entry was logged.</param>
      <param name="callStack">A snapshot of the call stack at the point in which this entry was logged.</param>
      <param name="messageFunc">A function generating the message to write.</param>
      <param name="rawMessage">The unformatted, raw message string.</param>
      <param name="args">The argument array used to format the raw message.</param>
      <param name="formatMessageArguments">A value indicating whether to format the message string with any provided arguments.</param>
      <param name="writeDirect">A value indicating whether this entry should bypass log formatting and write directly to the output.</param>
    </member>
    <member name="M:Mercury.Logging.LogEntry.GetFinalMessage">
      <summary>
            Gets the message text to be logged.
            </summary>
      <returns>The message text to be logged.</returns>
    </member>
    <member name="M:Mercury.Logging.LogEntry.ToString">
      <summary>
            Returns a string that represents the current log entry.
            </summary>
      <returns>A string that represents the current log entry.</returns>
    </member>
    <member name="P:Mercury.Logging.LogEntry.LoggerName">
      <summary>
            Gets the name of the logger that created this entry.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.Severity">
      <summary>
            Gets the severity of this entry.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.EventId">
      <summary>
            Gets the event identifier of this entry.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.ThreadId">
      <summary>
            Gets the identifier of the thread on which this entry was logged.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.ProcessId">
      <summary>
            Gets the identifier of the process on which this entry was logged.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.LoggedDateTime">
      <summary>
            Gets the date and time at which this entry was logged.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.Timestamp">
      <summary>
            Gets the timestamp at which this entry was logged.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.Callstack">
      <summary>
            Gets the call stack at which this entry was logged.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.FormatMessageArguments">
      <summary>
            Gets a value indicating whether to format the message string with any provided arguments.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.WriteDirect">
      <summary>
            Gets a value indicating whether this entry should bypass log formatting and write directly to the output.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.Message">
      <summary>
            Gets the message to log.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.FilterData">
      <summary>
            Gets the filter data to apply to this entry.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.RawMessage">
      <summary>
            Gets the unformatted, raw message string.
            </summary>
    </member>
    <member name="P:Mercury.Logging.LogEntry.Args">
      <summary>
            Gets any arguments that should be 
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1">
      <summary>
            A base class for extending the <see cref="T:System.Configuration.ConfigurationElementCollection" />.
            </summary>
      <typeparam name="TConfigurationElement">The System.Type of the ConfigurationElement contained in this collection.</typeparam>
    </member>
    <member name="F:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.DefaultConfigurationPropertyCollection">
      <summary>
            The default property collection.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.CreateNewElement">
      <summary>
            Creates a new <see cref="T:System.Configuration.ConfigurationElement" /> of the type of element contained in this collection.
            </summary>
      <returns>A new <see cref="T:System.Configuration.ConfigurationElement" /> of the type of element contained in this collection.</returns>
    </member>
    <member name="M:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>
            Gets the key that identifies the specified element in this collection.
            </summary>
      <param name="element">The element from which to extract the key.</param>
      <returns>The key that identifies the specified element in this collection.</returns>
    </member>
    <member name="M:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.IndexOf(`0)">
      <summary>
            Gets the index of the specified element.
            </summary>
      <param name="item">The element to find.</param>
      <returns>The index of the specified element.</returns>
    </member>
    <member name="M:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.Insert(System.Int32,`0)">
      <summary>
            Inserts the specified element at the specified index.
            </summary>
      <param name="index">The index at which to insert the element.</param>
      <param name="item">The element to insert.</param>
    </member>
    <member name="M:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.RemoveAt(System.Int32)">
      <summary>
            Removes the element at the specified index.
            </summary>
      <param name="index">The index of the element to remove.</param>
    </member>
    <member name="M:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.Add(`0)">
      <summary>
            Adds the element to the collection.
            </summary>
      <param name="item">The element to add.</param>
    </member>
    <member name="M:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.Clear">
      <summary>
            Removes all elements from the collection.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.Contains(`0)">
      <summary>
            Gets a value indicating whether the specified element exists in this collection.
            </summary>
      <param name="item">The element to test for existence.</param>
      <returns>True if the element exists in this collection; otherwise, false.</returns>
    </member>
    <member name="M:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.CopyTo(`0[],System.Int32)">
      <summary>
            Copies the elements of this collection into the specified array starting at the specified index within the array.
            </summary>
      <param name="array">The array into which the elements of this collection will be copied.</param>
      <param name="arrayIndex">The index in the array at which to begin copying elements.</param>
    </member>
    <member name="M:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.Remove(`0)">
      <summary>
            Removes the specified element from this collection.
            </summary>
      <param name="item">The element to remove.</param>
      <returns>A value indicating whether the specified element could be removed.</returns>
    </member>
    <member name="M:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.GetEnumerator">
      <summary>
            Gets an object used to enumerate elements in this collection.
            </summary>
      <returns>An object used to enumerate elements in this collection.</returns>
    </member>
    <member name="P:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.CollectionType">
      <summary>
            Gets the type of this ConfigurationElementCollection.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.Properties">
      <summary>
            Gets a collection of properties on this element.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.ElementName">
      <summary>
            Gets the XML element name used in configuration for the elements in this collection.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.Item(System.Int32)">
      <summary>
            Gets or sets the element at the specified index.
            </summary>
      <param name="index">The index of the element to get or set.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Mercury.Logging.Configuration.BaseConfigurationElementCollection`1.IsReadOnly">
      <summary>
            Gets a value indicating whether this collection is a read-only collection.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.ObjectRefCollection">
      <summary>
            Represents a collection of <see cref="T:Mercury.Logging.Configuration.ObjectRef" /> objects.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.ObjectRefCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>
            Gets the key that identifies the specified element in this collection.
            </summary>
      <param name="element">The element from which to extract the key.</param>
      <returns>The key that identifies the specified element in this collection.</returns>
    </member>
    <member name="P:Mercury.Logging.Configuration.ObjectRefCollection.ElementName">
      <summary>
            Gets the XML element name used in configuration for the elements in this collection.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.FrameworkObject">
      <summary>
            The base framework object class used in configuration.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.FrameworkObject.MergeProperties(System.Configuration.ConfigurationPropertyCollection)">
      <summary>
            Adds the properties on this base class to the specified property collection.
            </summary>
      <param name="properties">The property collection on which to add the base class properties.</param>
    </member>
    <member name="M:Mercury.Logging.Configuration.FrameworkObject.GetInstance">
      <summary>
            Generates an instance of this framework object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Mercury.Logging.Configuration.FrameworkObject.PrepareInstance(System.Object)">
      <summary>
            Configures the specified instance according to the parameters of this element.
            </summary>
      <param name="instance">The instance to configure.</param>
    </member>
    <member name="M:Mercury.Logging.Configuration.FrameworkObject.PostDeserialize">
      <summary>
            Called after deserialization
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.FrameworkObject.Parameters">
      <summary>
            Gets a collection of <see cref="T:Mercury.Logging.Configuration.Parameter" /> objects.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.FrameworkObject.Children">
      <summary>
            Gets a collection of object references with a child relationship to this object.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.FrameworkObject.Type">
      <summary>
            Gets the System.Type of this framework object.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.FrameworkObject.AssemblyString">
      <summary>
            Gets the assembly string for this instance.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.FrameworkObject.TypeString">
      <summary>
            Gets the type string for this instance.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.FrameworkObject.RefString">
      <summary>
            Gets the reference string for this instance.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.FrameworkObject.Id">
      <summary>
            Gets a unique identifier for this framework object.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.FormatterObject">
      <summary>
            Represents a logging framework formatter as defined in configuration.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.FormatterObject.Properties">
      <summary>
            Gets a collection of properties on this element.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.ParameterCollection">
      <summary>
            A collection of <see cref="T:Mercury.Logging.Configuration.Parameter" /> objects.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.ParameterCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>
            Gets the key that identifies the specified element in this collection.
            </summary>
      <param name="element">The element from which to extract the key.</param>
      <returns>The key that identifies the specified element in this collection.</returns>
    </member>
    <member name="P:Mercury.Logging.Configuration.ParameterCollection.ElementName">
      <summary>
            Gets the XML element name used in configuration for the elements in this collection.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.Parameter">
      <summary>
            Represents a parameter or property of a logging framework object.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.Parameter.Properties">
      <summary>
            Gets a collection of properties on this element.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.Parameter.Name">
      <summary>
            Gets the name of the parameter.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.Parameter.Value">
      <summary>
            Gets the string value of the parameter.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.LoggingSection">
      <summary>
            A configuration section for defining logging framework objects.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.LoggingSection.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
      <summary>
            Gets a value indicating whether an unknown attribute is encountered during deserialization.
            </summary>
      <param name="name">The name of the unrecognized attribute.</param>
      <param name="value">The value of the unrecognized attribute.</param>
      <returns>True when an unknown attribute is encountered during deserialization; otherwise, false.</returns>
    </member>
    <member name="P:Mercury.Logging.Configuration.LoggingSection.Properties">
      <summary>
            Gets a collection of properties on this element.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.LoggingSection.Root">
      <summary>
            Gets the root logging element.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.LoggingSection.Filters">
      <summary>
            Gets a collection of defined filter objects.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.LoggingSection.Formatters">
      <summary>
            Gets a collection of defined formatter objects.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.LoggingSection.Loggers">
      <summary>
            Gets a collection of defined loggers.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.ObjectRef">
      <summary>
            Represents a referenced logging framework object.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.ObjectRef.GetInstance">
      <summary>
            Gets an instance of the referenced object.
            </summary>
      <returns>An instance of the referenced object.</returns>
    </member>
    <member name="P:Mercury.Logging.Configuration.ObjectRef.Properties">
      <summary>
            Gets a collection of properties on this element.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.ObjectRef.ReferenceString">
      <summary>
            Gets the original reference string.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.ObjectRef.ReferenceType">
      <summary>
            Gets an instance of the referenced object.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.LoggerObject">
      <summary>
            Represents a <see cref="T:Mercury.Logging.Logger" /> as defined in configuration.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.LoggerObject.Properties">
      <summary>
            Gets a collection of properties on this element.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.FormatterObjectCollection">
      <summary>
            A collection of <see cref="T:Mercury.Logging.Configuration.FormatterObject" /> objects.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.FormatterObjectCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>
            Gets the key that identifies the specified element in this collection.
            </summary>
      <param name="element">The element from which to extract the key.</param>
      <returns>The key that identifies the specified element in this collection.</returns>
    </member>
    <member name="P:Mercury.Logging.Configuration.FormatterObjectCollection.ElementName">
      <summary>
            Gets the XML element name used in configuration for the elements in this collection.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.LoggerObjectCollection">
      <summary>
            A collection of <see cref="T:Mercury.Logging.Configuration.LoggerObject" /> objects.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.LoggerObjectCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>
            Gets the key that identifies the specified element in this collection.
            </summary>
      <param name="element">The element from which to extract the key.</param>
      <returns>The key that identifies the specified element in this collection.</returns>
    </member>
    <member name="P:Mercury.Logging.Configuration.LoggerObjectCollection.ElementName">
      <summary>
            Gets the XML element name used in configuration for the elements in this collection.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.FilterObject">
      <summary>
            Represents a logging framework filter as defined in configuration.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.FilterObject.Properties">
      <summary>
            Gets a collection of properties on this element.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.ConfigurationProvider">
      <summary>
            Provides a <see cref="T:System.Configuration.Configuration" /> object that can be used to access the configuration file. 
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.ConfigurationProvider.LoadConfiguration">
      <summary>
            Gets a <see cref="T:System.Configuration.Configuration" /> object used to access a specific configuration file.
            </summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object used to access a specific configuration file.</returns>
    </member>
    <member name="T:Mercury.Logging.Configuration.LogFramework">
      <summary>
            Provides methods for altering aspects of the logging framework.
            </summary>
    </member>
    <member name="F:Mercury.Logging.Configuration.LogFramework.DEFAULT_SECTION_NAME">
      <summary>
            The default section name within a configuration file from which the logging framework will load configuration data.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.LogFramework.GetLogger(System.Type)">
      <summary>
            Gets a logger constructed from configuration.
            </summary>
      <param name="type">The System.Type from which to derive the logger name.</param>
      <returns>A logger constructed from configuration.</returns>
    </member>
    <member name="M:Mercury.Logging.Configuration.LogFramework.GetLogger(System.Type,Mercury.Logging.Configuration.ConfigurationProvider)">
      <summary>
            Gets a logger constructed from configuration.
            </summary>
      <param name="type">The System.Type from which to derive the logger name.</param>
      <param name="provider">The configuration provider to use.  Null specifies the default provider.</param>
      <returns>A logger constructed from configuration.</returns>
    </member>
    <member name="M:Mercury.Logging.Configuration.LogFramework.GetLogger(System.Type,Mercury.Logging.Configuration.ConfigurationProvider,System.String)">
      <summary>
            Gets a logger constructed from configuration.
            </summary>
      <param name="type">The System.Type from which to derive the logger name.</param>
      <param name="provider">The configuration provider to use.  Null specifies the default provider.</param>
      <param name="sectionName">The name of the configuration section to load.  Null specifies the default configuration section.</param>
      <returns>A logger constructed from configuration.</returns>
    </member>
    <member name="M:Mercury.Logging.Configuration.LogFramework.GetLogger(System.String)">
      <summary>
            Gets a logger constructed from configuration.
            </summary>
      <param name="name">The name of the logger.</param>
      <returns>A logger constructed from configuration.</returns>
    </member>
    <member name="M:Mercury.Logging.Configuration.LogFramework.GetLogger(System.String,Mercury.Logging.Configuration.ConfigurationProvider)">
      <summary>
            Gets a logger constructed from configuration.
            </summary>
      <param name="name">The name of the logger.</param>
      <param name="provider">The configuration provider to use.  Null specifies the default provider.</param>
      <returns>A logger constructed from configuration.</returns>
    </member>
    <member name="M:Mercury.Logging.Configuration.LogFramework.GetLogger(System.String,Mercury.Logging.Configuration.ConfigurationProvider,System.String)">
      <summary>
            Gets a logger constructed from configuration.
            </summary>
      <param name="name">The name of the logger.</param>
      <param name="provider">The configuration provider to use.  Null specifies the default provider.</param>
      <param name="sectionName">The name of the configuration section to load.  Null specifies the default configuration section.</param>
      <returns>A logger constructed from configuration.</returns>
    </member>
    <member name="T:Mercury.Logging.Configuration.FilterObjectCollection">
      <summary>
            A collection of <see cref="T:Mercury.Logging.Configuration.FilterObject" /> objects.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.FilterObjectCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>
            Gets the key that identifies the specified element in this collection.
            </summary>
      <param name="element">The element from which to extract the key.</param>
      <returns>The key that identifies the specified element in this collection.</returns>
    </member>
    <member name="P:Mercury.Logging.Configuration.FilterObjectCollection.ElementName">
      <summary>
            Gets the XML element name used in configuration for the elements in this collection.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.LogRoot">
      <summary>
            Represents the root logging objects in configuration.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.LogRoot.GetInstance(System.String)">
      <summary>
            Gets an instance of the root logger.
            </summary>
      <param name="requestedName">The requested name for the logger.</param>
      <returns>An instance of the root logger.</returns>
    </member>
    <member name="M:Mercury.Logging.Configuration.LogRoot.PrepareInstance(Mercury.Logging.Logger,System.String)">
      <summary>
            Configures the specified instance according to the parameters of this element.
            </summary>
      <param name="instance">The instance to configure.</param>
      <param name="requestedName">The requested name for the specified <see cref="T:Mercury.Logging.Logger" />.</param>
    </member>
    <member name="M:Mercury.Logging.Configuration.LogRoot.PostDeserialize">
      <summary>
            Called after deserialization.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.LogRoot.Properties">
      <summary>
            Gets a collection of properties on this element.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.LogRoot.Parameters">
      <summary>
            Gets a collection of <see cref="T:Mercury.Logging.Configuration.Parameter" /> objects.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.LogRoot.Children">
      <summary>
            Gets a collection of logger objects associated with this root.
            </summary>
    </member>
    <member name="T:Mercury.Logging.Configuration.ClientConfigurationProvider">
      <summary>
            Provides a <see cref="T:System.Configuration.Configuration" /> object that can access configuration 
            files on a client application using the <see cref="T:System.Configuration.ConfigurationManager" />.
            </summary>
    </member>
    <member name="M:Mercury.Logging.Configuration.ClientConfigurationProvider.#ctor(System.Configuration.ConfigurationUserLevel)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Configuration.ClientConfigurationProvider" /> class with the specified configuration user level.
            </summary>
      <param name="userLevel">The configuration user level.</param>
    </member>
    <member name="M:Mercury.Logging.Configuration.ClientConfigurationProvider.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Mercury.Logging.Configuration.ClientConfigurationProvider" /> class with the specified congiguration file path.
            </summary>
      <param name="configPath">The path to the configuration file.</param>
    </member>
    <member name="M:Mercury.Logging.Configuration.ClientConfigurationProvider.LoadConfiguration">
      <summary>
            Gets a <see cref="T:System.Configuration.Configuration" /> object used to access a specific configuration file.
            </summary>
      <returns>A <see cref="T:System.Configuration.Configuration" /> object used to access a specific configuration file.</returns>
    </member>
    <member name="P:Mercury.Logging.Configuration.ClientConfigurationProvider.UserLevel">
      <summary>
            Gets the user configuration level.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.ClientConfigurationProvider.ConfigurationFilePath">
      <summary>
            Gets the path to the configuration file.
            </summary>
    </member>
    <member name="P:Mercury.Logging.Configuration.ClientConfigurationProvider.UseFilePath">
      <summary>
            Gets a value indicating whether the configuration file path will be used to open the configuration.  
            If a configuration file path is specified, it will be used instead of the user level.
            </summary>
    </member>
    <member name="T:Mercury.Strings">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:Mercury.Strings.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:Mercury.Strings.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:Mercury.Strings.Config_file_map_not_set_1">
      <summary>
              Looks up a localized string similar to The configuration at the specified path '{0}' could not be loaded..
            </summary>
    </member>
    <member name="P:Mercury.Strings.Does_not_support_IAddChild">
      <summary>
              Looks up a localized string similar to Cannot add child objects to an instance which does not support it..
            </summary>
    </member>
    <member name="P:Mercury.Strings.Duplicate_FrameworkObject_cache_key_1">
      <summary>
              Looks up a localized string similar to The specified key '{0}' already exists in the framework object cache..
            </summary>
    </member>
    <member name="P:Mercury.Strings.FrameworkObj_cache_requires_non_null_id">
      <summary>
              Looks up a localized string similar to Cannot cache a framework object whose 'Id' is null..
            </summary>
    </member>
  </members>
</doc>