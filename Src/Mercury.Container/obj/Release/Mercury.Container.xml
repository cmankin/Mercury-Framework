<?xml version="1.0"?>
<doc>
<assembly>
<name>
Mercury.Container
</name>
</assembly>
<members>
<member name="M:Mercury.Container.RegisteredObject.#ctor(System.Type,System.Type,Mercury.Container.LifeTime)">
	<summary>
 Initializes a default instance of the class with the 
 specified resolve type, concrete type, and LifeTime.
 </summary>
	<param name="resolveT">Type of object to resolve.</param>
	<param name="concreteT">Type of concrete object to return.</param>
	<param name="life">LifeTime of the object.</param>
	<remarks></remarks>
</member><member name="P:Mercury.Container.RegisteredObject.TypeToResolve">
	<summary>
 Gets the Type of the object to resolve to a concrete object.
 </summary>
	<value>Type of object to resolve to concrete.</value>
	<returns>Type of object to resolve to concrete.</returns>
	<remarks></remarks>
</member><member name="P:Mercury.Container.RegisteredObject.ConcreteType">
	<summary>
 Gets the Type of the concrete object.
 </summary>
	<value>Type of concrete object.</value>
	<returns>Type of concrete object.</returns>
	<remarks></remarks>
</member><member name="P:Mercury.Container.RegisteredObject.Life">
	<summary>
 Gets the LifeTime of the concrete type instance.
 </summary>
	<value>LifeTime of concrete instance.</value>
	<returns>LifeTime of concrete instance.</returns>
	<remarks></remarks>
</member><member name="P:Mercury.Container.RegisteredObject.Instance">
	<summary>
 Gets an instance of the concrete type.
 </summary>
	<value>Concrete type instance.</value>
	<returns>Concrete type instance.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Container.RegisteredObject.CreateInstance(System.Object[])">
	<summary>
 Creates an instance of the concrete type 
 with the specified arguments.
 </summary>
	<param name="args">Arguments to apply to concrete type.</param>
	<remarks></remarks>
</member><member name="T:Mercury.Container.RegisteredObject">
	<summary>
 Represents an abstract/concrete pair of objects registered to a container.
 </summary>
	<remarks></remarks>
</member><member name="F:Mercury.Container.LifeTime.Singleton">
	<summary>
 Single instance.  Does not expire.
 </summary>
	<remarks></remarks>
</member><member name="F:Mercury.Container.LifeTime.Transient">
	<summary>
 Multiple instances.  Expires out of caller scope.
 </summary>
	<remarks></remarks>
</member><member name="T:Mercury.Container.LifeTime">
	<summary>
 Life time value for container object(s).
 </summary>
	<remarks></remarks>
</member><member name="T:Mercury.Container.TypeNotRegisteredException">
	<summary>
 Thrown when attempting to resolve a type that is not registered with the container.
 </summary>
	<remarks></remarks>
</member><member name="F:Mercury.Container.MercuryContainer.registeredObjects">
	<summary>
 Private collection of RegisteredObject entities.
 </summary>
	<remarks></remarks>
</member><member name="T:Mercury.Container.MercuryContainer">
	<summary>
 Represents the basic container implementing the IContainer interface.
 </summary>
	<remarks></remarks>
</member><member name="M:Mercury.Container.IContainer.Register``2">
	<summary>
 Registers an abstract type with its concrete type implementation.
 </summary>
	<typeparam name="TToResolve">Abstract type to resolve.</typeparam>
	<typeparam name="TConcrete">Mapped concrete type.</typeparam>
	<remarks></remarks>
</member><member name="M:Mercury.Container.IContainer.Register``2(Mercury.Container.LifeTime)">
	<summary>
 Registers an abstract type with its concrete type implementation 
 and with the specified object LifeTime.
 </summary>
	<typeparam name="TToResolve">Abstract type to resolve.</typeparam>
	<typeparam name="TConcrete">Mapped concrete type.</typeparam>
	<param name="life">Object lifetime.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Container.IContainer.Register``1(System.Type,Mercury.Container.LifeTime)">
	<summary>
 Registers an abstract type with its concrete type implementation 
 and with the specified object LifeTime.
 </summary>
	<typeparam name="TToResolve">Abstract type to resolve.</typeparam>
	<param name="TConcrete">Mapped concrete type.</param>
	<param name="life">Object lifetime.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Container.IContainer.Register(System.Type,System.Type,Mercury.Container.LifeTime)">
	<summary>
 Registers an abstract type with its concrete type implementation 
 and with the specified object LifeTime.
 </summary>
	<param name="TToResolve">Abstract type to resolve.</param>
	<param name="TConcrete">Mapped concrete type.</param>
	<param name="life">Object lifetime.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Container.IContainer.Register(System.String,System.Type,System.Type,Mercury.Container.LifeTime)">
	<summary>
 Registers an abstract type with its concrete type implementation 
 and with the specified identifier and object LifeTime.
 </summary>
	<param name="identifier">The identifier of the concrete type.</param>
	<param name="TToResolve">Abstract type to resolve.</param>
	<param name="TConcrete">Mapped concrete type.</param>
	<param name="life">Object lifetime.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Container.IContainer.Resolve``1">
	<summary>
 Resolves an abstract type to its concrete implementation.
 </summary>
	<typeparam name="TToResolve">Abstract type to resolve.</typeparam>
	<returns>Abstract type wired to implementation.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Container.IContainer.Resolve``1(System.String)">
	<summary>
 Resolves an abstract type to its concrete implementation specified by the string identifier.
 </summary>
	<typeparam name="TToResolve">Abstract type to resolve.</typeparam>
	<param name="identifier">The identifier of the concrete type.</param>
	<returns>Abstract type wired to implementation.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Container.IContainer.Resolve(System.Type)">
	<summary>
 Resolves an abstract type to its concrete implementation.
 </summary>
	<param name="typeToResolve">Abstract Type object to resolve.</param>
	<returns>Object implementing the abstract type.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Container.IContainer.Resolve(System.String)">
	<summary>
 Resolves an abstract type to its concrete implementation specified by the string identifier.
 </summary>
	<param name="identifier">The identifier of the concrete type.</param>
	<returns>Object implementing the abstract type.</returns>
	<remarks></remarks>
</member><member name="T:Mercury.Container.IContainer">
	<summary>
 Represents a basic container.
 </summary>
	<remarks></remarks>
</member><member name="P:Mercury.Container.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Mercury.Container.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Mercury.Container.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>