<?xml version="1.0"?>
<doc>
<assembly>
<name>
Mercury.SettingsManager
</name>
</assembly>
<members>
<member name="E:Mercury.Settings.Internal.IInternalSettingsRoot.SettingsChanged">
	<summary>
 Represents a handle for a settings changed event.
 </summary>
	<remarks></remarks>
</member><member name="E:Mercury.Settings.Internal.IInternalSettingsRoot.SettingsRemoved">
	<summary>
 Represents a handle for a settings removed event.
 </summary>
	<remarks></remarks>
</member><member name="E:Mercury.Settings.Internal.IInternalSettingsRoot.SettingsAdded">
	<summary>
 Represents a handle for a settings added event.
 </summary>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.Internal.IInternalSettingsRoot.GetSection(System.String,System.String)">
	<summary>
 Returns a <see cref="T:System.Object"/> representing the data in a section of a settings file.
 </summary>
	<param name="section">The section to retrieve.</param>
	<param name="settingsPath">The path to the settings file.</param>
	<returns>A <see cref="T:System.Object"/> representing the data in a section of a settings file.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.Internal.IInternalSettingsRoot.GetSettingsRecord(System.String)">
	<summary>
 Gets the settings record on the settings file at the specified path.
 </summary>
	<param name="settingsPath">The path to the settings file.</param>
	<returns>The settings record on the settings file at the specified path.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.Internal.IInternalSettingsRoot.RemoveSettings(System.String)">
	<summary>
 Finds and deletes the settings file at the specified file path.
 </summary>
	<param name="settingsPath">The path to the settings file.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.Internal.IInternalSettingsRoot.AddSettings(System.String)">
	<summary>
 Attempts to add an empty settings file at the specified file path.
 </summary>
	<param name="settingsPath">The path to the settings file.</param>
	<returns>True if the new file was created; otherwise, false.</returns>
	<remarks></remarks>
</member><member name="T:Mercury.Settings.Internal.IInternalSettingsRoot">
	<summary>
 Internal interface to support a settings root object.
 </summary>
	<remarks></remarks>
</member><member name="T:Mercury.Settings.Internal.SettingsConfigurator">
	<summary>
 Provides configuration for a settings record.
 </summary>
	<remarks></remarks>
</member><member name="P:Mercury.Settings.Internal.InternalSettingsEventArgs.SettingsPath">
	<summary>
 Gets or sets the settings path related to the event.
 </summary>
	<returns>The settings path related to the event.</returns>
	<remarks></remarks>
</member><member name="T:Mercury.Settings.Internal.InternalSettingsEventArgs">
	<summary>
 Describes event data for some internal settings events.
 </summary>
	<remarks></remarks>
</member><member name="T:Mercury.InvalidFilePathException">
	<summary>
 Thrown when an invalid file path is encountered.
 </summary>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.#ctor">
	<summary>
 Initializes a default instance of the BaseSettingsRecord class.
 </summary>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.Init(Mercury.Settings.Internal.SettingsConfigurator)">
	<summary>
 Initializes this settings record with the specified configuration.
 </summary>
	<param name="configurator">The settings configurator with which to initialize.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.InitFromFile(System.String)">
	<summary>
 Partially initializes the settings record from the specified settings file.
 </summary>
	<param name="settingsPath">The path to the settings file.</param>
	<remarks></remarks>
</member><member name="P:Mercury.Settings.BaseSettingsRecord.SettingsRoot">
	<summary>
 Gets the internal settings root.
 </summary>
	<returns>The internal settings root.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.GetSection(System.String)">
	<summary>
 Returns the section object associated with the specified section name.
 </summary>
	<param name="section">The name of the section to retrieve.</param>
	<returns>The section object associated with the specified section name or null.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.GetSectionFromRecord(Mercury.Settings.SectionRecord)">
	<summary>
 Returns the section object described the specified section record.
 </summary>
	<param name="record">The section record describing the section to retrieve.</param>
	<returns>The section object described the specified section record or null.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.GetSectionFromXml(System.String,System.Type)">
	<summary>
 Returns the section with the specified name and type from the XML settings file.
 </summary>
	<param name="sectionName">The name of the section to retrieve.</param>
	<param name="sectionType">The type of the section to retrieve.</param>
	<returns>The section with the specified name and type from the XML settings file or null.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.Save(System.Boolean)">
	<summary>
 Saves the current in-memory sections to the settings file.
 </summary>
	<param name="forceSaveAll">A value indicating whether to save all 
 in-memory objects even if no changes have occurred.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.Save(System.String,System.Object,System.Boolean)">
	<summary>
 Saves the specified section with the specified section name to the settings file.
 </summary>
	<param name="sectionName">The name of the section element.</param>
	<param name="section">The section to save.</param>
	<param name="forceSaveAll">A value indicating whether to save all 
 in-memory objects even if no changes have occurred.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.AppendToInMemorySettings(System.String,Mercury.Settings.ISettingsHost)">
	<summary>
 Appends the specified section name and section to the list of in-memory objects.
 </summary>
	<param name="sectionName">The name of the section element.</param>
	<param name="section">The section to append.</param>
	<remarks>The list of in-memory objects is flushed and reset during every save.</remarks>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.WriteAttributes(System.Xml.XmlReader,System.Xml.XmlWriter)">
	<summary>
 Writes a set of attributes from the reader node to the writer.
 </summary>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.WriteSectionRecords(System.Xml.XmlWriter,System.Collections.Generic.ICollection{Mercury.Settings.SectionRecord})">
	<summary>
 Writes a collection of section records with the specified XML writer.
 </summary>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.WriteSection(System.Xml.XmlWriter,System.String,Mercury.Settings.ISettingsHost)">
	<summary>
 Writes a section element with the specified XML writer.
 </summary>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.ReadSectionFromXml(System.Xml.XmlReader,System.Type,System.Object@)">
	<summary>
 Reads a section element from the specified XML reader.
 </summary>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.ReadSectionRecord(System.Xml.XmlReader,Mercury.Settings.SectionRecord@)">
	<summary>
 Reads a section record from the specified XML reader.
 </summary>
</member><member name="M:Mercury.Settings.BaseSettingsRecord.QueueElement(System.Xml.XmlReader,System.String)">
	<summary>
 Moves the reader to the element with the specified local name.
 </summary>
	<param name="reader">The XML reader to use.</param>
	<param name="elementName">The name of the element to queue.</param>
	<returns>True if the element was found and the move was successful; otherwise, false.</returns>
	<remarks></remarks>
</member><member name="T:Mercury.Settings.BaseSettingsRecord">
	<summary>
 Represents a set of methods for actual access to settings data.
 </summary>
	<remarks></remarks>
</member><member name="T:Mercury.Settings.TypeUtil">
	<summary>
 An internal type utility for settings classes.
 </summary>
	<remarks></remarks>
</member><member name="P:Mercury.Settings.ISettingsHost.IsCurrent">
	<summary>
 Gets a value indicating whether settings are current.
 </summary>
	<returns>True if the settings are current with the settings file; otherwise, false.</returns>
	<remarks></remarks>
</member><member name="E:Mercury.Settings.ISettingsHost.SettingsChanged">
	<summary>
 An event that occurs when settings on an item have changed.
 </summary>
</member><member name="M:Mercury.Settings.ISettingsHost.Invalidate">
	<summary>
 Invalidates the settings host to a non-current state.
 </summary>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.ISettingsHost.Reset">
	<summary>
 Resets the settings host to a current state.
 </summary>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.ISettingsHost.Deserialize(System.Xml.XmlReader,System.Boolean)">
	<summary>
 Deserializes the settings host from the specified XML reader.
 </summary>
	<param name="reader">The XML reader from which to deserialize.</param>
	<param name="serializeCollectionKey"></param>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.ISettingsHost.Serialize(System.Xml.XmlWriter,System.String)">
	<summary>
 Serializes the settings host as the specified element name with the specified XML writer.
 </summary>
	<param name="writer">The XML writer to use.</param>
	<param name="elementName">The name of the serialized element.</param>
	<returns>True if serialization was successful; otherwise, false.</returns>
	<remarks></remarks>
</member><member name="T:Mercury.Settings.ISettingsHost">
	<summary>
 Represents a host for settings
 </summary>
	<remarks></remarks>
</member><member name="P:Mercury.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Mercury.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="P:Mercury.My.Resources.Resources.Invalid_File_Path">
	<summary>
  Looks up a localized string similar to The specified file path is of an invalid format..
</summary>
</member><member name="P:Mercury.My.Resources.Resources.Settings_Invalid_Parameter">
	<summary>
  Looks up a localized string similar to The parameter is not of a valid type or format..
</summary>
</member><member name="P:Mercury.My.Resources.Resources.Settings_Section_Has_Errors">
	<summary>
  Looks up a localized string similar to An error occurred while attempting to read/write a section..
</summary>
</member><member name="P:Mercury.My.Resources.Resources.Settings_type_not_inherit_from_type">
	<summary>
  Looks up a localized string similar to The type does not inherit from the specified type..
</summary>
</member><member name="P:Mercury.My.Resources.Resources.Settings_Type_Not_Public">
	<summary>
  Looks up a localized string similar to Attempted to resolve a non public type..
</summary>
</member><member name="T:Mercury.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="T:Mercury.Settings.Internal.InternalSettingsRoot">
	<summary>
 Represents a root for accessing the base settings record.
 </summary>
	<remarks></remarks>
</member><member name="P:Mercury.Settings.SettingsHostManager.SettingsRoot">
	<summary>
 Gets the internal settings root.
 </summary>
	<returns>The internal settings root.</returns>
	<remarks></remarks>
</member><member name="F:Mercury.Settings.SettingsHostManager.InMemorySections">
	<summary>
 A dictionary of current, in-memory sections.
 </summary>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.SettingsHostManager.Append(System.String,System.Object)">
	<summary>
 Adds the specified section and section name to the in-memory cache.  
 If the section already exists in the cache, it is updated.
 </summary>
	<param name="sectionName">The name of the section to add.</param>
	<param name="section">The section to add.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.SettingsHostManager.Save(System.String,System.Object)">
	<summary>
 Saves the specified section and section name to the in-memory cache.
 </summary>
	<param name="sectionName">The name of the section to save.</param>
	<param name="section">The section to save.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.SettingsHostManager.Save">
	<summary>
 Saves all in-memory sections to the settings file.
 </summary>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.SettingsHostManager.GetSection(System.String)">
	<summary>
 Gets the section with the specified name from the settings file.
 </summary>
	<param name="sectionName">The name of the section to retrieve.</param>
	<returns>The section with the specified name or null.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.SettingsHostManager.GetSectionFromMemory(System.String)">
	<summary>
 Gets a section from the in-memory cache. 
 </summary>
	<param name="sectionName">The name of the section to retrieve.</param>
	<returns>The in-memory section with the specified name or null.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.SettingsHostManager.IsInMemory(System.String)">
	<summary>
 Determines whether the section associated with the specified name is located in-memory.
 </summary>
	<param name="sectionName">The name of the section to locate.</param>
	<returns>True if the section associated with the specified name is located in-memory; otherwise, false.</returns>
	<remarks></remarks>
</member><member name="P:Mercury.Settings.SettingsHostManager.SettingsPath">
	<summary>
 Gets the path to the settings file.
 </summary>
	<returns>The path to the settings file.</returns>
	<remarks></remarks>
</member><member name="P:Mercury.Settings.SettingsHostManager.Encoding">
	<summary>
 Gets the file encoding to use on the settings file.
 </summary>
	<returns>The file encoding to use on the settings file.</returns>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.SettingsHostManager.SetEncoding(System.Text.Encoding)">
	<summary>
 Sets the file encoding to be used on the settings file.
 </summary>
	<param name="encoding">The encoding to use.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.SettingsHostManager.OpenSettingsFile(System.String)">
	<summary>
 Opens and retargets the manager to manage settings at the specified file path.
 </summary>
	<param name="path">The path to the settings file to manage.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.SettingsHostManager.RemoveSettings">
	<summary>
 Deletes the settings file.
 </summary>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.SettingsHostManager.RemoveSettings(System.String)">
	<summary>
 Deletes the settings file at the specified path.
 </summary>
	<param name="settingsPath">The path to the settings file to delete.</param>
	<remarks></remarks>
</member><member name="M:Mercury.Settings.SettingsHostManager.Reset">
	<summary>
 Resets the manager to its default state.
 </summary>
	<remarks></remarks>
</member><member name="T:Mercury.Settings.SettingsHostManager">
	<summary>
 A manager for general operations on a settings file.
 </summary>
	<remarks></remarks>
</member><member name="P:Mercury.Settings.SectionRecord.Name">
	<summary>
 Gets or sets the name of the section.
 </summary>
	<returns>The name of the section.</returns>
	<remarks></remarks>
</member><member name="P:Mercury.Settings.SectionRecord.TypeString">
	<summary>
 Gets or sets the type string for the section object.
 </summary>
	<returns>The type string for the section object.</returns>
	<remarks></remarks>
</member><member name="P:Mercury.Settings.SectionRecord.IsPersisted">
	<summary>
 Gets or sets a value indicating whether this section 
 record has been persisted within a current operation.
 </summary>
	<value></value>
	<returns>True if this section has been persisted; otherwise, false.</returns>
	<remarks></remarks>
</member><member name="P:Mercury.Settings.SectionRecord.HasErrors">
	<summary>
 Gets a value indicating whether this record has errors.
 </summary>
	<returns>True if the record has errors; otherwise, false.</returns>
	<remarks></remarks>
</member><member name="T:Mercury.Settings.SectionRecord">
	<summary>
 Represents a section in the settings file.
 </summary>
	<remarks></remarks>
</member><member name="P:Mercury.Settings.SettingsChangedEventArgs.IsCurrent">
	<summary>
 Gets a value indicating the state of the changed component.
 </summary>
	<returns>True if the state of the component is current; otherwise, false.</returns>
	<remarks></remarks>
</member><member name="T:Mercury.Settings.SettingsChangedEventArgs">
	<summary>
 Event data for the settings changed event.
 </summary>
	<remarks></remarks>
</member>
</members>
</doc>